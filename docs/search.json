{
  "articles": [
    {
      "path": "about.html",
      "title": "Wooram Seong(성우람)",
      "author": [],
      "contents": "\n\n          \n          \n          \n          \n          Homepage\n          \n          \n          Home\n          My Info\n          Portfolio\n          \n          \n          Assingnment\n           \n          ▾\n          \n          \n          Data Analysis(AmesHosuing)\n          Prediction(AmesHousing)\n          Time series\n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          ☰\n          \n          \n      \n        \n          \n            \n              \n            \n              Wooram Seong(성우람)\n            \n            \n              \n                \n                    \n                      \n                        Naver\n                      \n                    \n                  \n                                    \n                    \n                      \n                        Instagram\n                      \n                    \n                  \n                                    \n                    \n                      \n                        GitHub\n                      \n                    \n                  \n                                    \n                    \n                      \n                        Email\n                      \n                    \n                  \n                                  \n            \n          \n        \n        \n        \n          \n            \n            Self-Introduction\n            I am an actuarial student studying at Sungkyunkwan University from Korea.I’m in the second year on the way to a master’s degree.\n            I love talking about HipHop, Jazz, and DJing.\n            \n            \n            Education\n            Daejeon High School / 2009~2011\n            Sungkyunkwan University / 2013~2019\n            SGH Warsaw school of Economics / 2018 (Exchange Student)Sungkyunkwan graduate school / 2020~\n            \n            \n            I’m Traveler\n            Taiwan, China, Japan, Thailand, Indonesia, Vietnam, Spain, France, Italy, IBIZA(?_?), Poland, United Kingdom, Czech, Austria, Croatia, Hungary, Egypt\n            \n          \n        \n      \n    \n\n    \n      \n        \n          \n            \n              \n            \n              Wooram Seong(성우람)\n            \n            \n              \n                \n                                    \n                    \n                      Naver\n                    \n                  \n                                    \n                    \n                      Instagram\n                    \n                  \n                                    \n                    \n                      GitHub\n                    \n                  \n                                    \n                    \n                      Email\n                    \n                  \n                                  \n              \n            \n            \n              \n              Self-Introduction\n              I am an actuarial student studying at Sungkyunkwan University from Korea.I’m in the second year on the way to a master’s degree.\n              I love talking about HipHop, Jazz, and DJing.\n              \n              \n              Education\n              Daejeon High School / 2009~2011\n              Sungkyunkwan University / 2013~2019\n              SGH Warsaw school of Economics / 2018 (Exchange Student)Sungkyunkwan graduate school / 2020~\n              \n              \n              I’m Traveler\n              Taiwan, China, Japan, Thailand, Indonesia, Vietnam, Spain, France, Italy, IBIZA(?_?), Poland, United Kingdom, Czech, Austria, Croatia, Hungary, Egypt\n              \n            \n        \n      \n    \n\n    \n    \n    ",
      "last_modified": "2021-03-18T11:35:27+00:00"
    },
    {
      "path": "AmesHousing.html",
      "title": "Data Analysis(AmesHosuing)",
      "author": [],
      "contents": "\n필요 라이브러리 모음\n\n\nShow code\n\nlibrary(\"AmesHousing\")\nlibrary(\"tidyverse\")\nlibrary(\"rmarkdown\")\n\n\n\nInsight 1\nNorthRidge, NorthRigde Heights 동네는 서울의 성북동과 같이 소수의 부자들이 살고 있는 곳으로 보인다.\n\n\nShow code\n\nggplot(ames_raw, aes(x = SalePrice)) + \n  geom_histogram(bins = 400)\n\n\n\nShow code\n\nTable_SP<-ames_raw %>% select(Neighborhood,SalePrice, `Overall Qual`) %>%  group_by(Neighborhood) %>% \n  mutate(SalePrice_mean = mean(SalePrice, na.rm = TRUE)) %>% \n  filter(SalePrice_mean>=200000) %>% arrange(desc(SalePrice_mean)) \n\n\n\n\n 전체 집의 판매가격 분포\n\n\n지역별 집의 평균 판매가격은 다음과 같다.\n\n\n\nShow code\n\nTable_SP %>% group_by(Neighborhood) %>% \n  summarize(SalePrice_mean = mean(SalePrice)) %>% \n  filter(SalePrice_mean>=200000) %>% arrange(desc(SalePrice_mean))\n\n\n# A tibble: 10 x 2\n   Neighborhood SalePrice_mean\n   <chr>                 <dbl>\n 1 NoRidge             330319.\n 2 StoneBr             324229.\n 3 NridgHt             322018.\n 4 GrnHill             280000 \n 5 Veenker             248315.\n 6 Timber              246600.\n 7 Somerst             229707.\n 8 ClearCr             208662.\n 9 Crawfor             207551.\n10 CollgCr             201803.\n\n\n다음은 1~10위 평균 판매가격을 가진 지역들의 Boxplot이다.\n\n\nShow code\n\nggplot(Table_SP, aes(x = Neighborhood, y = SalePrice, fill=Neighborhood)) + geom_boxplot(alpha=0.5,show.legend = TRUE) +\n  theme(legend.position=\"none\") + stat_summary(geom='point',fun=mean,shape=23,size=3)\n\n\n\n\n\n 상위 10개 평균 판매가격 지역의 Boxplot\n\n\n\n\n\nNorthRidge 동네가 평균 판매가격이 가장 높다. (마름모가 평균을 의미한다.)\n평균 판매가격이 2위인 Stone Brook보다 중간값은 낮지만 Outlier들로 인해 평균 판매가격을 1위를 하게 됐다.\nNorthRidge Heights도 Outlier가 높은 편에 속한다.\nInsight 2\n판매가격을 종속변수로 잡고 다른 항목들을 독립변수로 대입해본 결과 Overall Qual 항 목이 제일 연관성이 높았다. (R^2 높게 산출됨.)\nOverall Qual 과 Overall Cond 에 대한 ANOVA 실행결과 :\n\n\nShow code\n\nEXP1 <- lm(SalePrice ~ `Overall Cond`,data = ames_raw)\nEXP2 <- lm(SalePrice ~ `Overall Qual` ,data = ames_raw)\nsummary(EXP1)\n\n\n\nCall:\nlm(formula = SalePrice ~ `Overall Cond`, data = ames_raw)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-194050  -49391  -17638   30088  577397 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      221457       7496  29.544  < 2e-16 ***\n`Overall Cond`    -7309       1321  -5.532 3.45e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 79490 on 2928 degrees of freedom\nMultiple R-squared:  0.01034,   Adjusted R-squared:   0.01 \nF-statistic:  30.6 on 1 and 2928 DF,  p-value: 3.453e-08\n\nShow code\n\nsummary(EXP2)\n\n\n\nCall:\nlm(formula = SalePrice ~ `Overall Qual`, data = ames_raw)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-197507  -29254   -2283   21658  397493 \n\nCoefficients:\n               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    -95003.6     3933.8  -24.15   <2e-16 ***\n`Overall Qual`  45251.0      628.8   71.96   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 48020 on 2928 degrees of freedom\nMultiple R-squared:  0.6388,    Adjusted R-squared:  0.6387 \nF-statistic:  5179 on 1 and 2928 DF,  p-value: < 2.2e-16\n\nOverall Qual 이 상대적으로 높은 R^2(0.6388)값과 작은 p-value가 산출됨\n\n\nShow code\n\nggplot(ames_raw, aes(x=`Overall Qual`, y=SalePrice ))+ \n  geom_point()+geom_smooth(method=lm, formula = y ~ x)\n\n\n\n\n\n Linear Method \n\n\n그래프 상으로도 높은 상관관계를 보임\n\n(이외에 다양한 변수들에 대하여 실험을 진행해봤으나 Overall Qual이 압도적이다.)\n\n\nShow code\n\names_raw %>% select(Neighborhood, `Overall Qual`) %>%\n  filter(Neighborhood %in% c(\"NoRidge\",\"StoneBr\",\"NridgHt\",\"GrnHill\",\"Veenker\",\"Timber\",\"Somerst\",\"ClearCr\",\"Crawfor\",\"CollgCr\")) %>%\n  group_by(Neighborhood) %>% summarize(MeanQual = mean(`Overall Qual`)) %>% arrange(desc(MeanQual))\n\n\n# A tibble: 10 x 2\n   Neighborhood MeanQual\n   <chr>           <dbl>\n 1 StoneBr          8.37\n 2 NridgHt          8.28\n 3 NoRidge          7.93\n 4 Somerst          7.40\n 5 Veenker          7.21\n 6 Timber           7.19\n 7 GrnHill          7   \n 8 CollgCr          6.68\n 9 Crawfor          6.27\n10 ClearCr          5.98\n\nShow code\n\nmean(ames_raw$`Overall Qual`)\n\n\n[1] 6.094881\n\n\n▲평균 Overall Qual\n\n\n\n\n평균 Overall Qual를 기준으로 상위 10개 지역을 산출해보았다. 평균 집 판매가격 순위와 비슷하게 산출됨을 알 수 있다. 당연한 결과였다.\n상위 5개 지역은 평균 Overall Qual 상회하고 있다.\n\n\nShow code\n\names_raw %>% select(Neighborhood, `Overall Qual`) %>%\n  filter(Neighborhood %in% c(\"NoRidge\",\"StoneBr\",\"NridgHt\",\"GrnHill\",\"Veenker\",\"Timber\",\"Somerst\",\"ClearCr\",\"Crawfor\",\"CollgCr\")) %>% ggplot(aes(x = Neighborhood, y = `Overall Qual`, fill=Neighborhood)) + geom_boxplot(alpha=0.5,show.legend = TRUE) +\n  theme(legend.position=\"none\") + stat_summary(geom='point',fun=mean,shape=23,size=3)\n\n\n\n\n\n 상위 10개 평균 Overall Qual를 갖는 지역의 Boxplot\n\n\n\n\n\nInsight 1에서와 같이 North Ridge는 Outlier의 결과가 많이 나온다.\nGreen Hills는 평균과 중간값이 같다. (지역 내 집이 2 채 밖에 없다.)\nInsight 3\n지붕 재료는 집들 중 98.53%(2930개의 집 중 2887개) 가 Standard Shingle을 사용했으나, 유독 Clear Creek 지역은 약 73%만 Standard Shingle을 사용하고, 나머지는 다른 지붕재료를 사용\n\n\nShow code\n\names_raw %>% count(`Roof Matl`)\n\n\n# A tibble: 8 x 2\n  `Roof Matl`     n\n* <chr>       <int>\n1 ClyTile         1\n2 CompShg      2887\n3 Membran         1\n4 Metal           1\n5 Roll            1\n6 Tar&Grv        23\n7 WdShake         9\n8 WdShngl         7\n\n▲ 지붕 재료 분포(Roof Matl)\n\n\nShow code\n\names_raw %>% select(Neighborhood, `Roof Matl`) %>% \n  filter(Neighborhood %in% c(\"Blmngtn\",\"Blueste\",\"BrDale\",\"ClearCr\",\"Greens\",\"Veenker\",\"GrnHill\",\"Landmrk\",\"MeadowV\",\"NPkVill\",\"SWISU\")) %>%\n  ggplot(aes(x=`Roof Matl`, y=`Neighborhood`))+ \n  geom_point()\n\n\n\n\n\n 집이 50개 이하로 있는 지역들의 지붕 재료 분포.\n\n\n유독 Clear Creek 지역만 다양한 지붕 재료를 가지는 것을 알 수 있다.\n\n\n\n\nShow code\n\names_raw %>% select(`Roof Matl`, Neighborhood) %>%\n  group_by('Roof Matl') %>% filter(`Roof Matl` == \"Tar&Grv\") %>%\n  count(Neighborhood)\n\n\n# A tibble: 7 x 3\n# Groups:   \"Roof Matl\" [1]\n  `\"Roof Matl\"` Neighborhood     n\n  <chr>         <chr>        <int>\n1 Roof Matl     ClearCr          7\n2 Roof Matl     Edwards          5\n3 Roof Matl     NAmes            7\n4 Roof Matl     Sawyer           1\n5 Roof Matl     SawyerW          1\n6 Roof Matl     SWISU            1\n7 Roof Matl     Timber           1\n\nShow code\n\names_raw %>% select(`Roof Matl`, Neighborhood) %>%\n  group_by('Roof Matl') %>% filter(`Roof Matl` == \"WdShake\") %>%\n  count(Neighborhood)\n\n\n# A tibble: 5 x 3\n# Groups:   \"Roof Matl\" [1]\n  `\"Roof Matl\"` Neighborhood     n\n  <chr>         <chr>        <int>\n1 Roof Matl     ClearCr          1\n2 Roof Matl     NAmes            2\n3 Roof Matl     NoRidge          1\n4 Roof Matl     NWAmes           3\n5 Roof Matl     Timber           2\n\nShow code\n\names_raw %>% select(`Roof Matl`, Neighborhood) %>%\n  group_by('Roof Matl') %>% filter(`Roof Matl` == \"WdShngl\") %>%\n  count(Neighborhood)\n\n\n# A tibble: 6 x 3\n# Groups:   \"Roof Matl\" [1]\n  `\"Roof Matl\"` Neighborhood     n\n  <chr>         <chr>        <int>\n1 Roof Matl     ClearCr          2\n2 Roof Matl     NAmes            1\n3 Roof Matl     NoRidge          1\n4 Roof Matl     NWAmes           1\n5 Roof Matl     OldTown          1\n6 Roof Matl     Veenker          1\n\n▲ 지붕 재료에 따른 지역 분포(Tar&Grv, Wdshake, Wdshangl)\nClear Creek 지역은 각 재료를 골고루 가지고 있다.\n\n\nShow code\n\names_raw %>% select(Neighborhood, `Roof Matl`) %>% \n  filter(Neighborhood == \"ClearCr\") %>% count(`Roof Matl`) %>%\n  ggplot(aes(x = n, y = fct_reorder(`Roof Matl`, n))) +\n  geom_col() + xlab('Number of House in Clear Creek') +ylab('Roof Matl')\n\n\n\n\n\n Clear Creek 지역의 지붕 재료 분포.\n\n\n\n\n\nInsight 4\nFence 가 Minimum Wood/Wire 인 경우는 대부분 North Ames에 속했다.(총 12 건중 9건)\n\nShow code\n\nggplot(ames_raw, aes(x=Fence, y=SalePrice, color=Neighborhood))+ \n  geom_point()+geom_smooth(method=lm, formula = y ~ x)\n\n\n\n\n\n Fence 유형에 따른 지역 분포.\n\n\nMnWw 항목은 다른 항목과 달리 같은 색깔의 점(Names)들이 모여 있다.\n\n이제 Fence가 MnWw인 지역들을 파악해보자.\n\n\nShow code\n\names_raw %>% select(Neighborhood, Fence) %>% filter(Fence == \"MnWw\")\n\n\n# A tibble: 12 x 2\n   Neighborhood Fence\n   <chr>        <chr>\n 1 OldTown      MnWw \n 2 OldTown      MnWw \n 3 NAmes        MnWw \n 4 NAmes        MnWw \n 5 BrkSide      MnWw \n 6 NAmes        MnWw \n 7 NAmes        MnWw \n 8 NAmes        MnWw \n 9 NAmes        MnWw \n10 NAmes        MnWw \n11 NAmes        MnWw \n12 NAmes        MnWw \n\n\nFence가 MnWw인 경우는 총 12건이고, 그 중 9 건이 North Ames이다.\n\n\n\nShow code\n\names_raw %>% count(Neighborhood) %>% filter(n>100) %>%\n  ggplot(aes(x = n, y = fct_reorder(Neighborhood, n))) +\n  geom_col()\n\n\n\n\n\n 집이 100 채 이상인 지역들의 집 개수 .\n\n\n비록 North Ames 지역에 집이 가장 많이 있더라도, MnWw는 지역들의 집 개수 순위와 비례하지 않음을 알 수 있다.\n\n\n그 외\n최근에 지어지거나, 리모델링한 집일 수록 판매가격이 높다.\n\n\nShow code\n\names_raw %>%  select(Neighborhood,`Year Remod/Add`,SalePrice) %>% group_by(Neighborhood) %>% \n  summarize(YearMean = mean(`Year Remod/Add`),SPMean = mean(SalePrice)) %>% arrange(desc(YearMean), desc(SPMean))\n\n\n# A tibble: 28 x 3\n   Neighborhood YearMean  SPMean\n   <chr>           <dbl>   <dbl>\n 1 NridgHt         2006. 322018.\n 2 Blmngtn         2005. 196662.\n 3 Somerst         2005. 229707.\n 4 StoneBr         2000. 324229.\n 5 CollgCr         1999. 201803.\n 6 Gilbert         1999. 190647.\n 7 Timber          1997. 246600.\n 8 NoRidge         1997. 330319.\n 9 Landmrk         1994  137000 \n10 SawyerW         1993. 184070.\n# … with 18 more rows\n\nYear Remod/Add를 평균하여 내림차순으로 정렬해 SalePrice와의 연관성을 알아보려 했지만 관계가 잘 나타나지 않았다.\n\n\nShow code\n\nEXP3 <- lm(SalePrice ~ `Year Remod/Add`, data = ames_raw)\nsummary(EXP3)\n\n\n\nCall:\nlm(formula = SalePrice ~ `Year Remod/Add`, data = ames_raw)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-167033  -39851   -8530   25769  552296 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)      -3.869e+06  1.188e+05  -32.56   <2e-16 ***\n`Year Remod/Add`  2.041e+03  5.988e+01   34.08   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 67610 on 2928 degrees of freedom\nMultiple R-squared:  0.2841,    Adjusted R-squared:  0.2838 \nF-statistic:  1162 on 1 and 2928 DF,  p-value: < 2.2e-16\n\nShow code\n\nggplot(ames_raw, aes(x=`Year Remod/Add`, y=SalePrice))+ \n  geom_point()+geom_smooth(method=lm, formula = y ~ x)\n\n\n\n\n\n Linear Method .\n\n\n\n\nLinear method를 통해 상관 관계가 있는 것을 발견하였다.\n하지만 Year ReMod/Add 는 Insight 2의 Overall Qual에 비해 R^2 값도 낮고 상관관계가 크지도 않았다.\n실수 목록들\n띄어쓰기된 열이름에 mean이 적용되지 않아서 이름을 변경함.\nex) Year Remod/Add -> FinalYear /\n`을 ’ 로 착각해서 이런 오류가 발생하였고, 띄어쓰기는 상관 없었다.\n\n\n\n",
      "last_modified": "2021-03-18T11:36:31+00:00"
    },
    {
      "path": "AmesHousing2.html",
      "title": "Prediction With AmesHousing",
      "author": [],
      "contents": "\n필요 라이브러리 모음\n\n\nShow code\n\nlibrary(\"tidyverse\")\nlibrary(\"readr\")\nlibrary(\"car\")\nlibrary(\"xlsx\")\n\n\n\n데이터 정리 작업 (NA처리)\n\n\nShow code\n\ntrain <- read_csv(\"Lecture3/train.csv\")\ntest <- read_csv(\"Lecture3/test.csv\")\n\ntest$KitchenQual <- ifelse(is.na(test$KitchenQual),\"TA\", test$KitchenQual)\ntest$GarageCars <- ifelse(is.na(test$GarageCars),0, test$GarageCars)\n\nsample <- read_csv(\"Lecture3/sample_submission.csv\")\n\n\n\n1. Linear Model 로 분석\n(1) Stepwise Regression을 사용하여 독립변수들을 선정하였다.(2) Car 패키지를 이용하여 VIF가 10이 넘는 변수들을 제거해준다.(3) Plot을 통해 Outliers과 Influential points를 제거해준다 .\n결과\nLinear 모델의 단점인 종속변수의 음수값이 나왔었다.\nTrain Data로 부터 최종 Adjusted R-Squared는 0.8446이 나왔다.\nTest MSE를 Square Root 한 결과 69273.98 값이 나왔다.\n\n\nShow code\n\nEXP1 <- lm(SalePrice ~ OverallQual,data = train)\nEXP2 <- lm(SalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + YearRemodAdd + MasVnrArea + TotalBsmtSF + GrLivArea + FullBath +      \n             HalfBath + BedroomAbvGr + KitchenQual +TotRmsAbvGrd + Fireplaces + GarageCars + PoolArea + MiscVal , data = train)\nEXP3 <- lm(SalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + FullBath +      \n             HalfBath + BedroomAbvGr + KitchenQual +TotRmsAbvGrd + GarageCars + PoolArea + MiscVal , data = train)\n\nsummary(EXP1)\n\n\n\nCall:\nlm(formula = SalePrice ~ OverallQual, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-198152  -29409   -1845   21463  396848 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -96206.1     5756.4  -16.71   <2e-16 ***\nOverallQual  45435.8      920.4   49.36   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 48620 on 1458 degrees of freedom\nMultiple R-squared:  0.6257,    Adjusted R-squared:  0.6254 \nF-statistic:  2437 on 1 and 1458 DF,  p-value: < 2.2e-16\n\nShow code\n\nsummary(EXP3)\n\n\n\nCall:\nlm(formula = SalePrice ~ OverallQual + OverallCond + LotArea + \n    YearBuilt + YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + \n    FullBath + HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + \n    GarageCars + PoolArea + MiscVal, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-492110  -16130   -1478   13750  270435 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -1.036e+06  1.400e+05  -7.401 2.28e-13 ***\nOverallQual    1.401e+04  1.178e+03  11.895  < 2e-16 ***\nOverallCond    6.393e+03  1.001e+03   6.386 2.29e-10 ***\nLotArea        6.026e-01  9.907e-02   6.083 1.51e-09 ***\nYearBuilt      4.615e+02  5.576e+01   8.275 2.88e-16 ***\nYearRemodAdd   5.593e+01  6.886e+01   0.812   0.4168    \nFireplaces     7.098e+03  1.692e+03   4.196 2.88e-05 ***\nTotalBsmtSF    2.046e+01  2.976e+00   6.874 9.27e-12 ***\nGrLivArea      4.987e+01  4.386e+00  11.370  < 2e-16 ***\nFullBath      -1.398e+03  2.699e+03  -0.518   0.6047    \nHalfBath      -1.731e+03  2.381e+03  -0.727   0.4674    \nBedroomAbvGr  -5.942e+03  1.675e+03  -3.548   0.0004 ***\nKitchenQualFa -4.342e+04  7.854e+03  -5.528 3.84e-08 ***\nKitchenQualGd -4.815e+04  4.183e+03 -11.511  < 2e-16 ***\nKitchenQualTA -5.474e+04  4.881e+03 -11.214  < 2e-16 ***\nTotRmsAbvGrd   1.957e+03  1.196e+03   1.635   0.1022    \nGarageCars     1.268e+04  1.691e+03   7.499 1.12e-13 ***\nPoolArea      -3.267e+01  2.340e+01  -1.396   0.1628    \nMiscVal       -5.314e-01  1.855e+00  -0.287   0.7745    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34860 on 1441 degrees of freedom\nMultiple R-squared:  0.8098,    Adjusted R-squared:  0.8074 \nF-statistic: 340.8 on 18 and 1441 DF,  p-value: < 2.2e-16\n\nShow code\n\n#StepWise Regression\n\n## MasVnrArea NA가 데이터 값 중에 있었다. 그래서 자꾸만 오류가 생김\nsum(is.na(train$MasVnrArea))\n\n\n[1] 8\n\nShow code\n\n# 총 8개 건수 발견, 차라리 변수로 고려하지 않는 게 낫다고 판단하였다.\n\nTrain.Forward <- step(EXP1,scope=list(lower=EXP1,upper=EXP3),direction = \"forward\")\n\n\nStart:  AIC=31514.19\nSalePrice ~ OverallQual\n\n               Df  Sum of Sq        RSS   AIC\n+ GrLivArea     1 8.1510e+11 2.6319e+12 31122\n+ TotalBsmtSF   1 4.5878e+11 2.9882e+12 31308\n+ TotRmsAbvGrd  1 4.3112e+11 3.0158e+12 31321\n+ KitchenQual   3 4.0509e+11 3.0419e+12 31338\n+ GarageCars    1 3.9357e+11 3.0534e+12 31339\n+ LotArea       1 3.0223e+11 3.1447e+12 31382\n+ Fireplaces    1 2.5614e+11 3.1908e+12 31404\n+ FullBath      1 2.0696e+11 3.2400e+12 31426\n+ BedroomAbvGr  1 7.1706e+10 3.3753e+12 31486\n+ YearRemodAdd  1 6.7599e+10 3.3794e+12 31487\n+ YearBuilt     1 6.7481e+10 3.3795e+12 31487\n+ HalfBath      1 4.5758e+10 3.4012e+12 31497\n+ PoolArea      1 1.5437e+10 3.4315e+12 31510\n<none>                       3.4470e+12 31514\n+ OverallCond   1 2.4526e+08 3.4467e+12 31516\n+ MiscVal       1 1.2294e+08 3.4468e+12 31516\n\nStep:  AIC=31122.28\nSalePrice ~ OverallQual + GrLivArea\n\n               Df  Sum of Sq        RSS   AIC\n+ KitchenQual   3 3.3056e+11 2.3013e+12 30932\n+ TotalBsmtSF   1 2.5684e+11 2.3750e+12 30974\n+ GarageCars    1 2.2924e+11 2.4026e+12 30991\n+ YearBuilt     1 2.1371e+11 2.4182e+12 31001\n+ LotArea       1 1.1186e+11 2.5200e+12 31061\n+ YearRemodAdd  1 9.8062e+10 2.5338e+12 31069\n+ BedroomAbvGr  1 9.4784e+10 2.5371e+12 31071\n+ Fireplaces    1 5.8153e+10 2.5737e+12 31092\n+ HalfBath      1 7.4793e+09 2.6244e+12 31120\n+ TotRmsAbvGrd  1 7.3007e+09 2.6246e+12 31120\n<none>                       2.6319e+12 31122\n+ FullBath      1 2.8066e+09 2.6291e+12 31123\n+ PoolArea      1 5.7133e+08 2.6313e+12 31124\n+ OverallCond   1 1.6095e+08 2.6317e+12 31124\n+ MiscVal       1 5.0359e+07 2.6318e+12 31124\n\nStep:  AIC=30932.33\nSalePrice ~ OverallQual + GrLivArea + KitchenQual\n\n               Df  Sum of Sq        RSS   AIC\n+ GarageCars    1 1.8490e+11 2.1164e+12 30812\n+ TotalBsmtSF   1 1.8017e+11 2.1211e+12 30815\n+ YearBuilt     1 1.7064e+11 2.1307e+12 30822\n+ LotArea       1 1.1345e+11 2.1879e+12 30860\n+ Fireplaces    1 5.8401e+10 2.2429e+12 30897\n+ BedroomAbvGr  1 3.9009e+10 2.2623e+12 30909\n+ YearRemodAdd  1 3.7367e+10 2.2639e+12 30910\n+ TotRmsAbvGrd  1 6.2099e+09 2.2951e+12 30930\n+ FullBath      1 3.8614e+09 2.2974e+12 30932\n+ HalfBath      1 3.6577e+09 2.2977e+12 30932\n<none>                       2.3013e+12 30932\n+ PoolArea      1 1.2278e+09 2.3001e+12 30934\n+ MiscVal       1 1.4946e+08 2.3012e+12 30934\n+ OverallCond   1 3.6656e+06 2.3013e+12 30934\n\nStep:  AIC=30812.04\nSalePrice ~ OverallQual + GrLivArea + KitchenQual + GarageCars\n\n               Df  Sum of Sq        RSS   AIC\n+ TotalBsmtSF   1 1.3828e+11 1.9781e+12 30715\n+ LotArea       1 9.2332e+10 2.0241e+12 30749\n+ YearBuilt     1 8.7006e+10 2.0294e+12 30753\n+ Fireplaces    1 4.9973e+10 2.0664e+12 30779\n+ BedroomAbvGr  1 2.8191e+10 2.0882e+12 30794\n+ YearRemodAdd  1 2.6541e+10 2.0899e+12 30796\n+ TotRmsAbvGrd  1 8.1915e+09 2.1082e+12 30808\n+ OverallCond   1 6.5123e+09 2.1099e+12 30810\n+ HalfBath      1 4.4143e+09 2.1120e+12 30811\n<none>                       2.1164e+12 30812\n+ MiscVal       1 5.5245e+08 2.1159e+12 30814\n+ PoolArea      1 1.1385e+08 2.1163e+12 30814\n+ FullBath      1 7.4780e+07 2.1163e+12 30814\n\nStep:  AIC=30715.39\nSalePrice ~ OverallQual + GrLivArea + KitchenQual + GarageCars + \n    TotalBsmtSF\n\n               Df  Sum of Sq        RSS   AIC\n+ YearBuilt     1 5.9255e+10 1.9189e+12 30673\n+ LotArea       1 5.5440e+10 1.9227e+12 30676\n+ Fireplaces    1 3.4847e+10 1.9433e+12 30691\n+ YearRemodAdd  1 2.9330e+10 1.9488e+12 30696\n+ OverallCond   1 1.6573e+10 1.9616e+12 30705\n+ BedroomAbvGr  1 1.5518e+10 1.9626e+12 30706\n+ HalfBath      1 3.7127e+09 1.9744e+12 30715\n<none>                       1.9781e+12 30715\n+ PoolArea      1 1.7847e+09 1.9763e+12 30716\n+ TotRmsAbvGrd  1 1.1839e+09 1.9769e+12 30716\n+ FullBath      1 1.0028e+09 1.9771e+12 30717\n+ MiscVal       1 5.3575e+08 1.9776e+12 30717\n\nStep:  AIC=30672.99\nSalePrice ~ OverallQual + GrLivArea + KitchenQual + GarageCars + \n    TotalBsmtSF + YearBuilt\n\n               Df  Sum of Sq        RSS   AIC\n+ OverallCond   1 6.3989e+10 1.8549e+12 30626\n+ LotArea       1 6.1642e+10 1.8572e+12 30627\n+ Fireplaces    1 4.0577e+10 1.8783e+12 30644\n+ BedroomAbvGr  1 1.6686e+10 1.9022e+12 30662\n+ YearRemodAdd  1 1.0167e+10 1.9087e+12 30667\n<none>                       1.9189e+12 30673\n+ FullBath      1 2.4577e+09 1.9164e+12 30673\n+ PoolArea      1 1.7087e+09 1.9172e+12 30674\n+ TotRmsAbvGrd  1 8.2504e+08 1.9180e+12 30674\n+ MiscVal       1 4.7843e+08 1.9184e+12 30675\n+ HalfBath      1 2.5803e+07 1.9188e+12 30675\n\nStep:  AIC=30625.47\nSalePrice ~ OverallQual + GrLivArea + KitchenQual + GarageCars + \n    TotalBsmtSF + YearBuilt + OverallCond\n\n               Df  Sum of Sq        RSS   AIC\n+ LotArea       1 5.7430e+10 1.7975e+12 30582\n+ Fireplaces    1 3.8017e+10 1.8169e+12 30597\n+ BedroomAbvGr  1 1.9207e+10 1.8357e+12 30612\n<none>                       1.8549e+12 30626\n+ PoolArea      1 1.8867e+09 1.8530e+12 30626\n+ FullBath      1 1.2440e+09 1.8536e+12 30626\n+ TotRmsAbvGrd  1 5.9049e+08 1.8543e+12 30627\n+ YearRemodAdd  1 3.3902e+08 1.8545e+12 30627\n+ HalfBath      1 2.4897e+08 1.8546e+12 30627\n+ MiscVal       1 7.3728e+06 1.8549e+12 30628\n\nStep:  AIC=30581.55\nSalePrice ~ OverallQual + GrLivArea + KitchenQual + GarageCars + \n    TotalBsmtSF + YearBuilt + OverallCond + LotArea\n\n               Df  Sum of Sq        RSS   AIC\n+ Fireplaces    1 2.4797e+10 1.7727e+12 30563\n+ BedroomAbvGr  1 1.7971e+10 1.7795e+12 30569\n<none>                       1.7975e+12 30582\n+ PoolArea      1 2.3282e+09 1.7951e+12 30582\n+ FullBath      1 1.0870e+09 1.7964e+12 30583\n+ YearRemodAdd  1 6.5986e+08 1.7968e+12 30583\n+ TotRmsAbvGrd  1 2.2348e+08 1.7972e+12 30583\n+ HalfBath      1 5.6213e+07 1.7974e+12 30584\n+ MiscVal       1 3.9665e+07 1.7974e+12 30584\n\nStep:  AIC=30563.27\nSalePrice ~ OverallQual + GrLivArea + KitchenQual + GarageCars + \n    TotalBsmtSF + YearBuilt + OverallCond + LotArea + Fireplaces\n\n               Df  Sum of Sq        RSS   AIC\n+ BedroomAbvGr  1 1.3358e+10 1.7593e+12 30554\n+ PoolArea      1 2.6108e+09 1.7700e+12 30563\n<none>                       1.7727e+12 30563\n+ YearRemodAdd  1 1.9545e+09 1.7707e+12 30564\n+ HalfBath      1 3.4944e+08 1.7723e+12 30565\n+ FullBath      1 3.1063e+08 1.7723e+12 30565\n+ MiscVal       1 4.1361e+07 1.7726e+12 30565\n+ TotRmsAbvGrd  1 6.1731e+06 1.7726e+12 30565\n\nStep:  AIC=30554.22\nSalePrice ~ OverallQual + GrLivArea + KitchenQual + GarageCars + \n    TotalBsmtSF + YearBuilt + OverallCond + LotArea + Fireplaces + \n    BedroomAbvGr\n\n               Df  Sum of Sq        RSS   AIC\n+ TotRmsAbvGrd  1 3999011047 1.7553e+12 30553\n+ PoolArea      1 2928508447 1.7564e+12 30554\n<none>                       1.7593e+12 30554\n+ YearRemodAdd  1 1128448911 1.7582e+12 30555\n+ HalfBath      1  461660582 1.7588e+12 30556\n+ MiscVal       1   60611462 1.7592e+12 30556\n+ FullBath      1     927283 1.7593e+12 30556\n\nStep:  AIC=30552.9\nSalePrice ~ OverallQual + GrLivArea + KitchenQual + GarageCars + \n    TotalBsmtSF + YearBuilt + OverallCond + LotArea + Fireplaces + \n    BedroomAbvGr + TotRmsAbvGrd\n\n               Df  Sum of Sq        RSS   AIC\n<none>                       1.7553e+12 30553\n+ PoolArea      1 2338380139 1.7530e+12 30553\n+ YearRemodAdd  1  817282499 1.7545e+12 30554\n+ HalfBath      1  385816437 1.7549e+12 30555\n+ MiscVal       1  132183016 1.7552e+12 30555\n+ FullBath      1   17544355 1.7553e+12 30555\n\nShow code\n\nTrain.Backward <- step(EXP3,scope=list(lower=EXP1,upper=EXP3),direction = \"backward\")\n\n\nStart:  AIC=30559.65\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea + MiscVal\n\n               Df  Sum of Sq        RSS   AIC\n- MiscVal       1 9.9794e+07 1.7515e+12 30558\n- FullBath      1 3.2589e+08 1.7517e+12 30558\n- HalfBath      1 6.4217e+08 1.7520e+12 30558\n- YearRemodAdd  1 8.0186e+08 1.7522e+12 30558\n- PoolArea      1 2.3696e+09 1.7538e+12 30560\n<none>                       1.7514e+12 30560\n- TotRmsAbvGrd  1 3.2500e+09 1.7546e+12 30560\n- BedroomAbvGr  1 1.5302e+10 1.7667e+12 30570\n- Fireplaces    1 2.1401e+10 1.7728e+12 30575\n- LotArea       1 4.4969e+10 1.7964e+12 30595\n- OverallCond   1 4.9564e+10 1.8010e+12 30598\n- TotalBsmtSF   1 5.7429e+10 1.8088e+12 30605\n- GarageCars    1 6.8356e+10 1.8197e+12 30614\n- YearBuilt     1 8.3232e+10 1.8346e+12 30625\n- GrLivArea     1 1.5713e+11 1.9085e+12 30683\n- KitchenQual   3 1.7852e+11 1.9299e+12 30695\n\nStep:  AIC=30557.73\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea\n\n               Df  Sum of Sq        RSS   AIC\n- FullBath      1 3.2829e+08 1.7518e+12 30556\n- HalfBath      1 6.4532e+08 1.7521e+12 30556\n- YearRemodAdd  1 7.9687e+08 1.7523e+12 30556\n<none>                       1.7515e+12 30558\n- PoolArea      1 2.4047e+09 1.7539e+12 30558\n- TotRmsAbvGrd  1 3.1936e+09 1.7547e+12 30558\n- BedroomAbvGr  1 1.5229e+10 1.7667e+12 30568\n- Fireplaces    1 2.1397e+10 1.7729e+12 30574\n- LotArea       1 4.4872e+10 1.7964e+12 30593\n- OverallCond   1 4.9494e+10 1.8010e+12 30596\n- TotalBsmtSF   1 5.7415e+10 1.8089e+12 30603\n- GarageCars    1 6.8574e+10 1.8201e+12 30612\n- YearBuilt     1 8.3136e+10 1.8346e+12 30623\n- GrLivArea     1 1.5736e+11 1.9088e+12 30681\n- KitchenQual   3 1.7886e+11 1.9303e+12 30694\n\nStep:  AIC=30556\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + HalfBath + \n    BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea\n\n               Df  Sum of Sq        RSS   AIC\n- HalfBath      1 4.0727e+08 1.7522e+12 30554\n- YearRemodAdd  1 6.9863e+08 1.7525e+12 30555\n- PoolArea      1 2.3116e+09 1.7541e+12 30556\n<none>                       1.7518e+12 30556\n- TotRmsAbvGrd  1 3.0800e+09 1.7549e+12 30557\n- BedroomAbvGr  1 1.6000e+10 1.7678e+12 30567\n- Fireplaces    1 2.1663e+10 1.7735e+12 30572\n- LotArea       1 4.4927e+10 1.7967e+12 30591\n- OverallCond   1 5.0479e+10 1.8023e+12 30596\n- TotalBsmtSF   1 6.2143e+10 1.8140e+12 30605\n- GarageCars    1 6.8346e+10 1.8202e+12 30610\n- YearBuilt     1 8.8304e+10 1.8401e+12 30626\n- KitchenQual   3 1.8099e+11 1.9328e+12 30694\n- GrLivArea     1 1.7602e+11 1.9278e+12 30694\n\nStep:  AIC=30554.34\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + BedroomAbvGr + \n    KitchenQual + TotRmsAbvGrd + GarageCars + PoolArea\n\n               Df  Sum of Sq        RSS   AIC\n- YearRemodAdd  1 7.3462e+08 1.7530e+12 30553\n- PoolArea      1 2.2557e+09 1.7545e+12 30554\n<none>                       1.7522e+12 30554\n- TotRmsAbvGrd  1 3.1487e+09 1.7554e+12 30555\n- BedroomAbvGr  1 1.5953e+10 1.7682e+12 30566\n- Fireplaces    1 2.1377e+10 1.7736e+12 30570\n- LotArea       1 4.5426e+10 1.7976e+12 30590\n- OverallCond   1 5.0150e+10 1.8024e+12 30594\n- GarageCars    1 6.8598e+10 1.8208e+12 30608\n- TotalBsmtSF   1 7.5906e+10 1.8281e+12 30614\n- YearBuilt     1 9.1158e+10 1.8434e+12 30626\n- KitchenQual   3 1.8094e+11 1.9332e+12 30692\n- GrLivArea     1 1.8985e+11 1.9421e+12 30702\n\nStep:  AIC=30552.96\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    Fireplaces + TotalBsmtSF + GrLivArea + BedroomAbvGr + KitchenQual + \n    TotRmsAbvGrd + GarageCars + PoolArea\n\n               Df  Sum of Sq        RSS   AIC\n- PoolArea      1 2.3384e+09 1.7553e+12 30553\n<none>                       1.7530e+12 30553\n- TotRmsAbvGrd  1 3.4089e+09 1.7564e+12 30554\n- BedroomAbvGr  1 1.7030e+10 1.7700e+12 30565\n- Fireplaces    1 2.0721e+10 1.7737e+12 30568\n- LotArea       1 4.5338e+10 1.7983e+12 30588\n- OverallCond   1 6.1623e+10 1.8146e+12 30601\n- GarageCars    1 6.8398e+10 1.8214e+12 30607\n- TotalBsmtSF   1 7.5491e+10 1.8284e+12 30612\n- YearBuilt     1 1.1954e+11 1.8725e+12 30647\n- KitchenQual   3 1.8478e+11 1.9377e+12 30693\n- GrLivArea     1 1.9180e+11 1.9448e+12 30702\n\nStep:  AIC=30552.9\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    Fireplaces + TotalBsmtSF + GrLivArea + BedroomAbvGr + KitchenQual + \n    TotRmsAbvGrd + GarageCars\n\n               Df  Sum of Sq        RSS   AIC\n<none>                       1.7553e+12 30553\n- TotRmsAbvGrd  1 3.9990e+09 1.7593e+12 30554\n- BedroomAbvGr  1 1.7351e+10 1.7726e+12 30565\n- Fireplaces    1 2.0547e+10 1.7758e+12 30568\n- LotArea       1 4.5058e+10 1.8004e+12 30588\n- OverallCond   1 6.1516e+10 1.8168e+12 30601\n- GarageCars    1 7.0082e+10 1.8254e+12 30608\n- TotalBsmtSF   1 7.4080e+10 1.8294e+12 30611\n- YearBuilt     1 1.1964e+11 1.8749e+12 30647\n- KitchenQual   3 1.8429e+11 1.9396e+12 30693\n- GrLivArea     1 1.8984e+11 1.9451e+12 30701\n\nShow code\n\nTrain.Both <- step(EXP3,scope=list(lower=EXP1,upper=EXP3),direction = \"both\")\n\n\nStart:  AIC=30559.65\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea + MiscVal\n\n               Df  Sum of Sq        RSS   AIC\n- MiscVal       1 9.9794e+07 1.7515e+12 30558\n- FullBath      1 3.2589e+08 1.7517e+12 30558\n- HalfBath      1 6.4217e+08 1.7520e+12 30558\n- YearRemodAdd  1 8.0186e+08 1.7522e+12 30558\n- PoolArea      1 2.3696e+09 1.7538e+12 30560\n<none>                       1.7514e+12 30560\n- TotRmsAbvGrd  1 3.2500e+09 1.7546e+12 30560\n- BedroomAbvGr  1 1.5302e+10 1.7667e+12 30570\n- Fireplaces    1 2.1401e+10 1.7728e+12 30575\n- LotArea       1 4.4969e+10 1.7964e+12 30595\n- OverallCond   1 4.9564e+10 1.8010e+12 30598\n- TotalBsmtSF   1 5.7429e+10 1.8088e+12 30605\n- GarageCars    1 6.8356e+10 1.8197e+12 30614\n- YearBuilt     1 8.3232e+10 1.8346e+12 30625\n- GrLivArea     1 1.5713e+11 1.9085e+12 30683\n- KitchenQual   3 1.7852e+11 1.9299e+12 30695\n\nStep:  AIC=30557.73\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea\n\n               Df  Sum of Sq        RSS   AIC\n- FullBath      1 3.2829e+08 1.7518e+12 30556\n- HalfBath      1 6.4532e+08 1.7521e+12 30556\n- YearRemodAdd  1 7.9687e+08 1.7523e+12 30556\n<none>                       1.7515e+12 30558\n- PoolArea      1 2.4047e+09 1.7539e+12 30558\n- TotRmsAbvGrd  1 3.1936e+09 1.7547e+12 30558\n+ MiscVal       1 9.9794e+07 1.7514e+12 30560\n- BedroomAbvGr  1 1.5229e+10 1.7667e+12 30568\n- Fireplaces    1 2.1397e+10 1.7729e+12 30574\n- LotArea       1 4.4872e+10 1.7964e+12 30593\n- OverallCond   1 4.9494e+10 1.8010e+12 30596\n- TotalBsmtSF   1 5.7415e+10 1.8089e+12 30603\n- GarageCars    1 6.8574e+10 1.8201e+12 30612\n- YearBuilt     1 8.3136e+10 1.8346e+12 30623\n- GrLivArea     1 1.5736e+11 1.9088e+12 30681\n- KitchenQual   3 1.7886e+11 1.9303e+12 30694\n\nStep:  AIC=30556\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + HalfBath + \n    BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea\n\n               Df  Sum of Sq        RSS   AIC\n- HalfBath      1 4.0727e+08 1.7522e+12 30554\n- YearRemodAdd  1 6.9863e+08 1.7525e+12 30555\n- PoolArea      1 2.3116e+09 1.7541e+12 30556\n<none>                       1.7518e+12 30556\n- TotRmsAbvGrd  1 3.0800e+09 1.7549e+12 30557\n+ FullBath      1 3.2829e+08 1.7515e+12 30558\n+ MiscVal       1 1.0219e+08 1.7517e+12 30558\n- BedroomAbvGr  1 1.6000e+10 1.7678e+12 30567\n- Fireplaces    1 2.1663e+10 1.7735e+12 30572\n- LotArea       1 4.4927e+10 1.7967e+12 30591\n- OverallCond   1 5.0479e+10 1.8023e+12 30596\n- TotalBsmtSF   1 6.2143e+10 1.8140e+12 30605\n- GarageCars    1 6.8346e+10 1.8202e+12 30610\n- YearBuilt     1 8.8304e+10 1.8401e+12 30626\n- KitchenQual   3 1.8099e+11 1.9328e+12 30694\n- GrLivArea     1 1.7602e+11 1.9278e+12 30694\n\nStep:  AIC=30554.34\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + BedroomAbvGr + \n    KitchenQual + TotRmsAbvGrd + GarageCars + PoolArea\n\n               Df  Sum of Sq        RSS   AIC\n- YearRemodAdd  1 7.3462e+08 1.7530e+12 30553\n- PoolArea      1 2.2557e+09 1.7545e+12 30554\n<none>                       1.7522e+12 30554\n- TotRmsAbvGrd  1 3.1487e+09 1.7554e+12 30555\n+ HalfBath      1 4.0727e+08 1.7518e+12 30556\n+ MiscVal       1 1.0385e+08 1.7521e+12 30556\n+ FullBath      1 9.0239e+07 1.7521e+12 30556\n- BedroomAbvGr  1 1.5953e+10 1.7682e+12 30566\n- Fireplaces    1 2.1377e+10 1.7736e+12 30570\n- LotArea       1 4.5426e+10 1.7976e+12 30590\n- OverallCond   1 5.0150e+10 1.8024e+12 30594\n- GarageCars    1 6.8598e+10 1.8208e+12 30608\n- TotalBsmtSF   1 7.5906e+10 1.8281e+12 30614\n- YearBuilt     1 9.1158e+10 1.8434e+12 30626\n- KitchenQual   3 1.8094e+11 1.9332e+12 30692\n- GrLivArea     1 1.8985e+11 1.9421e+12 30702\n\nStep:  AIC=30552.96\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    Fireplaces + TotalBsmtSF + GrLivArea + BedroomAbvGr + KitchenQual + \n    TotRmsAbvGrd + GarageCars + PoolArea\n\n               Df  Sum of Sq        RSS   AIC\n- PoolArea      1 2.3384e+09 1.7553e+12 30553\n<none>                       1.7530e+12 30553\n- TotRmsAbvGrd  1 3.4089e+09 1.7564e+12 30554\n+ YearRemodAdd  1 7.3462e+08 1.7522e+12 30554\n+ HalfBath      1 4.4327e+08 1.7525e+12 30555\n+ MiscVal       1 9.8611e+07 1.7529e+12 30555\n+ FullBath      1 4.0982e+07 1.7529e+12 30555\n- BedroomAbvGr  1 1.7030e+10 1.7700e+12 30565\n- Fireplaces    1 2.0721e+10 1.7737e+12 30568\n- LotArea       1 4.5338e+10 1.7983e+12 30588\n- OverallCond   1 6.1623e+10 1.8146e+12 30601\n- GarageCars    1 6.8398e+10 1.8214e+12 30607\n- TotalBsmtSF   1 7.5491e+10 1.8284e+12 30612\n- YearBuilt     1 1.1954e+11 1.8725e+12 30647\n- KitchenQual   3 1.8478e+11 1.9377e+12 30693\n- GrLivArea     1 1.9180e+11 1.9448e+12 30702\n\nStep:  AIC=30552.9\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    Fireplaces + TotalBsmtSF + GrLivArea + BedroomAbvGr + KitchenQual + \n    TotRmsAbvGrd + GarageCars\n\n               Df  Sum of Sq        RSS   AIC\n<none>                       1.7553e+12 30553\n+ PoolArea      1 2.3384e+09 1.7530e+12 30553\n+ YearRemodAdd  1 8.1728e+08 1.7545e+12 30554\n- TotRmsAbvGrd  1 3.9990e+09 1.7593e+12 30554\n+ HalfBath      1 3.8582e+08 1.7549e+12 30555\n+ MiscVal       1 1.3218e+08 1.7552e+12 30555\n+ FullBath      1 1.7544e+07 1.7553e+12 30555\n- BedroomAbvGr  1 1.7351e+10 1.7726e+12 30565\n- Fireplaces    1 2.0547e+10 1.7758e+12 30568\n- LotArea       1 4.5058e+10 1.8004e+12 30588\n- OverallCond   1 6.1516e+10 1.8168e+12 30601\n- GarageCars    1 7.0082e+10 1.8254e+12 30608\n- TotalBsmtSF   1 7.4080e+10 1.8294e+12 30611\n- YearBuilt     1 1.1964e+11 1.8749e+12 30647\n- KitchenQual   3 1.8429e+11 1.9396e+12 30693\n- GrLivArea     1 1.8984e+11 1.9451e+12 30701\n\nShow code\n\nsummary(Train.Forward)\n\n\n\nCall:\nlm(formula = SalePrice ~ OverallQual + GrLivArea + KitchenQual + \n    GarageCars + TotalBsmtSF + YearBuilt + OverallCond + LotArea + \n    Fireplaces + BedroomAbvGr + TotRmsAbvGrd, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-503235  -16278   -1295   13445  262148 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -9.268e+05  9.233e+04 -10.038  < 2e-16 ***\nOverallQual    1.410e+04  1.170e+03  12.053  < 2e-16 ***\nGrLivArea      4.765e+01  3.810e+00  12.506  < 2e-16 ***\nKitchenQualFa -4.451e+04  7.733e+03  -5.755 1.05e-08 ***\nKitchenQualGd -4.830e+04  4.158e+03 -11.617  < 2e-16 ***\nKitchenQualTA -5.562e+04  4.767e+03 -11.667  < 2e-16 ***\nGarageCars     1.280e+04  1.685e+03   7.598 5.37e-14 ***\nTotalBsmtSF    2.108e+01  2.699e+00   7.812 1.08e-14 ***\nYearBuilt      4.614e+02  4.647e+01   9.928  < 2e-16 ***\nOverallCond    6.645e+03  9.335e+02   7.119 1.71e-12 ***\nLotArea        6.020e-01  9.881e-02   6.092 1.42e-09 ***\nFireplaces     6.880e+03  1.672e+03   4.114 4.10e-05 ***\nBedroomAbvGr  -6.230e+03  1.648e+03  -3.781 0.000163 ***\nTotRmsAbvGrd   2.145e+03  1.182e+03   1.815 0.069726 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34840 on 1446 degrees of freedom\nMultiple R-squared:  0.8094,    Adjusted R-squared:  0.8077 \nF-statistic: 472.3 on 13 and 1446 DF,  p-value: < 2.2e-16\n\nShow code\n\nsummary(Train.Backward)\n\n\n\nCall:\nlm(formula = SalePrice ~ OverallQual + OverallCond + LotArea + \n    YearBuilt + Fireplaces + TotalBsmtSF + GrLivArea + BedroomAbvGr + \n    KitchenQual + TotRmsAbvGrd + GarageCars, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-503235  -16278   -1295   13445  262148 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -9.268e+05  9.233e+04 -10.038  < 2e-16 ***\nOverallQual    1.410e+04  1.170e+03  12.053  < 2e-16 ***\nOverallCond    6.645e+03  9.335e+02   7.119 1.71e-12 ***\nLotArea        6.020e-01  9.881e-02   6.092 1.42e-09 ***\nYearBuilt      4.614e+02  4.647e+01   9.928  < 2e-16 ***\nFireplaces     6.880e+03  1.672e+03   4.114 4.10e-05 ***\nTotalBsmtSF    2.108e+01  2.699e+00   7.812 1.08e-14 ***\nGrLivArea      4.765e+01  3.810e+00  12.506  < 2e-16 ***\nBedroomAbvGr  -6.230e+03  1.648e+03  -3.781 0.000163 ***\nKitchenQualFa -4.451e+04  7.733e+03  -5.755 1.05e-08 ***\nKitchenQualGd -4.830e+04  4.158e+03 -11.617  < 2e-16 ***\nKitchenQualTA -5.562e+04  4.767e+03 -11.667  < 2e-16 ***\nTotRmsAbvGrd   2.145e+03  1.182e+03   1.815 0.069726 .  \nGarageCars     1.280e+04  1.685e+03   7.598 5.37e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34840 on 1446 degrees of freedom\nMultiple R-squared:  0.8094,    Adjusted R-squared:  0.8077 \nF-statistic: 472.3 on 13 and 1446 DF,  p-value: < 2.2e-16\n\nShow code\n\nsummary(Train.Both)\n\n\n\nCall:\nlm(formula = SalePrice ~ OverallQual + OverallCond + LotArea + \n    YearBuilt + Fireplaces + TotalBsmtSF + GrLivArea + BedroomAbvGr + \n    KitchenQual + TotRmsAbvGrd + GarageCars, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-503235  -16278   -1295   13445  262148 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -9.268e+05  9.233e+04 -10.038  < 2e-16 ***\nOverallQual    1.410e+04  1.170e+03  12.053  < 2e-16 ***\nOverallCond    6.645e+03  9.335e+02   7.119 1.71e-12 ***\nLotArea        6.020e-01  9.881e-02   6.092 1.42e-09 ***\nYearBuilt      4.614e+02  4.647e+01   9.928  < 2e-16 ***\nFireplaces     6.880e+03  1.672e+03   4.114 4.10e-05 ***\nTotalBsmtSF    2.108e+01  2.699e+00   7.812 1.08e-14 ***\nGrLivArea      4.765e+01  3.810e+00  12.506  < 2e-16 ***\nBedroomAbvGr  -6.230e+03  1.648e+03  -3.781 0.000163 ***\nKitchenQualFa -4.451e+04  7.733e+03  -5.755 1.05e-08 ***\nKitchenQualGd -4.830e+04  4.158e+03 -11.617  < 2e-16 ***\nKitchenQualTA -5.562e+04  4.767e+03 -11.667  < 2e-16 ***\nTotRmsAbvGrd   2.145e+03  1.182e+03   1.815 0.069726 .  \nGarageCars     1.280e+04  1.685e+03   7.598 5.37e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34840 on 1446 degrees of freedom\nMultiple R-squared:  0.8094,    Adjusted R-squared:  0.8077 \nF-statistic: 472.3 on 13 and 1446 DF,  p-value: < 2.2e-16\n\n다행히도(?) 3가지 방법 모두 같은 독립 변수들을 선택하였다.\n변수들은 다음과 같다.\n\n\nShow code\n\nnames(Train.Both$coefficients)\n\n\n [1] \"(Intercept)\"   \"OverallQual\"   \"OverallCond\"   \"LotArea\"      \n [5] \"YearBuilt\"     \"Fireplaces\"    \"TotalBsmtSF\"   \"GrLivArea\"    \n [9] \"BedroomAbvGr\"  \"KitchenQualFa\" \"KitchenQualGd\" \"KitchenQualTA\"\n[13] \"TotRmsAbvGrd\"  \"GarageCars\"   \n\n\n다중공선성을 구하여 변수를 제거해보자. Variance Inflation Factor 가 10이 넘으면 문제가 있는 것이다.\n\n\nShow code\n\nvif(Train.Both) \n\n\n                 GVIF Df GVIF^(1/(2*Df))\nOverallQual  3.145198  1        1.773471\nOverallCond  1.296916  1        1.138822\nLotArea      1.169073  1        1.081237\nYearBuilt    2.367886  1        1.538794\nFireplaces   1.396871  1        1.181893\nTotalBsmtSF  1.684891  1        1.298034\nGrLivArea    4.818708  1        2.195156\nBedroomAbvGr 2.171852  1        1.473720\nKitchenQual  2.423311  3        1.158959\nTotRmsAbvGrd 4.435719  1        2.106115\nGarageCars   1.906030  1        1.380590\n\nShow code\n\nplot(Train.Both)\n\n\n\n\n\n그래프를 통해 314,336,524,692,1183,1299번 이상치들을 발견하였고, 이들을 제거해주었다.\n\n\n\nShow code\n\nModified_Train <- lm(SalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt +   \n                YearRemodAdd + Fireplaces +  GrLivArea + FullBath +  \n                HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars  \n                 , data=train[-c(314,336,524,692,1183,1299), ])\nsummary(Modified_Train)\n\n\n\nCall:\nlm(formula = SalePrice ~ OverallQual + OverallCond + LotArea + \n    YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars, \n    data = train[-c(314, 336, 524, 692, 1183, 1299), ])\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-126592  -16379    -376   14100  227145 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   -1.384e+06  1.201e+05 -11.518  < 2e-16 ***\nOverallQual    1.464e+04  1.011e+03  14.481  < 2e-16 ***\nOverallCond    6.200e+03  8.650e+02   7.168 1.21e-12 ***\nLotArea        1.197e+00  1.189e-01  10.067  < 2e-16 ***\nYearBuilt      6.490e+02  4.727e+01  13.731  < 2e-16 ***\nYearRemodAdd   5.359e+01  5.966e+01   0.898 0.369219    \nFireplaces     5.505e+03  1.474e+03   3.734 0.000196 ***\nGrLivArea      7.345e+01  3.918e+00  18.746  < 2e-16 ***\nFullBath      -9.997e+03  2.306e+03  -4.335 1.56e-05 ***\nHalfBath      -1.089e+04  1.894e+03  -5.748 1.10e-08 ***\nBedroomAbvGr  -9.475e+03  1.457e+03  -6.501 1.09e-10 ***\nKitchenQualFa -4.592e+04  6.781e+03  -6.771 1.85e-11 ***\nKitchenQualGd -5.216e+04  3.620e+03 -14.412  < 2e-16 ***\nKitchenQualTA -5.641e+04  4.212e+03 -13.393  < 2e-16 ***\nTotRmsAbvGrd   1.165e+03  1.049e+03   1.111 0.266895    \nGarageCars     1.024e+04  1.475e+03   6.942 5.82e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 30190 on 1438 degrees of freedom\nMultiple R-squared:  0.8462,    Adjusted R-squared:  0.8446 \nF-statistic: 527.3 on 15 and 1438 DF,  p-value: < 2.2e-16\n\nShow code\n\npar(mfrow=c(2,2))\nplot(Modified_Train)\n\n\n\nShow code\n\n## R^2 값이 소폭 상승하였다.\n\nsample[,3] <- predict(Modified_Train, newdata = test)\n\n\n\nTEST MSE를 구해보자.\n\n\nShow code\n\na<-((sample[,2]-sample[,3])^2)\na<-na.exclude(a)\nsum(a)/nrow(sample)\n\n\n[1] 4798883829\n\n2. Generalized Linear Model 로 분석\n(1) 음수의 결과값들을 만들지 않기 위해 GLM을 적용하였다.(2) Family Gamma (Link Function 은 Log를 이용).(3) 분석과정은 1.LM 분석과 동일하다. \n결과\n음수의 결과값은 해결됐으나 TEST MSE는 오히려 증가했다 .\n지수함수의 특성상, X들의 값이 증가할 수록 Y값들도 기하급수로 증가하였다.\nTrain Data로 부터 최종 AIC 는 33448이 나왔다.\nTest MSE를 Square Root 한 결과 74512.99 (lm = 69273.98) 값이 나왔다.\n\n\nShow code\n\nEXP11 <- glm(SalePrice~ OverallQual, family = Gamma(link=\"log\"), data = train)\n\nEXP12 <- glm(SalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + FullBath +      \n               HalfBath + BedroomAbvGr + KitchenQual +TotRmsAbvGrd + GarageCars + PoolArea + MiscVal , Gamma(link=\"log\"), data = train)\nsummary(EXP11)\n\n\n\nCall:\nglm(formula = SalePrice ~ OverallQual, family = Gamma(link = \"log\"), \n    data = train)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.92627  -0.15156  -0.01266   0.10943   1.05589  \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 10.610454   0.026779  396.22   <2e-16 ***\nOverallQual  0.235989   0.004282   55.11   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.05116395)\n\n    Null deviance: 238.757  on 1459  degrees of freedom\nResidual deviance:  75.269  on 1458  degrees of freedom\nAIC: 34943\n\nNumber of Fisher Scoring iterations: 4\n\nShow code\n\nsummary(EXP12)\n\n\n\nCall:\nglm(formula = SalePrice ~ OverallQual + OverallCond + LotArea + \n    YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + \n    FullBath + HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + \n    GarageCars + PoolArea + MiscVal, family = Gamma(link = \"log\"), \n    data = train)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.54906  -0.08600  -0.00294   0.08018   0.54850  \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    2.002e+00  5.641e-01   3.549 0.000399 ***\nOverallQual    7.916e-02  4.739e-03  16.702  < 2e-16 ***\nOverallCond    5.035e-02  4.101e-03  12.278  < 2e-16 ***\nLotArea        3.736e-06  4.000e-07   9.340  < 2e-16 ***\nYearBuilt      3.795e-03  2.208e-04  17.189  < 2e-16 ***\nYearRemodAdd   6.655e-04  2.808e-04   2.370 0.017929 *  \nFireplaces     6.044e-02  6.892e-03   8.769  < 2e-16 ***\nGrLivArea      2.903e-04  1.693e-05  17.145  < 2e-16 ***\nBsmtHalfBath   4.373e-03  1.583e-02   0.276 0.782335    \nFullBath      -2.971e-02  1.076e-02  -2.760 0.005857 ** \nHalfBath      -3.595e-02  8.864e-03  -4.056 5.26e-05 ***\nBedroomAbvGr  -3.236e-03  6.853e-03  -0.472 0.636867    \nKitchenQualFa -1.574e-01  3.195e-02  -4.926 9.37e-07 ***\nKitchenQualGd -1.031e-01  1.691e-02  -6.093 1.42e-09 ***\nKitchenQualTA -1.366e-01  1.981e-02  -6.898 7.86e-12 ***\nTotRmsAbvGrd   8.375e-04  4.873e-03   0.172 0.863559    \nGarageCars     7.348e-02  6.887e-03  10.669  < 2e-16 ***\nPoolArea      -1.145e-04  9.538e-05  -1.201 0.230089    \nMiscVal       -3.387e-06  7.566e-06  -0.448 0.654485    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.02022188)\n\n    Null deviance: 238.757  on 1459  degrees of freedom\nResidual deviance:  32.675  on 1441  degrees of freedom\nAIC: 33752\n\nNumber of Fisher Scoring iterations: 6\n\nShow code\n\n#StepWise Regression\n\nTrain.Forward2 <- step(EXP11,scope=list(lower=EXP11,upper=EXP12),direction = \"forward\")\n\n\nStart:  AIC=34942.99\nSalePrice ~ OverallQual\n\n               Df Deviance   AIC\n+ GrLivArea     1   56.034 34569\n+ GarageCars    1   63.149 34708\n+ TotRmsAbvGrd  1   64.973 34744\n+ LotArea       1   67.252 34788\n+ Fireplaces    1   67.276 34789\n+ FullBath      1   68.471 34812\n+ KitchenQual   3   69.384 34834\n+ YearRemodAdd  1   71.425 34870\n+ YearBuilt     1   71.597 34873\n+ BedroomAbvGr  1   71.685 34875\n+ HalfBath      1   73.347 34907\n+ OverallCond   1   74.960 34939\n+ PoolArea      1   75.096 34942\n+ BsmtHalfBath  1   75.107 34942\n<none>              75.269 34943\n+ MiscVal       1   75.256 34945\n\nStep:  AIC=34510.93\nSalePrice ~ OverallQual + GrLivArea\n\n               Df Deviance   AIC\n+ YearBuilt     1   46.962 34254\n+ GarageCars    1   48.466 34297\n+ YearRemodAdd  1   51.076 34371\n+ KitchenQual   3   50.974 34372\n+ LotArea       1   52.825 34421\n+ Fireplaces    1   53.770 34448\n+ BedroomAbvGr  1   55.349 34493\n+ OverallCond   1   55.632 34501\n+ FullBath      1   55.639 34502\n+ TotRmsAbvGrd  1   55.860 34508\n+ BsmtHalfBath  1   55.887 34509\n<none>              56.034 34511\n+ PoolArea      1   56.014 34512\n+ HalfBath      1   56.017 34512\n+ MiscVal       1   56.034 34513\n\nStep:  AIC=34253.55\nSalePrice ~ OverallQual + GrLivArea + YearBuilt\n\n               Df Deviance   AIC\n+ OverallCond   1   42.535 34107\n+ LotArea       1   43.589 34143\n+ GarageCars    1   43.591 34143\n+ Fireplaces    1   44.092 34159\n+ KitchenQual   3   44.431 34175\n+ YearRemodAdd  1   45.705 34213\n+ BedroomAbvGr  1   46.440 34238\n+ HalfBath      1   46.508 34240\n+ FullBath      1   46.704 34247\n+ BsmtHalfBath  1   46.772 34249\n+ TotRmsAbvGrd  1   46.890 34253\n<none>              46.962 34254\n+ PoolArea      1   46.948 34255\n+ MiscVal       1   46.959 34255\n\nStep:  AIC=34110.25\nSalePrice ~ OverallQual + GrLivArea + YearBuilt + OverallCond\n\n               Df Deviance   AIC\n+ GarageCars    1   38.985 33982\n+ LotArea       1   39.201 33990\n+ Fireplaces    1   39.703 34009\n+ KitchenQual   3   40.767 34052\n+ BedroomAbvGr  1   41.902 34089\n+ HalfBath      1   41.923 34090\n+ FullBath      1   42.322 34104\n+ YearRemodAdd  1   42.414 34108\n<none>              42.535 34110\n+ TotRmsAbvGrd  1   42.482 34110\n+ BsmtHalfBath  1   42.505 34111\n+ PoolArea      1   42.513 34111\n+ MiscVal       1   42.525 34112\n\nStep:  AIC=33984.41\nSalePrice ~ OverallQual + GrLivArea + YearBuilt + OverallCond + \n    GarageCars\n\n               Df Deviance   AIC\n+ LotArea       1   36.268 33879\n+ Fireplaces    1   36.489 33887\n+ KitchenQual   3   37.605 33936\n+ HalfBath      1   38.530 33968\n+ BedroomAbvGr  1   38.594 33971\n+ FullBath      1   38.775 33978\n+ YearRemodAdd  1   38.887 33983\n+ TotRmsAbvGrd  1   38.919 33984\n<none>              38.985 33984\n+ BsmtHalfBath  1   38.959 33985\n+ PoolArea      1   38.977 33986\n+ MiscVal       1   38.983 33986\n\nStep:  AIC=33880.52\nSalePrice ~ OverallQual + GrLivArea + YearBuilt + OverallCond + \n    GarageCars + LotArea\n\n               Df Deviance   AIC\n+ Fireplaces    1   34.642 33811\n+ KitchenQual   3   34.817 33823\n+ BedroomAbvGr  1   35.943 33868\n+ HalfBath      1   36.010 33871\n+ FullBath      1   36.102 33875\n+ YearRemodAdd  1   36.104 33875\n<none>              36.268 33881\n+ TotRmsAbvGrd  1   36.242 33881\n+ PoolArea      1   36.257 33882\n+ MiscVal       1   36.257 33882\n+ BsmtHalfBath  1   36.262 33882\n\nStep:  AIC=33815.27\nSalePrice ~ OverallQual + GrLivArea + YearBuilt + OverallCond + \n    GarageCars + LotArea + Fireplaces\n\n               Df Deviance   AIC\n+ KitchenQual   3   33.202 33755\n+ YearRemodAdd  1   34.313 33802\n+ HalfBath      1   34.339 33803\n+ BedroomAbvGr  1   34.488 33810\n+ FullBath      1   34.579 33814\n<none>              34.642 33815\n+ PoolArea      1   34.624 33816\n+ MiscVal       1   34.631 33817\n+ TotRmsAbvGrd  1   34.640 33817\n+ BsmtHalfBath  1   34.641 33817\n\nStep:  AIC=33759.06\nSalePrice ~ OverallQual + GrLivArea + YearBuilt + OverallCond + \n    GarageCars + LotArea + Fireplaces + KitchenQual\n\n               Df Deviance   AIC\n+ HalfBath      1   32.978 33750\n+ YearRemodAdd  1   33.096 33756\n<none>              33.202 33759\n+ FullBath      1   33.164 33759\n+ BedroomAbvGr  1   33.175 33760\n+ PoolArea      1   33.179 33760\n+ MiscVal       1   33.199 33761\n+ TotRmsAbvGrd  1   33.200 33761\n+ BsmtHalfBath  1   33.200 33761\n\nStep:  AIC=33751.11\nSalePrice ~ OverallQual + GrLivArea + YearBuilt + OverallCond + \n    GarageCars + LotArea + Fireplaces + KitchenQual + HalfBath\n\n               Df Deviance   AIC\n+ FullBath      1   32.844 33747\n+ YearRemodAdd  1   32.879 33748\n<none>              32.978 33751\n+ PoolArea      1   32.948 33752\n+ BedroomAbvGr  1   32.950 33752\n+ MiscVal       1   32.974 33753\n+ TotRmsAbvGrd  1   32.975 33753\n+ BsmtHalfBath  1   32.976 33753\n\nStep:  AIC=33747.13\nSalePrice ~ OverallQual + GrLivArea + YearBuilt + OverallCond + \n    GarageCars + LotArea + Fireplaces + KitchenQual + HalfBath + \n    FullBath\n\n               Df Deviance   AIC\n+ YearRemodAdd  1   32.716 33743\n<none>              32.844 33747\n+ PoolArea      1   32.807 33747\n+ BedroomAbvGr  1   32.833 33749\n+ MiscVal       1   32.840 33749\n+ BsmtHalfBath  1   32.843 33749\n+ TotRmsAbvGrd  1   32.844 33749\n\nStep:  AIC=33743.44\nSalePrice ~ OverallQual + GrLivArea + YearBuilt + OverallCond + \n    GarageCars + LotArea + Fireplaces + KitchenQual + HalfBath + \n    FullBath + YearRemodAdd\n\n               Df Deviance   AIC\n<none>              32.716 33743\n+ PoolArea      1   32.685 33744\n+ MiscVal       1   32.712 33745\n+ BedroomAbvGr  1   32.713 33745\n+ BsmtHalfBath  1   32.715 33745\n+ TotRmsAbvGrd  1   32.716 33745\n\nShow code\n\nTrain.Backward2 <- step(EXP12,scope=list(lower=EXP11,upper=EXP12),direction = \"backward\")\n\n\nStart:  AIC=33751.58\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea + MiscVal\n\n               Df Deviance   AIC\n- TotRmsAbvGrd  1   32.675 33750\n- BsmtHalfBath  1   32.676 33750\n- MiscVal       1   32.679 33750\n- BedroomAbvGr  1   32.679 33750\n- PoolArea      1   32.705 33751\n<none>              32.675 33752\n- YearRemodAdd  1   32.789 33755\n- FullBath      1   32.827 33757\n- HalfBath      1   33.005 33766\n- KitchenQual   3   33.663 33794\n- Fireplaces    1   34.228 33826\n- LotArea       1   34.409 33835\n- GarageCars    1   34.944 33862\n- OverallCond   1   35.653 33897\n- GrLivArea     1   38.254 34025\n- YearBuilt     1   38.368 34031\n\nStep:  AIC=33749.6\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + GarageCars + PoolArea + \n    MiscVal\n\n               Df Deviance   AIC\n- BsmtHalfBath  1   32.677 33748\n- BedroomAbvGr  1   32.679 33748\n- MiscVal       1   32.679 33748\n- PoolArea      1   32.707 33749\n<none>              32.675 33750\n- YearRemodAdd  1   32.792 33753\n- FullBath      1   32.827 33755\n- HalfBath      1   33.005 33764\n- KitchenQual   3   33.683 33793\n- Fireplaces    1   34.228 33824\n- LotArea       1   34.409 33833\n- GarageCars    1   34.961 33861\n- OverallCond   1   35.656 33895\n- YearBuilt     1   38.411 34031\n- GrLivArea     1   40.371 34128\n\nStep:  AIC=33747.67\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    BedroomAbvGr + KitchenQual + GarageCars + PoolArea + MiscVal\n\n               Df Deviance   AIC\n- BedroomAbvGr  1   32.681 33746\n- MiscVal       1   32.681 33746\n- PoolArea      1   32.708 33747\n<none>              32.677 33748\n- YearRemodAdd  1   32.793 33751\n- FullBath      1   32.830 33753\n- HalfBath      1   33.008 33762\n- KitchenQual   3   33.684 33792\n- Fireplaces    1   34.236 33823\n- LotArea       1   34.417 33832\n- GarageCars    1   34.963 33859\n- OverallCond   1   35.710 33896\n- YearBuilt     1   38.435 34031\n- GrLivArea     1   40.371 34127\n\nStep:  AIC=33745.83\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    KitchenQual + GarageCars + PoolArea + MiscVal\n\n               Df Deviance   AIC\n- MiscVal       1   32.685 33744\n- PoolArea      1   32.712 33745\n<none>              32.681 33746\n- YearRemodAdd  1   32.803 33750\n- FullBath      1   32.849 33752\n- HalfBath      1   33.017 33760\n- KitchenQual   3   33.729 33792\n- Fireplaces    1   34.293 33824\n- LotArea       1   34.421 33830\n- GarageCars    1   34.995 33858\n- OverallCond   1   35.718 33894\n- YearBuilt     1   38.436 34029\n- GrLivArea     1   41.835 34197\n\nStep:  AIC=33744.02\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    KitchenQual + GarageCars + PoolArea\n\n               Df Deviance   AIC\n- PoolArea      1   32.716 33744\n<none>              32.685 33744\n- YearRemodAdd  1   32.807 33748\n- FullBath      1   32.853 33750\n- HalfBath      1   33.021 33759\n- KitchenQual   3   33.739 33790\n- Fireplaces    1   34.297 33822\n- LotArea       1   34.421 33828\n- GarageCars    1   35.006 33857\n- OverallCond   1   35.721 33892\n- YearBuilt     1   38.437 34027\n- GrLivArea     1   41.836 34195\n\nStep:  AIC=33743.44\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    KitchenQual + GarageCars\n\n               Df Deviance   AIC\n<none>              32.716 33743\n- YearRemodAdd  1   32.844 33748\n- FullBath      1   32.879 33749\n- HalfBath      1   33.042 33758\n- KitchenQual   3   33.766 33790\n- Fireplaces    1   34.322 33821\n- LotArea       1   34.452 33828\n- GarageCars    1   35.062 33858\n- OverallCond   1   35.740 33891\n- YearBuilt     1   38.444 34026\n- GrLivArea     1   41.876 34196\n\nShow code\n\nTrain.Both2 <- step(EXP12,scope=list(lower=EXP11,upper=EXP12),direction = \"both\")\n\n\nStart:  AIC=33751.58\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea + MiscVal\n\n               Df Deviance   AIC\n- TotRmsAbvGrd  1   32.675 33750\n- BsmtHalfBath  1   32.676 33750\n- MiscVal       1   32.679 33750\n- BedroomAbvGr  1   32.679 33750\n- PoolArea      1   32.705 33751\n<none>              32.675 33752\n- YearRemodAdd  1   32.789 33755\n- FullBath      1   32.827 33757\n- HalfBath      1   33.005 33766\n- KitchenQual   3   33.663 33794\n- Fireplaces    1   34.228 33826\n- LotArea       1   34.409 33835\n- GarageCars    1   34.944 33862\n- OverallCond   1   35.653 33897\n- GrLivArea     1   38.254 34025\n- YearBuilt     1   38.368 34031\n\nStep:  AIC=33749.6\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + GarageCars + PoolArea + \n    MiscVal\n\n               Df Deviance   AIC\n- BsmtHalfBath  1   32.677 33748\n- BedroomAbvGr  1   32.679 33748\n- MiscVal       1   32.679 33748\n- PoolArea      1   32.707 33749\n<none>              32.675 33750\n+ TotRmsAbvGrd  1   32.675 33752\n- YearRemodAdd  1   32.792 33753\n- FullBath      1   32.827 33755\n- HalfBath      1   33.005 33764\n- KitchenQual   3   33.683 33793\n- Fireplaces    1   34.228 33824\n- LotArea       1   34.409 33833\n- GarageCars    1   34.961 33861\n- OverallCond   1   35.656 33895\n- YearBuilt     1   38.411 34031\n- GrLivArea     1   40.371 34128\n\nStep:  AIC=33747.67\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    BedroomAbvGr + KitchenQual + GarageCars + PoolArea + MiscVal\n\n               Df Deviance   AIC\n- BedroomAbvGr  1   32.681 33746\n- MiscVal       1   32.681 33746\n- PoolArea      1   32.708 33747\n<none>              32.677 33748\n+ BsmtHalfBath  1   32.675 33750\n+ TotRmsAbvGrd  1   32.676 33750\n- YearRemodAdd  1   32.793 33751\n- FullBath      1   32.830 33753\n- HalfBath      1   33.008 33762\n- KitchenQual   3   33.684 33792\n- Fireplaces    1   34.236 33823\n- LotArea       1   34.417 33832\n- GarageCars    1   34.963 33859\n- OverallCond   1   35.710 33896\n- YearBuilt     1   38.435 34031\n- GrLivArea     1   40.371 34127\n\nStep:  AIC=33745.83\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    KitchenQual + GarageCars + PoolArea + MiscVal\n\n               Df Deviance   AIC\n- MiscVal       1   32.685 33744\n- PoolArea      1   32.712 33745\n<none>              32.681 33746\n+ BedroomAbvGr  1   32.677 33748\n+ BsmtHalfBath  1   32.679 33748\n+ TotRmsAbvGrd  1   32.680 33748\n- YearRemodAdd  1   32.803 33750\n- FullBath      1   32.849 33752\n- HalfBath      1   33.017 33760\n- KitchenQual   3   33.729 33792\n- Fireplaces    1   34.293 33824\n- LotArea       1   34.421 33830\n- GarageCars    1   34.995 33858\n- OverallCond   1   35.718 33894\n- YearBuilt     1   38.436 34029\n- GrLivArea     1   41.835 34197\n\nStep:  AIC=33744.02\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    KitchenQual + GarageCars + PoolArea\n\n               Df Deviance   AIC\n- PoolArea      1   32.716 33744\n<none>              32.685 33744\n+ MiscVal       1   32.681 33746\n+ BedroomAbvGr  1   32.681 33746\n+ BsmtHalfBath  1   32.683 33746\n+ TotRmsAbvGrd  1   32.684 33746\n- YearRemodAdd  1   32.807 33748\n- FullBath      1   32.853 33750\n- HalfBath      1   33.021 33759\n- KitchenQual   3   33.739 33790\n- Fireplaces    1   34.297 33822\n- LotArea       1   34.421 33828\n- GarageCars    1   35.006 33857\n- OverallCond   1   35.721 33892\n- YearBuilt     1   38.437 34027\n- GrLivArea     1   41.836 34195\n\nStep:  AIC=33743.44\nSalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    KitchenQual + GarageCars\n\n               Df Deviance   AIC\n<none>              32.716 33743\n+ PoolArea      1   32.685 33744\n+ MiscVal       1   32.712 33745\n+ BedroomAbvGr  1   32.713 33745\n+ BsmtHalfBath  1   32.715 33745\n+ TotRmsAbvGrd  1   32.716 33745\n- YearRemodAdd  1   32.844 33748\n- FullBath      1   32.879 33749\n- HalfBath      1   33.042 33758\n- KitchenQual   3   33.766 33790\n- Fireplaces    1   34.322 33821\n- LotArea       1   34.452 33828\n- GarageCars    1   35.062 33858\n- OverallCond   1   35.740 33891\n- YearBuilt     1   38.444 34026\n- GrLivArea     1   41.876 34196\n\nShow code\n\nsummary(Train.Forward2)\n\n\n\nCall:\nglm(formula = SalePrice ~ OverallQual + GrLivArea + YearBuilt + \n    OverallCond + GarageCars + LotArea + Fireplaces + KitchenQual + \n    HalfBath + FullBath + YearRemodAdd, family = Gamma(link = \"log\"), \n    data = train)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.57206  -0.08552  -0.00121   0.07951   0.55140  \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    1.972e+00  5.581e-01   3.533 0.000423 ***\nOverallQual    7.951e-02  4.699e-03  16.922  < 2e-16 ***\nGrLivArea      2.870e-04  1.296e-05  22.149  < 2e-16 ***\nYearBuilt      3.781e-03  2.186e-04  17.300  < 2e-16 ***\nOverallCond    5.006e-02  4.040e-03  12.392  < 2e-16 ***\nGarageCars     7.422e-02  6.823e-03  10.878  < 2e-16 ***\nLotArea        3.727e-06  3.984e-07   9.357  < 2e-16 ***\nFireplaces     6.077e-02  6.819e-03   8.912  < 2e-16 ***\nKitchenQualFa -1.584e-01  3.169e-02  -4.998 6.51e-07 ***\nKitchenQualGd -1.046e-01  1.657e-02  -6.310 3.71e-10 ***\nKitchenQualTA -1.381e-01  1.942e-02  -7.112 1.80e-12 ***\nHalfBath      -3.561e-02  8.799e-03  -4.047 5.47e-05 ***\nFullBath      -2.997e-02  1.047e-02  -2.862 0.004272 ** \nYearRemodAdd   6.952e-04  2.778e-04   2.502 0.012443 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.02015725)\n\n    Null deviance: 238.757  on 1459  degrees of freedom\nResidual deviance:  32.716  on 1446  degrees of freedom\nAIC: 33743\n\nNumber of Fisher Scoring iterations: 6\n\nShow code\n\nsummary(Train.Backward2)\n\n\n\nCall:\nglm(formula = SalePrice ~ OverallQual + OverallCond + LotArea + \n    YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + FullBath + \n    HalfBath + KitchenQual + GarageCars, family = Gamma(link = \"log\"), \n    data = train)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.57206  -0.08552  -0.00121   0.07951   0.55140  \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    1.972e+00  5.581e-01   3.533 0.000423 ***\nOverallQual    7.951e-02  4.699e-03  16.922  < 2e-16 ***\nOverallCond    5.006e-02  4.040e-03  12.392  < 2e-16 ***\nLotArea        3.727e-06  3.984e-07   9.357  < 2e-16 ***\nYearBuilt      3.781e-03  2.186e-04  17.300  < 2e-16 ***\nYearRemodAdd   6.952e-04  2.778e-04   2.502 0.012443 *  \nFireplaces     6.077e-02  6.819e-03   8.912  < 2e-16 ***\nGrLivArea      2.870e-04  1.296e-05  22.149  < 2e-16 ***\nFullBath      -2.997e-02  1.047e-02  -2.862 0.004272 ** \nHalfBath      -3.561e-02  8.799e-03  -4.047 5.47e-05 ***\nKitchenQualFa -1.584e-01  3.169e-02  -4.998 6.51e-07 ***\nKitchenQualGd -1.046e-01  1.657e-02  -6.310 3.71e-10 ***\nKitchenQualTA -1.381e-01  1.942e-02  -7.112 1.80e-12 ***\nGarageCars     7.422e-02  6.823e-03  10.878  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.02015725)\n\n    Null deviance: 238.757  on 1459  degrees of freedom\nResidual deviance:  32.716  on 1446  degrees of freedom\nAIC: 33743\n\nNumber of Fisher Scoring iterations: 6\n\nShow code\n\nsummary(Train.Both2)\n\n\n\nCall:\nglm(formula = SalePrice ~ OverallQual + OverallCond + LotArea + \n    YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + FullBath + \n    HalfBath + KitchenQual + GarageCars, family = Gamma(link = \"log\"), \n    data = train)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.57206  -0.08552  -0.00121   0.07951   0.55140  \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    1.972e+00  5.581e-01   3.533 0.000423 ***\nOverallQual    7.951e-02  4.699e-03  16.922  < 2e-16 ***\nOverallCond    5.006e-02  4.040e-03  12.392  < 2e-16 ***\nLotArea        3.727e-06  3.984e-07   9.357  < 2e-16 ***\nYearBuilt      3.781e-03  2.186e-04  17.300  < 2e-16 ***\nYearRemodAdd   6.952e-04  2.778e-04   2.502 0.012443 *  \nFireplaces     6.077e-02  6.819e-03   8.912  < 2e-16 ***\nGrLivArea      2.870e-04  1.296e-05  22.149  < 2e-16 ***\nFullBath      -2.997e-02  1.047e-02  -2.862 0.004272 ** \nHalfBath      -3.561e-02  8.799e-03  -4.047 5.47e-05 ***\nKitchenQualFa -1.584e-01  3.169e-02  -4.998 6.51e-07 ***\nKitchenQualGd -1.046e-01  1.657e-02  -6.310 3.71e-10 ***\nKitchenQualTA -1.381e-01  1.942e-02  -7.112 1.80e-12 ***\nGarageCars     7.422e-02  6.823e-03  10.878  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.02015725)\n\n    Null deviance: 238.757  on 1459  degrees of freedom\nResidual deviance:  32.716  on 1446  degrees of freedom\nAIC: 33743\n\nNumber of Fisher Scoring iterations: 6\n\nShow code\n\nnames(Train.Both2$coefficients)\n\n\n [1] \"(Intercept)\"   \"OverallQual\"   \"OverallCond\"   \"LotArea\"      \n [5] \"YearBuilt\"     \"YearRemodAdd\"  \"Fireplaces\"    \"GrLivArea\"    \n [9] \"FullBath\"      \"HalfBath\"      \"KitchenQualFa\" \"KitchenQualGd\"\n[13] \"KitchenQualTA\" \"GarageCars\"   \n\nShow code\n\n# 모두 같은 독립 변수들을 선택하였다.\n\n\n#다중공선성을 구하여 변수를 제거해보자.\n#Variance Inflation Factor 가 10이 넘으면 문제가 있다는 것이다.\n\nvif(Train.Both2) \n\n\n                 GVIF Df GVIF^(1/(2*Df))\nOverallQual  3.056483  1        1.748280\nOverallCond  1.462587  1        1.209375\nLotArea      1.144318  1        1.069728\nYearBuilt    3.153808  1        1.775896\nYearRemodAdd 2.380976  1        1.543041\nFireplaces   1.398894  1        1.182748\nGrLivArea    3.356405  1        1.832050\nFullBath     2.408681  1        1.551993\nHalfBath     1.417261  1        1.190488\nKitchenQual  2.627105  3        1.174662\nGarageCars   1.881858  1        1.371808\n\nShow code\n\nplot(Train.Both2)\n\n\n\nShow code\n\n##250,524,689,1299번 이상치\n\nModified_Train2 <- glm(SalePrice ~ OverallQual + OverallCond + LotArea + YearBuilt +   \n                         YearRemodAdd + Fireplaces +  GrLivArea + FullBath +  \n                         HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars , family = Gamma(link=\"log\"), data=train[-c(250,524,689,1299), ])\nsummary(Modified_Train2)\n\n\n\nCall:\nglm(formula = SalePrice ~ OverallQual + OverallCond + LotArea + \n    YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars, \n    family = Gamma(link = \"log\"), data = train[-c(250, 524, 689, \n        1299), ])\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-0.72898  -0.08641  -0.00148   0.07923   0.52847  \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)    1.543e+00  5.414e-01   2.850  0.00444 ** \nOverallQual    7.578e-02  4.541e-03  16.689  < 2e-16 ***\nOverallCond    5.115e-02  3.893e-03  13.138  < 2e-16 ***\nLotArea        4.722e-06  4.177e-07  11.305  < 2e-16 ***\nYearBuilt      4.014e-03  2.126e-04  18.881  < 2e-16 ***\nYearRemodAdd   6.900e-04  2.688e-04   2.567  0.01035 *  \nFireplaces     5.398e-02  6.619e-03   8.155 7.55e-16 ***\nGrLivArea      3.442e-04  1.695e-05  20.307  < 2e-16 ***\nFullBath      -4.133e-02  1.037e-02  -3.987 7.03e-05 ***\nHalfBath      -4.299e-02  8.511e-03  -5.051 4.96e-07 ***\nBedroomAbvGr  -7.103e-03  6.568e-03  -1.081  0.27967    \nKitchenQualFa -1.651e-01  3.053e-02  -5.410 7.37e-08 ***\nKitchenQualGd -1.154e-01  1.622e-02  -7.116 1.74e-12 ***\nKitchenQualTA -1.432e-01  1.894e-02  -7.564 6.91e-14 ***\nTotRmsAbvGrd  -5.237e-03  4.663e-03  -1.123  0.26164    \nGarageCars     6.663e-02  6.624e-03  10.059  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.01850124)\n\n    Null deviance: 237.74  on 1455  degrees of freedom\nResidual deviance:  27.94  on 1440  degrees of freedom\nAIC: 33426\n\nNumber of Fisher Scoring iterations: 6\n\nShow code\n\npar(mfrow=c(2,2))\nplot(Modified_Train2)\n\n\n\nShow code\n\n## AIC 값이 소폭 하락하였다\n\nsample[,4] <- exp(predict(Modified_Train2, newdata = test))\n\n\n\n3. Linear Model (No intercept) 로 분석\n(1) 음수의 결과값들을 만들지 않기 위해 intercept를 없앴다.(2) 일부 독립변수에 제곱을 넣어보았다. .(3) 분석과정은 1.LM 분석과 동일하다. \n결과\n음수의 결과값은 해결됐으나 TEST MSE는 오히려 증가했다 .\nOverfitting(과적합)의 문제가 발생하였다.\nTrain Data로 부터 최종 Adjusted R-Squared는 0.9776이 나왔다.\nTest MSE를 Square Root 한 결과 70062.37 (lm = 69273.98) 값이 나왔다.\n\n\nShow code\n\nEXP21 <- lm(SalePrice ~ -1 + I(OverallQual^2),data = train)\nEXP22 <- lm(SalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + FullBath +      \n              HalfBath + BedroomAbvGr + KitchenQual +TotRmsAbvGrd + GarageCars + PoolArea + MiscVal , data = train)\n\n\nsummary(EXP21)\n\n\n\nCall:\nlm(formula = SalePrice ~ -1 + I(OverallQual^2), data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-287290  -22710    8177   31692  307710 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)  4472.90      29.36   152.3   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 48070 on 1459 degrees of freedom\nMultiple R-squared:  0.9408,    Adjusted R-squared:  0.9408 \nF-statistic: 2.321e+04 on 1 and 1459 DF,  p-value: < 2.2e-16\n\nShow code\n\nsummary(EXP22)\n\n\n\nCall:\nlm(formula = SalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + \n    LotArea + YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + \n    BsmtHalfBath + FullBath + HalfBath + BedroomAbvGr + KitchenQual + \n    TotRmsAbvGrd + GarageCars + PoolArea + MiscVal, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-443591  -16702    -653   14265  256339 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)  1.492e+03  9.354e+01  15.949  < 2e-16 ***\nI(OverallCond^2)  5.457e+02  8.462e+01   6.449 1.53e-10 ***\nLotArea           7.150e-01  9.719e-02   7.357 3.14e-13 ***\nYearBuilt         5.466e+02  5.444e+01  10.039  < 2e-16 ***\nYearRemodAdd      2.523e+01  6.889e+01   0.366 0.714267    \nFireplaces        7.869e+03  1.669e+03   4.714 2.66e-06 ***\nGrLivArea         5.502e+01  4.143e+00  13.282  < 2e-16 ***\nBsmtHalfBath      1.152e+03  3.853e+03   0.299 0.765112    \nFullBath         -5.097e+03  2.616e+03  -1.948 0.051595 .  \nHalfBath         -7.532e+03  2.156e+03  -3.493 0.000493 ***\nBedroomAbvGr     -4.587e+03  1.673e+03  -2.742 0.006186 ** \nKitchenQualEx    -1.081e+06  1.372e+05  -7.878 6.52e-15 ***\nKitchenQualFa    -1.123e+06  1.353e+05  -8.299 2.39e-16 ***\nKitchenQualGd    -1.125e+06  1.372e+05  -8.199 5.32e-16 ***\nKitchenQualTA    -1.129e+06  1.361e+05  -8.300 2.37e-16 ***\nTotRmsAbvGrd      1.154e+03  1.184e+03   0.974 0.330032    \nGarageCars        1.254e+04  1.675e+03   7.485 1.24e-13 ***\nPoolArea         -2.774e+01  2.318e+01  -1.197 0.231589    \nMiscVal          -4.512e-01  1.840e+00  -0.245 0.806296    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34560 on 1441 degrees of freedom\nMultiple R-squared:  0.9698,    Adjusted R-squared:  0.9694 \nF-statistic:  2435 on 19 and 1441 DF,  p-value: < 2.2e-16\n\nShow code\n\n#StepWise Regression\n\nTrain.Forward3 <- step(EXP21,scope=list(lower=EXP21,upper=EXP22),direction = \"forward\")\n\n\nStart:  AIC=31479.92\nSalePrice ~ -1 + I(OverallQual^2)\n\n                   Df  Sum of Sq        RSS   AIC\n+ GrLivArea         1 9.8342e+11 2.3882e+12 30978\n+ TotRmsAbvGrd      1 6.5279e+11 2.7188e+12 31168\n+ GarageCars        1 5.7795e+11 2.7936e+12 31207\n+ KitchenQual       4 5.3632e+11 2.8353e+12 31235\n+ LotArea           1 4.5736e+11 2.9142e+12 31269\n+ FullBath          1 4.5637e+11 2.9152e+12 31270\n+ BedroomAbvGr      1 4.0561e+11 2.9660e+12 31295\n+ YearBuilt         1 3.2053e+11 3.0511e+12 31336\n+ YearRemodAdd      1 3.1802e+11 3.0536e+12 31337\n+ Fireplaces        1 2.5099e+11 3.1206e+12 31369\n+ I(OverallCond^2)  1 2.0945e+11 3.1622e+12 31388\n+ HalfBath          1 6.9244e+10 3.3024e+12 31452\n+ BsmtHalfBath      1 2.3655e+10 3.3479e+12 31472\n+ PoolArea          1 6.1237e+09 3.3655e+12 31479\n<none>                           3.3716e+12 31480\n+ MiscVal           1 3.2799e+09 3.3683e+12 31480\n\nStep:  AIC=30978.43\nSalePrice ~ I(OverallQual^2) + GrLivArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n+ KitchenQual       4 2.1208e+11 2.1761e+12 30851\n+ GarageCars        1 1.5694e+11 2.2312e+12 30881\n+ LotArea           1 1.0573e+11 2.2825e+12 30914\n+ Fireplaces        1 6.2726e+10 2.3255e+12 30942\n+ BedroomAbvGr      1 4.3566e+10 2.3446e+12 30954\n+ TotRmsAbvGrd      1 8.8320e+09 2.3793e+12 30975\n+ YearRemodAdd      1 3.7380e+09 2.3844e+12 30978\n<none>                           2.3882e+12 30978\n+ BsmtHalfBath      1 3.0252e+09 2.3852e+12 30979\n+ YearBuilt         1 2.7571e+09 2.3854e+12 30979\n+ HalfBath          1 2.0811e+09 2.3861e+12 30979\n+ FullBath          1 6.7039e+08 2.3875e+12 30980\n+ PoolArea          1 4.7382e+08 2.3877e+12 30980\n+ I(OverallCond^2)  1 3.5574e+06 2.3882e+12 30980\n+ MiscVal           1 1.6053e+06 2.3882e+12 30980\n\nStep:  AIC=30850.65\nSalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual - 1\n\n                   Df  Sum of Sq        RSS   AIC\n+ GarageCars        1 1.6177e+11 2.0143e+12 30740\n+ YearBuilt         1 1.4859e+11 2.0275e+12 30749\n+ LotArea           1 1.1303e+11 2.0631e+12 30775\n+ Fireplaces        1 5.9847e+10 2.1162e+12 30812\n+ YearRemodAdd      1 3.4609e+10 2.1415e+12 30829\n+ BedroomAbvGr      1 2.2071e+10 2.1540e+12 30838\n+ TotRmsAbvGrd      1 3.9743e+09 2.1721e+12 30850\n+ BsmtHalfBath      1 3.5719e+09 2.1725e+12 30850\n+ FullBath          1 3.1947e+09 2.1729e+12 30850\n<none>                           2.1761e+12 30851\n+ HalfBath          1 1.9354e+09 2.1742e+12 30851\n+ PoolArea          1 1.5214e+09 2.1746e+12 30852\n+ I(OverallCond^2)  1 8.9560e+08 2.1752e+12 30852\n+ MiscVal           1 2.7049e+08 2.1758e+12 30852\n\nStep:  AIC=30739.87\nSalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual + GarageCars - \n    1\n\n                   Df  Sum of Sq        RSS   AIC\n+ LotArea           1 9.3485e+10 1.9208e+12 30672\n+ YearBuilt         1 7.5801e+10 1.9385e+12 30686\n+ Fireplaces        1 5.1083e+10 1.9632e+12 30704\n+ YearRemodAdd      1 2.4579e+10 1.9897e+12 30724\n+ BedroomAbvGr      1 1.5990e+10 1.9983e+12 30730\n+ I(OverallCond^2)  1 1.0335e+10 2.0040e+12 30734\n+ TotRmsAbvGrd      1 5.7287e+09 2.0086e+12 30738\n+ BsmtHalfBath      1 3.1885e+09 2.0111e+12 30740\n<none>                           2.0143e+12 30740\n+ HalfBath          1 2.7315e+09 2.0116e+12 30740\n+ MiscVal           1 6.9909e+08 2.0136e+12 30741\n+ PoolArea          1 2.3233e+08 2.0141e+12 30742\n+ FullBath          1 3.4045e+07 2.0143e+12 30742\n\nStep:  AIC=30672.49\nSalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual + GarageCars + \n    LotArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n+ YearBuilt         1 7.9745e+10 1.8411e+12 30613\n+ Fireplaces        1 2.9956e+10 1.8909e+12 30652\n+ YearRemodAdd      1 2.8328e+10 1.8925e+12 30653\n+ BedroomAbvGr      1 1.2793e+10 1.9080e+12 30665\n+ I(OverallCond^2)  1 8.9801e+09 1.9119e+12 30668\n+ TotRmsAbvGrd      1 3.0449e+09 1.9178e+12 30672\n<none>                           1.9208e+12 30672\n+ BsmtHalfBath      1 1.6680e+09 1.9192e+12 30673\n+ PoolArea          1 7.0990e+08 1.9201e+12 30674\n+ HalfBath          1 3.6285e+08 1.9205e+12 30674\n+ FullBath          1 3.2723e+08 1.9205e+12 30674\n+ MiscVal           1 2.1198e+08 1.9206e+12 30674\n\nStep:  AIC=30612.58\nSalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual + GarageCars + \n    LotArea + YearBuilt - 1\n\n                   Df  Sum of Sq        RSS   AIC\n+ I(OverallCond^2)  1 5.9374e+10 1.7817e+12 30567\n+ Fireplaces        1 3.3266e+10 1.8078e+12 30588\n+ BedroomAbvGr      1 1.3715e+10 1.8274e+12 30604\n+ YearRemodAdd      1 7.3643e+09 1.8337e+12 30609\n+ HalfBath          1 6.4057e+09 1.8347e+12 30610\n+ FullBath          1 5.4429e+09 1.8357e+12 30610\n<none>                           1.8411e+12 30613\n+ BsmtHalfBath      1 1.9770e+09 1.8391e+12 30613\n+ TotRmsAbvGrd      1 1.8490e+09 1.8392e+12 30613\n+ PoolArea          1 8.0702e+08 1.8403e+12 30614\n+ MiscVal           1 1.5337e+08 1.8409e+12 30614\n\nStep:  AIC=30566.72\nSalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual + GarageCars + \n    LotArea + YearBuilt + I(OverallCond^2) - 1\n\n               Df  Sum of Sq        RSS   AIC\n+ Fireplaces    1 3.1468e+10 1.7503e+12 30543\n+ BedroomAbvGr  1 1.5926e+10 1.7658e+12 30556\n+ HalfBath      1 9.4181e+09 1.7723e+12 30561\n+ FullBath      1 3.8374e+09 1.7779e+12 30566\n<none>                       1.7817e+12 30567\n+ TotRmsAbvGrd  1 1.6835e+09 1.7800e+12 30567\n+ PoolArea      1 7.5338e+08 1.7810e+12 30568\n+ BsmtHalfBath  1 1.5730e+08 1.7816e+12 30569\n+ MiscVal       1 5.2609e+07 1.7817e+12 30569\n+ YearRemodAdd  1 4.4343e+06 1.7817e+12 30569\n\nStep:  AIC=30542.7\nSalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual + GarageCars + \n    LotArea + YearBuilt + I(OverallCond^2) + Fireplaces - 1\n\n               Df  Sum of Sq        RSS   AIC\n+ BedroomAbvGr  1 1.0928e+10 1.7393e+12 30536\n+ HalfBath      1 1.0869e+10 1.7394e+12 30536\n<none>                       1.7503e+12 30543\n+ FullBath      1 1.9206e+09 1.7483e+12 30543\n+ PoolArea      1 9.8473e+08 1.7493e+12 30544\n+ TotRmsAbvGrd  1 6.5037e+08 1.7496e+12 30544\n+ YearRemodAdd  1 3.6184e+08 1.7499e+12 30544\n+ MiscVal       1 5.4772e+07 1.7502e+12 30545\n+ BsmtHalfBath  1 3.1375e+07 1.7502e+12 30545\n\nStep:  AIC=30535.56\nSalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual + GarageCars + \n    LotArea + YearBuilt + I(OverallCond^2) + Fireplaces + BedroomAbvGr - \n    1\n\n               Df  Sum of Sq        RSS   AIC\n+ HalfBath      1 1.0654e+10 1.7287e+12 30529\n<none>                       1.7393e+12 30536\n+ PoolArea      1 1.2193e+09 1.7381e+12 30536\n+ TotRmsAbvGrd  1 9.6921e+08 1.7384e+12 30537\n+ FullBath      1 6.9290e+08 1.7386e+12 30537\n+ BsmtHalfBath  1 1.3552e+08 1.7392e+12 30537\n+ YearRemodAdd  1 1.0483e+08 1.7392e+12 30538\n+ MiscVal       1 7.4192e+07 1.7393e+12 30538\n\nStep:  AIC=30528.59\nSalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual + GarageCars + \n    LotArea + YearBuilt + I(OverallCond^2) + Fireplaces + BedroomAbvGr + \n    HalfBath - 1\n\n               Df  Sum of Sq        RSS   AIC\n+ FullBath      1 3687581258 1.7250e+12 30528\n<none>                       1.7287e+12 30529\n+ PoolArea      1 1619420193 1.7271e+12 30529\n+ TotRmsAbvGrd  1 1016446964 1.7277e+12 30530\n+ BsmtHalfBath  1  118529291 1.7286e+12 30530\n+ YearRemodAdd  1   72339578 1.7286e+12 30530\n+ MiscVal       1   71463407 1.7286e+12 30530\n\nStep:  AIC=30527.47\nSalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual + GarageCars + \n    LotArea + YearBuilt + I(OverallCond^2) + Fireplaces + BedroomAbvGr + \n    HalfBath + FullBath - 1\n\n               Df  Sum of Sq        RSS   AIC\n<none>                       1.7250e+12 30528\n+ PoolArea      1 2044866200 1.7229e+12 30528\n+ TotRmsAbvGrd  1 1430943419 1.7236e+12 30528\n+ YearRemodAdd  1  267421941 1.7247e+12 30529\n+ BsmtHalfBath  1   64799154 1.7249e+12 30529\n+ MiscVal       1   60840528 1.7249e+12 30529\n\nShow code\n\nTrain.Backward3 <- step(EXP22,scope=list(lower=EXP21,upper=EXP22),direction = \"backward\")\n\n\nStart:  AIC=30534.48\nSalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + LotArea + \n    YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + \n    FullBath + HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + \n    GarageCars + PoolArea + MiscVal\n\n                   Df  Sum of Sq        RSS   AIC\n- MiscVal           1 7.1855e+07 1.7215e+12 30532\n- BsmtHalfBath      1 1.0668e+08 1.7216e+12 30533\n- YearRemodAdd      1 1.6021e+08 1.7216e+12 30533\n- TotRmsAbvGrd      1 1.1342e+09 1.7226e+12 30533\n- PoolArea          1 1.7110e+09 1.7232e+12 30534\n<none>                           1.7215e+12 30534\n- FullBath          1 4.5338e+09 1.7260e+12 30536\n- BedroomAbvGr      1 8.9806e+09 1.7304e+12 30540\n- HalfBath          1 1.4572e+10 1.7360e+12 30545\n- Fireplaces        1 2.6551e+10 1.7480e+12 30555\n- I(OverallCond^2)  1 4.9682e+10 1.7711e+12 30574\n- LotArea           1 6.4663e+10 1.7861e+12 30586\n- GarageCars        1 6.6921e+10 1.7884e+12 30588\n- YearBuilt         1 1.2039e+11 1.8419e+12 30631\n- GrLivArea         1 2.1076e+11 1.9322e+12 30701\n- KitchenQual       4 2.5077e+11 1.9722e+12 30725\n\nStep:  AIC=30532.55\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n- BsmtHalfBath      1 1.0998e+08 1.7216e+12 30531\n- YearRemodAdd      1 1.5912e+08 1.7217e+12 30531\n- TotRmsAbvGrd      1 1.1045e+09 1.7226e+12 30532\n- PoolArea          1 1.7368e+09 1.7233e+12 30532\n<none>                           1.7215e+12 30532\n- FullBath          1 4.5411e+09 1.7261e+12 30534\n- BedroomAbvGr      1 8.9324e+09 1.7305e+12 30538\n- HalfBath          1 1.4582e+10 1.7361e+12 30543\n- Fireplaces        1 2.6544e+10 1.7481e+12 30553\n- I(OverallCond^2)  1 4.9684e+10 1.7712e+12 30572\n- LotArea           1 6.4594e+10 1.7861e+12 30584\n- GarageCars        1 6.7105e+10 1.7886e+12 30586\n- YearBuilt         1 1.2034e+11 1.8419e+12 30629\n- GrLivArea         1 2.1098e+11 1.9325e+12 30699\n- KitchenQual       4 2.5086e+11 1.9724e+12 30723\n\nStep:  AIC=30530.64\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n- YearRemodAdd      1 1.5824e+08 1.7218e+12 30529\n- TotRmsAbvGrd      1 1.0751e+09 1.7227e+12 30530\n- PoolArea          1 1.7251e+09 1.7234e+12 30530\n<none>                           1.7216e+12 30531\n- FullBath          1 4.6059e+09 1.7262e+12 30532\n- BedroomAbvGr      1 8.8318e+09 1.7305e+12 30536\n- HalfBath          1 1.4634e+10 1.7363e+12 30541\n- Fireplaces        1 2.6730e+10 1.7484e+12 30551\n- I(OverallCond^2)  1 5.0951e+10 1.7726e+12 30571\n- LotArea           1 6.4883e+10 1.7865e+12 30583\n- GarageCars        1 6.7241e+10 1.7889e+12 30585\n- YearBuilt         1 1.2103e+11 1.8427e+12 30628\n- GrLivArea         1 2.1119e+11 1.9328e+12 30698\n- KitchenQual       4 2.5145e+11 1.9731e+12 30722\n\nStep:  AIC=30528.77\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    Fireplaces + GrLivArea + FullBath + HalfBath + BedroomAbvGr + \n    KitchenQual + TotRmsAbvGrd + GarageCars + PoolArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n- TotRmsAbvGrd      1 1.1391e+09 1.7229e+12 30528\n- PoolArea          1 1.7530e+09 1.7236e+12 30528\n<none>                           1.7218e+12 30529\n- FullBath          1 4.4688e+09 1.7263e+12 30531\n- BedroomAbvGr      1 9.2864e+09 1.7311e+12 30535\n- HalfBath          1 1.4582e+10 1.7364e+12 30539\n- Fireplaces        1 2.6617e+10 1.7484e+12 30549\n- I(OverallCond^2)  1 6.1887e+10 1.7837e+12 30578\n- LotArea           1 6.4817e+10 1.7866e+12 30581\n- GarageCars        1 6.7136e+10 1.7889e+12 30583\n- YearBuilt         1 1.4621e+11 1.8680e+12 30646\n- GrLivArea         1 2.1135e+11 1.9332e+12 30696\n- KitchenQual       4 3.0797e+11 2.0298e+12 30761\n\nStep:  AIC=30527.74\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    Fireplaces + GrLivArea + FullBath + HalfBath + BedroomAbvGr + \n    KitchenQual + GarageCars + PoolArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n- PoolArea          1 2.0449e+09 1.7250e+12 30528\n<none>                           1.7229e+12 30528\n- FullBath          1 4.1130e+09 1.7271e+12 30529\n- BedroomAbvGr      1 8.3708e+09 1.7313e+12 30533\n- HalfBath          1 1.4357e+10 1.7373e+12 30538\n- Fireplaces        1 2.6408e+10 1.7493e+12 30548\n- I(OverallCond^2)  1 6.1467e+10 1.7844e+12 30577\n- LotArea           1 6.4232e+10 1.7872e+12 30579\n- GarageCars        1 6.8951e+10 1.7919e+12 30583\n- YearBuilt         1 1.4507e+11 1.8680e+12 30644\n- KitchenQual       4 3.0777e+11 2.0307e+12 30760\n- GrLivArea         1 3.1089e+11 2.0338e+12 30768\n\nStep:  AIC=30527.47\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    Fireplaces + GrLivArea + FullBath + HalfBath + BedroomAbvGr + \n    KitchenQual + GarageCars - 1\n\n                   Df  Sum of Sq        RSS   AIC\n<none>                           1.7250e+12 30528\n- FullBath          1 3.6876e+09 1.7287e+12 30529\n- BedroomAbvGr      1 8.2237e+09 1.7332e+12 30532\n- HalfBath          1 1.3649e+10 1.7386e+12 30537\n- Fireplaces        1 2.6209e+10 1.7512e+12 30548\n- I(OverallCond^2)  1 6.1522e+10 1.7865e+12 30577\n- LotArea           1 6.3752e+10 1.7887e+12 30578\n- GarageCars        1 7.0735e+10 1.7957e+12 30584\n- YearBuilt         1 1.4389e+11 1.8689e+12 30642\n- KitchenQual       4 3.0627e+11 2.0313e+12 30758\n- GrLivArea         1 3.1089e+11 2.0359e+12 30767\n\nShow code\n\nTrain.Both3 <- step(EXP22,scope=list(lower=EXP21,upper=EXP22),direction = \"both\")\n\n\nStart:  AIC=30534.48\nSalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + LotArea + \n    YearBuilt + YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + \n    FullBath + HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + \n    GarageCars + PoolArea + MiscVal\n\n                   Df  Sum of Sq        RSS   AIC\n- MiscVal           1 7.1855e+07 1.7215e+12 30532\n- BsmtHalfBath      1 1.0668e+08 1.7216e+12 30533\n- YearRemodAdd      1 1.6021e+08 1.7216e+12 30533\n- TotRmsAbvGrd      1 1.1342e+09 1.7226e+12 30533\n- PoolArea          1 1.7110e+09 1.7232e+12 30534\n<none>                           1.7215e+12 30534\n- FullBath          1 4.5338e+09 1.7260e+12 30536\n- BedroomAbvGr      1 8.9806e+09 1.7304e+12 30540\n- HalfBath          1 1.4572e+10 1.7360e+12 30545\n- Fireplaces        1 2.6551e+10 1.7480e+12 30555\n- I(OverallCond^2)  1 4.9682e+10 1.7711e+12 30574\n- LotArea           1 6.4663e+10 1.7861e+12 30586\n- GarageCars        1 6.6921e+10 1.7884e+12 30588\n- YearBuilt         1 1.2039e+11 1.8419e+12 30631\n- GrLivArea         1 2.1076e+11 1.9322e+12 30701\n- KitchenQual       4 2.5077e+11 1.9722e+12 30725\n\nStep:  AIC=30532.55\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + BsmtHalfBath + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n- BsmtHalfBath      1 1.0998e+08 1.7216e+12 30531\n- YearRemodAdd      1 1.5912e+08 1.7217e+12 30531\n- TotRmsAbvGrd      1 1.1045e+09 1.7226e+12 30532\n- PoolArea          1 1.7368e+09 1.7233e+12 30532\n<none>                           1.7215e+12 30532\n- FullBath          1 4.5411e+09 1.7261e+12 30534\n+ MiscVal           1 7.1855e+07 1.7215e+12 30534\n- BedroomAbvGr      1 8.9324e+09 1.7305e+12 30538\n- HalfBath          1 1.4582e+10 1.7361e+12 30543\n- Fireplaces        1 2.6544e+10 1.7481e+12 30553\n- I(OverallCond^2)  1 4.9684e+10 1.7712e+12 30572\n- LotArea           1 6.4594e+10 1.7861e+12 30584\n- GarageCars        1 6.7105e+10 1.7886e+12 30586\n- YearBuilt         1 1.2034e+11 1.8419e+12 30629\n- GrLivArea         1 2.1098e+11 1.9325e+12 30699\n- KitchenQual       4 2.5086e+11 1.9724e+12 30723\n\nStep:  AIC=30530.64\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    YearRemodAdd + Fireplaces + GrLivArea + FullBath + HalfBath + \n    BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars + \n    PoolArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n- YearRemodAdd      1 1.5824e+08 1.7218e+12 30529\n- TotRmsAbvGrd      1 1.0751e+09 1.7227e+12 30530\n- PoolArea          1 1.7251e+09 1.7234e+12 30530\n<none>                           1.7216e+12 30531\n- FullBath          1 4.6059e+09 1.7262e+12 30532\n+ BsmtHalfBath      1 1.0998e+08 1.7215e+12 30532\n+ MiscVal           1 7.5152e+07 1.7216e+12 30533\n- BedroomAbvGr      1 8.8318e+09 1.7305e+12 30536\n- HalfBath          1 1.4634e+10 1.7363e+12 30541\n- Fireplaces        1 2.6730e+10 1.7484e+12 30551\n- I(OverallCond^2)  1 5.0951e+10 1.7726e+12 30571\n- LotArea           1 6.4883e+10 1.7865e+12 30583\n- GarageCars        1 6.7241e+10 1.7889e+12 30585\n- YearBuilt         1 1.2103e+11 1.8427e+12 30628\n- GrLivArea         1 2.1119e+11 1.9328e+12 30698\n- KitchenQual       4 2.5145e+11 1.9731e+12 30722\n\nStep:  AIC=30528.77\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    Fireplaces + GrLivArea + FullBath + HalfBath + BedroomAbvGr + \n    KitchenQual + TotRmsAbvGrd + GarageCars + PoolArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n- TotRmsAbvGrd      1 1.1391e+09 1.7229e+12 30528\n- PoolArea          1 1.7530e+09 1.7236e+12 30528\n<none>                           1.7218e+12 30529\n- FullBath          1 4.4688e+09 1.7263e+12 30531\n+ YearRemodAdd      1 1.5824e+08 1.7216e+12 30531\n+ BsmtHalfBath      1 1.0909e+08 1.7217e+12 30531\n+ MiscVal           1 7.4035e+07 1.7217e+12 30531\n- BedroomAbvGr      1 9.2864e+09 1.7311e+12 30535\n- HalfBath          1 1.4582e+10 1.7364e+12 30539\n- Fireplaces        1 2.6617e+10 1.7484e+12 30549\n- I(OverallCond^2)  1 6.1887e+10 1.7837e+12 30578\n- LotArea           1 6.4817e+10 1.7866e+12 30581\n- GarageCars        1 6.7136e+10 1.7889e+12 30583\n- YearBuilt         1 1.4621e+11 1.8680e+12 30646\n- GrLivArea         1 2.1135e+11 1.9332e+12 30696\n- KitchenQual       4 3.0797e+11 2.0298e+12 30761\n\nStep:  AIC=30527.74\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    Fireplaces + GrLivArea + FullBath + HalfBath + BedroomAbvGr + \n    KitchenQual + GarageCars + PoolArea - 1\n\n                   Df  Sum of Sq        RSS   AIC\n- PoolArea          1 2.0449e+09 1.7250e+12 30528\n<none>                           1.7229e+12 30528\n+ TotRmsAbvGrd      1 1.1391e+09 1.7218e+12 30529\n- FullBath          1 4.1130e+09 1.7271e+12 30529\n+ YearRemodAdd      1 2.2223e+08 1.7227e+12 30530\n+ BsmtHalfBath      1 7.8811e+07 1.7229e+12 30530\n+ MiscVal           1 4.2825e+07 1.7229e+12 30530\n- BedroomAbvGr      1 8.3708e+09 1.7313e+12 30533\n- HalfBath          1 1.4357e+10 1.7373e+12 30538\n- Fireplaces        1 2.6408e+10 1.7493e+12 30548\n- I(OverallCond^2)  1 6.1467e+10 1.7844e+12 30577\n- LotArea           1 6.4232e+10 1.7872e+12 30579\n- GarageCars        1 6.8951e+10 1.7919e+12 30583\n- YearBuilt         1 1.4507e+11 1.8680e+12 30644\n- KitchenQual       4 3.0777e+11 2.0307e+12 30760\n- GrLivArea         1 3.1089e+11 2.0338e+12 30768\n\nStep:  AIC=30527.47\nSalePrice ~ I(OverallQual^2) + I(OverallCond^2) + LotArea + YearBuilt + \n    Fireplaces + GrLivArea + FullBath + HalfBath + BedroomAbvGr + \n    KitchenQual + GarageCars - 1\n\n                   Df  Sum of Sq        RSS   AIC\n<none>                           1.7250e+12 30528\n+ PoolArea          1 2.0449e+09 1.7229e+12 30528\n+ TotRmsAbvGrd      1 1.4309e+09 1.7236e+12 30528\n- FullBath          1 3.6876e+09 1.7287e+12 30529\n+ YearRemodAdd      1 2.6742e+08 1.7247e+12 30529\n+ BsmtHalfBath      1 6.4799e+07 1.7249e+12 30529\n+ MiscVal           1 6.0841e+07 1.7249e+12 30529\n- BedroomAbvGr      1 8.2237e+09 1.7332e+12 30532\n- HalfBath          1 1.3649e+10 1.7386e+12 30537\n- Fireplaces        1 2.6209e+10 1.7512e+12 30548\n- I(OverallCond^2)  1 6.1522e+10 1.7865e+12 30577\n- LotArea           1 6.3752e+10 1.7887e+12 30578\n- GarageCars        1 7.0735e+10 1.7957e+12 30584\n- YearBuilt         1 1.4389e+11 1.8689e+12 30642\n- KitchenQual       4 3.0627e+11 2.0313e+12 30758\n- GrLivArea         1 3.1089e+11 2.0359e+12 30767\n\nShow code\n\nsummary(Train.Forward3)\n\n\n\nCall:\nlm(formula = SalePrice ~ I(OverallQual^2) + GrLivArea + KitchenQual + \n    GarageCars + LotArea + YearBuilt + I(OverallCond^2) + Fireplaces + \n    BedroomAbvGr + HalfBath + FullBath - 1, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-456633  -16586    -788   14314  247974 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)  1.497e+03  9.320e+01  16.058  < 2e-16 ***\nGrLivArea         5.642e+01  3.495e+00  16.143  < 2e-16 ***\nKitchenQualEx    -1.031e+06  9.864e+04 -10.451  < 2e-16 ***\nKitchenQualFa    -1.074e+06  9.720e+04 -11.047  < 2e-16 ***\nKitchenQualGd    -1.075e+06  9.863e+04 -10.898  < 2e-16 ***\nKitchenQualTA    -1.080e+06  9.792e+04 -11.026  < 2e-16 ***\nGarageCars        1.281e+04  1.664e+03   7.700 2.50e-14 ***\nLotArea           7.081e-01  9.686e-02   7.310 4.39e-13 ***\nYearBuilt         5.474e+02  4.984e+01  10.982  < 2e-16 ***\nI(OverallCond^2)  5.568e+02  7.753e+01   7.181 1.10e-12 ***\nFireplaces        7.755e+03  1.655e+03   4.687 3.03e-06 ***\nBedroomAbvGr     -3.790e+03  1.444e+03  -2.626 0.008741 ** \nHalfBath         -7.264e+03  2.148e+03  -3.383 0.000737 ***\nFullBath         -4.528e+03  2.576e+03  -1.758 0.078929 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34540 on 1446 degrees of freedom\nMultiple R-squared:  0.9697,    Adjusted R-squared:  0.9694 \nF-statistic:  3310 on 14 and 1446 DF,  p-value: < 2.2e-16\n\nShow code\n\nsummary(Train.Backward3)\n\n\n\nCall:\nlm(formula = SalePrice ~ I(OverallQual^2) + I(OverallCond^2) + \n    LotArea + YearBuilt + Fireplaces + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + GarageCars - 1, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-456633  -16586    -788   14314  247974 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)  1.497e+03  9.320e+01  16.058  < 2e-16 ***\nI(OverallCond^2)  5.568e+02  7.753e+01   7.181 1.10e-12 ***\nLotArea           7.081e-01  9.686e-02   7.310 4.39e-13 ***\nYearBuilt         5.474e+02  4.984e+01  10.982  < 2e-16 ***\nFireplaces        7.755e+03  1.655e+03   4.687 3.03e-06 ***\nGrLivArea         5.642e+01  3.495e+00  16.143  < 2e-16 ***\nFullBath         -4.528e+03  2.576e+03  -1.758 0.078929 .  \nHalfBath         -7.264e+03  2.148e+03  -3.383 0.000737 ***\nBedroomAbvGr     -3.790e+03  1.444e+03  -2.626 0.008741 ** \nKitchenQualEx    -1.031e+06  9.864e+04 -10.451  < 2e-16 ***\nKitchenQualFa    -1.074e+06  9.720e+04 -11.047  < 2e-16 ***\nKitchenQualGd    -1.075e+06  9.863e+04 -10.898  < 2e-16 ***\nKitchenQualTA    -1.080e+06  9.792e+04 -11.026  < 2e-16 ***\nGarageCars        1.281e+04  1.664e+03   7.700 2.50e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34540 on 1446 degrees of freedom\nMultiple R-squared:  0.9697,    Adjusted R-squared:  0.9694 \nF-statistic:  3310 on 14 and 1446 DF,  p-value: < 2.2e-16\n\nShow code\n\nsummary(Train.Both3)\n\n\n\nCall:\nlm(formula = SalePrice ~ I(OverallQual^2) + I(OverallCond^2) + \n    LotArea + YearBuilt + Fireplaces + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + GarageCars - 1, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-456633  -16586    -788   14314  247974 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)  1.497e+03  9.320e+01  16.058  < 2e-16 ***\nI(OverallCond^2)  5.568e+02  7.753e+01   7.181 1.10e-12 ***\nLotArea           7.081e-01  9.686e-02   7.310 4.39e-13 ***\nYearBuilt         5.474e+02  4.984e+01  10.982  < 2e-16 ***\nFireplaces        7.755e+03  1.655e+03   4.687 3.03e-06 ***\nGrLivArea         5.642e+01  3.495e+00  16.143  < 2e-16 ***\nFullBath         -4.528e+03  2.576e+03  -1.758 0.078929 .  \nHalfBath         -7.264e+03  2.148e+03  -3.383 0.000737 ***\nBedroomAbvGr     -3.790e+03  1.444e+03  -2.626 0.008741 ** \nKitchenQualEx    -1.031e+06  9.864e+04 -10.451  < 2e-16 ***\nKitchenQualFa    -1.074e+06  9.720e+04 -11.047  < 2e-16 ***\nKitchenQualGd    -1.075e+06  9.863e+04 -10.898  < 2e-16 ***\nKitchenQualTA    -1.080e+06  9.792e+04 -11.026  < 2e-16 ***\nGarageCars        1.281e+04  1.664e+03   7.700 2.50e-14 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34540 on 1446 degrees of freedom\nMultiple R-squared:  0.9697,    Adjusted R-squared:  0.9694 \nF-statistic:  3310 on 14 and 1446 DF,  p-value: < 2.2e-16\n\nShow code\n\nnames(Train.Both$coefficients)\n\n\n [1] \"(Intercept)\"   \"OverallQual\"   \"OverallCond\"   \"LotArea\"      \n [5] \"YearBuilt\"     \"Fireplaces\"    \"TotalBsmtSF\"   \"GrLivArea\"    \n [9] \"BedroomAbvGr\"  \"KitchenQualFa\" \"KitchenQualGd\" \"KitchenQualTA\"\n[13] \"TotRmsAbvGrd\"  \"GarageCars\"   \n\nShow code\n\nvif(Train.Both3) \n\n\n                         GVIF Df GVIF^(1/(2*Df))\nI(OverallQual^2)    19.517437  1        4.417854\nI(OverallCond^2)     9.008160  1        3.001360\nLotArea              2.413217  1        1.553453\nYearBuilt        11817.146104  1      108.706698\nFireplaces           2.650615  1        1.628071\nGrLivArea           38.463374  1        6.201885\nFullBath            22.349487  1        4.727524\nHalfBath             2.253850  1        1.501283\nBedroomAbvGr        22.649929  1        4.759194\nKitchenQual      26673.482006  4        3.574868\nGarageCars          12.474249  1        3.531890\n\nShow code\n\n#YearBuilt 변수 삭제 (VIF=108.7이 나옴)\n\nVIF_Train <- lm(SalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + LotArea +   \n                  YearRemodAdd + Fireplaces +  TotalBsmtSF + GrLivArea + FullBath +  \n                  HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars , data=train)\n\nvif(VIF_Train)\n\n\n                         GVIF Df GVIF^(1/(2*Df))\nI(OverallQual^2)    19.440035  1        4.409086\nI(OverallCond^2)     8.244378  1        2.871302\nLotArea              2.471172  1        1.571996\nYearRemodAdd     19572.871957  1      139.903081\nFireplaces           2.699318  1        1.642960\nTotalBsmtSF         13.148084  1        3.626029\nGrLivArea           52.414483  1        7.239785\nFullBath            21.842223  1        4.673566\nHalfBath             2.404366  1        1.550602\nBedroomAbvGr        30.014369  1        5.478537\nKitchenQual      44913.790948  4        3.815465\nTotRmsAbvGrd        76.059089  1        8.721186\nGarageCars          12.040855  1        3.469994\n\nShow code\n\nsummary(VIF_Train)\n\n\n\nCall:\nlm(formula = SalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + \n    LotArea + YearRemodAdd + Fireplaces + TotalBsmtSF + GrLivArea + \n    FullBath + HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + \n    GarageCars, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-487700  -16218   -1175   15617  261839 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)  1.540e+03  9.389e+01  16.398  < 2e-16 ***\nI(OverallCond^2)  2.523e+02  7.487e+01   3.370 0.000771 ***\nLotArea           6.147e-01  9.894e-02   6.213 6.79e-10 ***\nYearRemodAdd      2.488e+02  6.431e+01   3.869 0.000114 ***\nFireplaces        7.522e+03  1.685e+03   4.463 8.70e-06 ***\nTotalBsmtSF       2.463e+01  2.890e+00   8.522  < 2e-16 ***\nGrLivArea         3.396e+01  4.119e+00   8.246 3.64e-16 ***\nFullBath          5.312e+03  2.570e+03   2.067 0.038934 *  \nHalfBath          5.254e+03  2.239e+03   2.347 0.019071 *  \nBedroomAbvGr     -3.620e+03  1.677e+03  -2.158 0.031073 *  \nKitchenQualEx    -4.625e+05  1.269e+05  -3.646 0.000276 ***\nKitchenQualFa    -5.067e+05  1.252e+05  -4.047 5.46e-05 ***\nKitchenQualGd    -5.015e+05  1.268e+05  -3.956 8.00e-05 ***\nKitchenQualTA    -5.086e+05  1.257e+05  -4.047 5.46e-05 ***\nTotRmsAbvGrd      9.462e+02  1.185e+03   0.799 0.424585    \nGarageCars        1.500e+04  1.650e+03   9.089  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 34860 on 1444 degrees of freedom\nMultiple R-squared:  0.9692,    Adjusted R-squared:  0.9689 \nF-statistic:  2841 on 16 and 1444 DF,  p-value: < 2.2e-16\n\nShow code\n\nVIF_Train2 <- lm(SalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + LotArea +   \n                  Fireplaces +  TotalBsmtSF + GrLivArea + FullBath +  \n                  HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars , data=train)\n\nvif(VIF_Train2)\n\n\n                      GVIF Df GVIF^(1/(2*Df))\nI(OverallQual^2) 18.998571  1        4.358735\nI(OverallCond^2)  7.758180  1        2.785351\nLotArea           2.470739  1        1.571858\nFireplaces        2.663696  1        1.632083\nTotalBsmtSF      13.061808  1        3.614112\nGrLivArea        51.628625  1        7.185306\nFullBath         20.402740  1        4.516939\nHalfBath          2.343960  1        1.531000\nBedroomAbvGr     29.627004  1        5.443069\nKitchenQual      83.964703  4        1.739851\nTotRmsAbvGrd     75.943156  1        8.714537\nGarageCars       11.984081  1        3.461803\n\nShow code\n\nsummary(VIF_Train2)\n\n\n\nCall:\nlm(formula = SalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + \n    LotArea + Fireplaces + TotalBsmtSF + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars, \n    data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-484350  -16575    -606   15850  259053 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)  1.594e+03  9.327e+01  17.095  < 2e-16 ***\nI(OverallCond^2)  3.226e+02  7.298e+01   4.421 1.05e-05 ***\nLotArea           6.096e-01  9.941e-02   6.133 1.11e-09 ***\nFireplaces        6.773e+03  1.682e+03   4.026 5.97e-05 ***\nTotalBsmtSF       2.553e+01  2.894e+00   8.822  < 2e-16 ***\nGrLivArea         3.201e+01  4.107e+00   7.794 1.24e-14 ***\nFullBath          7.865e+03  2.496e+03   3.151 0.001661 ** \nHalfBath          6.627e+03  2.221e+03   2.984 0.002897 ** \nBedroomAbvGr     -4.357e+03  1.675e+03  -2.602 0.009358 ** \nKitchenQualEx     2.730e+04  8.271e+03   3.301 0.000988 ***\nKitchenQualFa    -2.312e+04  7.399e+03  -3.125 0.001813 ** \nKitchenQualGd    -1.162e+04  6.500e+03  -1.787 0.074099 .  \nKitchenQualTA    -2.285e+04  5.675e+03  -4.026 5.97e-05 ***\nTotRmsAbvGrd      1.125e+03  1.189e+03   0.946 0.344338    \nGarageCars        1.544e+04  1.654e+03   9.332  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 35030 on 1445 degrees of freedom\nMultiple R-squared:  0.9689,    Adjusted R-squared:  0.9686 \nF-statistic:  3000 on 15 and 1445 DF,  p-value: < 2.2e-16\n\nShow code\n\npar(mfrow=c(2,2))\nplot(VIF_Train)\n\n\n\nShow code\n\n##524,692,1183,1299번 Outlier\nModified_Train3<-lm(SalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + LotArea +   \n                       Fireplaces +  TotalBsmtSF + GrLivArea + FullBath +  \n                      HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars , data=train[-c(524,692,1183,1299), ])\nsummary(Modified_Train3)\n\n\n\nCall:\nlm(formula = SalePrice ~ -1 + I(OverallQual^2) + I(OverallCond^2) + \n    LotArea + Fireplaces + TotalBsmtSF + GrLivArea + FullBath + \n    HalfBath + BedroomAbvGr + KitchenQual + TotRmsAbvGrd + GarageCars, \n    data = train[-c(524, 692, 1183, 1299), ])\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-134428  -16357     -93   16347  204526 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)  1.475e+03  7.816e+01  18.872  < 2e-16 ***\nI(OverallCond^2)  3.297e+02  6.101e+01   5.405 7.59e-08 ***\nLotArea           7.428e-01  8.327e-02   8.921  < 2e-16 ***\nFireplaces        4.083e+03  1.416e+03   2.883  0.00400 ** \nTotalBsmtSF       3.860e+01  2.505e+00  15.411  < 2e-16 ***\nGrLivArea         4.352e+01  3.666e+00  11.871  < 2e-16 ***\nFullBath          5.168e+03  2.092e+03   2.470  0.01361 *  \nHalfBath          8.059e+03  1.859e+03   4.336 1.56e-05 ***\nBedroomAbvGr     -7.563e+03  1.406e+03  -5.379 8.72e-08 ***\nKitchenQualEx     2.046e+04  6.921e+03   2.957  0.00316 ** \nKitchenQualFa    -2.838e+04  6.191e+03  -4.583 4.97e-06 ***\nKitchenQualGd    -1.735e+04  5.446e+03  -3.185  0.00148 ** \nKitchenQualTA    -2.765e+04  4.750e+03  -5.821 7.22e-09 ***\nTotRmsAbvGrd      7.689e+02  1.014e+03   0.758  0.44842    \nGarageCars        1.220e+04  1.394e+03   8.753  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 29280 on 1441 degrees of freedom\nMultiple R-squared:  0.9779,    Adjusted R-squared:  0.9776 \nF-statistic:  4244 on 15 and 1441 DF,  p-value: < 2.2e-16\n\nShow code\n\npar(mfrow=c(2,2))\nplot(Modified_Train3)\n\n\n\nShow code\n\n## R^2 값이 소폭 상승하였다 (From 0.9673 to 0.9767)\n\n\nsample[,5] <- predict(Modified_Train3, newdata = test)\n\n\n## Overfitting(과적합)의 문제가 발생\n\n\n\n4. Linear Model (자의적 선택) 로 분석\n(1) 데이터를 분석하여 가장 연관이 높은 변수들을 선정해서 넣었다.(2) Intercept는 0으로 설정. .(3) lm과 glm(gamma)으로 해본 결과, lm이 더 유의미한 결과를 보였다. \n결과\nlm의 Adjusted R-Squared는 0.9723이 나왔다.\nglm의 AIC는 33710이었다.\nlm의 Test MSE를 Square Root 한 결과 67094.14 (1.lm = 69273.98) 값이 나왔다.\nglm의 Test MSE를 Square Root 한 결과 72931.86 (1.lm = 69273.98) 값이 나왔다.\n\n\nShow code\n\nFinalEXP <- lm(SalePrice ~ -1 + I(OverallQual^2) +  YearRemodAdd + I(sqrt(LotArea)) + GarageCars+ TotRmsAbvGrd + KitchenQual + PavedDrive + FullBath + GrLivArea ,data = train)\nvif(FinalEXP)\n\n\n                        GVIF Df GVIF^(1/(2*Df))\nI(OverallQual^2)    17.66836  1        4.203375\nYearRemodAdd     17987.90730  1      134.119004\nI(sqrt(LotArea))    15.40452  1        3.924860\nGarageCars          12.01542  1        3.466327\nTotRmsAbvGrd        57.42162  1        7.577705\nKitchenQual      40079.62791  4        3.761538\nPavedDrive          19.01636  2        2.088247\nFullBath            18.60745  1        4.313635\nGrLivArea           42.92193  1        6.551483\n\nShow code\n\nsummary(FinalEXP)\n\n\n\nCall:\nlm(formula = SalePrice ~ -1 + I(OverallQual^2) + YearRemodAdd + \n    I(sqrt(LotArea)) + GarageCars + TotRmsAbvGrd + KitchenQual + \n    PavedDrive + FullBath + GrLivArea, data = train)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-420834  -16965    -300   15239  260102 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)  1.813e+03  9.074e+01  19.983  < 2e-16 ***\nYearRemodAdd      3.068e+02  6.249e+01   4.909 1.02e-06 ***\nI(sqrt(LotArea))  3.948e+02  3.540e+01  11.153  < 2e-16 ***\nGarageCars        1.392e+04  1.671e+03   8.331  < 2e-16 ***\nTotRmsAbvGrd     -1.601e+03  1.043e+03  -1.535    0.125    \nKitchenQualEx    -5.892e+05  1.244e+05  -4.737 2.38e-06 ***\nKitchenQualFa    -6.382e+05  1.225e+05  -5.211 2.15e-07 ***\nKitchenQualGd    -6.335e+05  1.242e+05  -5.099 3.87e-07 ***\nKitchenQualTA    -6.414e+05  1.231e+05  -5.212 2.14e-07 ***\nPavedDriveP       4.868e+03  7.519e+03   0.647    0.517    \nPavedDriveY       1.673e+04  4.111e+03   4.069 4.98e-05 ***\nFullBath          6.477e+02  2.405e+03   0.269    0.788    \nGrLivArea         4.364e+01  3.778e+00  11.551  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 35340 on 1447 degrees of freedom\nMultiple R-squared:  0.9683,    Adjusted R-squared:  0.968 \nF-statistic:  3399 on 13 and 1447 DF,  p-value: < 2.2e-16\n\nShow code\n\nplot(FinalEXP)\n\n\n\nShow code\n\nFinalEXP <- lm(SalePrice ~ -1 + I(OverallQual^2) + I(sqrt(LotArea)) + GarageCars + TotRmsAbvGrd +  KitchenQual + PavedDrive + FullBath + GrLivArea ,data = train[-c(314,336,692,1183,1299),])\nvif(FinalEXP)\n\n\n                     GVIF Df GVIF^(1/(2*Df))\nI(OverallQual^2) 16.99839  1        4.122910\nI(sqrt(LotArea)) 19.12125  1        4.372786\nGarageCars       12.06234  1        3.473089\nTotRmsAbvGrd     60.18068  1        7.757621\nKitchenQual      98.86429  4        1.775742\nPavedDrive       18.82282  2        2.082913\nFullBath         18.13701  1        4.258757\nGrLivArea        47.38654  1        6.883788\n\nShow code\n\nsummary(FinalEXP)\n\n\n\nCall:\nlm(formula = SalePrice ~ -1 + I(OverallQual^2) + I(sqrt(LotArea)) + \n    GarageCars + TotRmsAbvGrd + KitchenQual + PavedDrive + FullBath + \n    GrLivArea, data = train[-c(314, 336, 692, 1183, 1299), ])\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-354109  -17765    -228   16426  249670 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \nI(OverallQual^2)   1887.374     82.485  22.881  < 2e-16 ***\nI(sqrt(LotArea))    449.574     36.908  12.181  < 2e-16 ***\nGarageCars        13120.598   1546.532   8.484  < 2e-16 ***\nTotRmsAbvGrd      -1700.258    987.293  -1.722   0.0853 .  \nKitchenQualEx     15578.704   7906.478   1.970   0.0490 *  \nKitchenQualFa    -42530.592   7158.885  -5.941 3.55e-09 ***\nKitchenQualGd    -27348.756   6409.316  -4.267 2.11e-05 ***\nKitchenQualTA    -41942.069   5864.179  -7.152 1.35e-12 ***\nPavedDriveP        1036.135   6900.519   0.150   0.8807    \nPavedDriveY       17015.577   3786.504   4.494 7.56e-06 ***\nFullBath            378.682   2194.962   0.173   0.8631    \nGrLivArea            43.993      3.695  11.907  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 32550 on 1443 degrees of freedom\nMultiple R-squared:  0.9725,    Adjusted R-squared:  0.9723 \nF-statistic:  4257 on 12 and 1443 DF,  p-value: < 2.2e-16\n\nShow code\n\nplot(FinalEXP)\n\n\n\nShow code\n\nFinalEXP2 <- glm(SalePrice ~ I(OverallQual^2) + YearRemodAdd + I(sqrt(LotArea)) + GarageCars+ TotRmsAbvGrd + KitchenQual + PavedDrive + FullBath + GrLivArea , family = Gamma(link=\"log\")  ,data = train)\nvif(FinalEXP2)\n\n\n                     GVIF Df GVIF^(1/(2*Df))\nI(OverallQual^2) 2.945313  1        1.716191\nYearRemodAdd     1.944557  1        1.394474\nI(sqrt(LotArea)) 1.209582  1        1.099810\nGarageCars       1.821814  1        1.349746\nTotRmsAbvGrd     3.359752  1        1.832963\nKitchenQual      2.832261  3        1.189476\nPavedDrive       1.172242  2        1.040529\nFullBath         2.050192  1        1.431849\nGrLivArea        4.603915  1        2.145674\n\nShow code\n\nsummary(FinalEXP2)\n\n\n\nCall:\nglm(formula = SalePrice ~ I(OverallQual^2) + YearRemodAdd + I(sqrt(LotArea)) + \n    GarageCars + TotRmsAbvGrd + KitchenQual + PavedDrive + FullBath + \n    GrLivArea, family = Gamma(link = \"log\"), data = train)\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.50674  -0.08620   0.00473   0.08402   0.61847  \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       5.694e+00  5.303e-01  10.739  < 2e-16 ***\nI(OverallQual^2)  8.314e-03  3.869e-04  21.490  < 2e-16 ***\nYearRemodAdd      2.653e-03  2.665e-04   9.957  < 2e-16 ***\nI(sqrt(LotArea))  2.249e-03  1.509e-04  14.898  < 2e-16 ***\nGarageCars        7.790e-02  7.125e-03  10.932  < 2e-16 ***\nTotRmsAbvGrd     -5.392e-03  4.449e-03  -1.212 0.225703    \nKitchenQualFa    -1.896e-01  3.378e-02  -5.613 2.38e-08 ***\nKitchenQualGd    -6.817e-02  1.809e-02  -3.768 0.000171 ***\nKitchenQualTA    -1.210e-01  2.122e-02  -5.701 1.44e-08 ***\nPavedDriveP       1.134e-01  3.206e-02   3.536 0.000418 ***\nPavedDriveY       1.759e-01  1.753e-02  10.033  < 2e-16 ***\nFullBath          8.990e-03  1.025e-02   0.877 0.380733    \nGrLivArea         2.262e-04  1.611e-05  14.041  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.02270725)\n\n    Null deviance: 238.76  on 1459  degrees of freedom\nResidual deviance:  37.24  on 1447  degrees of freedom\nAIC: 33931\n\nNumber of Fisher Scoring iterations: 6\n\nShow code\n\nplot(FinalEXP2)\n\n\n\nShow code\n\nFinalEXP2 <- glm(SalePrice ~ I(OverallQual^2) + YearRemodAdd + I(sqrt(LotArea)) + GarageCars + TotRmsAbvGrd +  KitchenQual + PavedDrive + FullBath + GrLivArea , family = Gamma(link=\"log\") ,data = train[-c(314,336,692,1183,1299),])\nvif(FinalEXP2)\n\n\n                     GVIF Df GVIF^(1/(2*Df))\nI(OverallQual^2) 2.878437  1        1.696596\nYearRemodAdd     1.943712  1        1.394171\nI(sqrt(LotArea)) 1.223026  1        1.105905\nGarageCars       1.837880  1        1.355684\nTotRmsAbvGrd     3.493617  1        1.869122\nKitchenQual      2.793274  3        1.186731\nPavedDrive       1.173494  2        1.040807\nFullBath         2.056364  1        1.434003\nGrLivArea        4.786468  1        2.187800\n\nShow code\n\nsummary(FinalEXP2)\n\n\n\nCall:\nglm(formula = SalePrice ~ I(OverallQual^2) + YearRemodAdd + I(sqrt(LotArea)) + \n    GarageCars + TotRmsAbvGrd + KitchenQual + PavedDrive + FullBath + \n    GrLivArea, family = Gamma(link = \"log\"), data = train[-c(314, \n    336, 692, 1183, 1299), ])\n\nDeviance Residuals: \n     Min        1Q    Median        3Q       Max  \n-1.32036  -0.08344   0.00450   0.08320   0.62924  \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)       5.554e+00  5.220e-01  10.641  < 2e-16 ***\nI(OverallQual^2)  8.322e-03  3.810e-04  21.843  < 2e-16 ***\nYearRemodAdd      2.716e-03  2.623e-04  10.357  < 2e-16 ***\nI(sqrt(LotArea))  2.522e-03  1.681e-04  15.002  < 2e-16 ***\nGarageCars        7.271e-02  7.051e-03  10.312  < 2e-16 ***\nTotRmsAbvGrd     -9.903e-03  4.494e-03  -2.203 0.027719 *  \nKitchenQualFa    -1.930e-01  3.326e-02  -5.801 8.08e-09 ***\nKitchenQualGd    -7.321e-02  1.790e-02  -4.090 4.56e-05 ***\nKitchenQualTA    -1.229e-01  2.091e-02  -5.876 5.22e-09 ***\nPavedDriveP       1.109e-01  3.153e-02   3.516 0.000451 ***\nPavedDriveY       1.775e-01  1.724e-02  10.296  < 2e-16 ***\nFullBath          4.896e-03  1.015e-02   0.482 0.629670    \nGrLivArea         2.494e-04  1.688e-05  14.773  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Gamma family taken to be 0.02195566)\n\n    Null deviance: 231.061  on 1454  degrees of freedom\nResidual deviance:  34.734  on 1442  degrees of freedom\nAIC: 33710\n\nNumber of Fisher Scoring iterations: 5\n\nShow code\n\nplot(FinalEXP2)\n\n\n\nShow code\n\nsample[,6] <- predict(FinalEXP, newdata = test)\nsample[,7] <- exp(predict(FinalEXP2, newdata = test))\n\n\n\n5. MSE 구하기 & Excel 출력\n(1) 각 예측값에 MSE를 구하였다.(2) 그후 Prediction.xlsx로 출력하였다.(3) 재미삼아 lm+glm의 결과를 혼합하여 TEST MSE 측정해보았다 \n결과\n개별적으로는 4번에서의 Linear Model이 가장 결과가 좋았다.\n최대한 TEST MSE를 줄이기 위해 갖가지 노력을 해보았으나 오히려 값만 증가했다.\n\n\nShow code\n\nfor (i in 1:nrow(sample)) { \n  if ((abs(sample[i,2]-sample[i,6]) - abs(sample[i,2]-sample[i,7])) >= 0){\n  sample[i,8] <- sample [i,7]\n} else {sample[i,8] <- sample [i,6]}\n}\n\nSqrtTESTMSE <- data.frame(lm=c(0) , glm=c(0), lmwithoutintercept=c(0) , lm2=c(0) , glm2 =c(0) , mix =c(0))\n\nfor (i in 1:6) {\n  Error <- ((sample[,2]-sample[,i+2])^2)\n  Error<-na.exclude(Error)\n  SqrtTESTMSE[i]<-sqrt(sum(Error)/nrow(sample))\n  }\n\nSqrtTESTMSE\n\n\n        lm      glm lmwithoutintercept      lm2     glm2      mix\n1 69273.98 74512.99           70062.37 67094.14 72931.86 62781.36\n\nShow code\n\ncolnames(sample) <- c(\"Id\", \"SalePrice\",\"lm\",\"glm\",\"lmwithoutintercept\",\"lm2\",\"glm2\",\"MIX\")\n\n\nNewsample <- sample %>% select(\"Id\", \"SalePrice\", \"lm2\")\n\ncolnames(Newsample) <- c(\"Id\", \"SalePrice\",\"SalePrice(Fitted)\")\n\n\n\nview(Newsample)\n\nwrite.xlsx(Newsample, file = \"Prediction.xlsx\",\n           sheetName = \"Prediction\", append = FALSE)\n\n\n\n그 외 아쉬운 것들\n지역별로 세분화하여 회귀모형을 하면 어떤 값이 나올까 궁금하였다.\nlm,glm 이외에도 다양한 회귀분석(Ridge Regression, Decision Tree 등)을 배우면\n예측값이 나아질 것이라 생각하였다.\n\n\n\n",
      "last_modified": "2021-03-18T11:29:35+00:00"
    },
    {
      "path": "citations.html",
      "title": "Rammon's Portfolio",
      "author": [],
      "contents": "\nBermuda Option\nCase <- 100 시나리오 갯수Ini.Stock<-100 초기 주가StrikePrice<-100 옵션 행사 가격year<- 10 년도unit<- 12 단위 (12: 12개월, 365, 365일)interval <- year X unit (구간의 갯수)t <- 1/unit 년도를 구간으로 나눠준 수  r <-0.03sigma<-0.2mu <- r-0.5 X sigma^2Bermuda.Start <- 50Bermuda.End <- 110 버뮤다의 마지막 구간은 interval과 같거나 작아야함.\n\n\nBermuda_option <-function(CallorPut,Case,Ini.Stock,StrikePrice,year,unit,r,sigma,Bermuda.Start,Bermuda.End){\n  interval <- year * unit\n  t <- 1/unit\n  mu <- r-0.5*sigma^2\n  \n  set.seed(5)\n  \n  rnd.num <- as.data.frame(matrix(rnorm(Case*interval), nrow = Case, ncol=interval))\n  \n  Yield.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval+1))\n  Payoff.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval))\n  Bermuda.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = 1))\n  \n  if (CallorPut == 1){  \n    for (i in 1:Case) {\n      for (j in 1:interval) {\n        \n        Yield.table[i,j+1] <-  Yield.table[i,j] + (mu*t+(sigma*sqrt(t)*rnd.num[i,j]))\n        Payoff.table[i,j]  <-  exp(-r*j/unit)*max(0,Ini.Stock*exp(Yield.table[i,j+1])-StrikePrice)  \n      }}} else if (CallorPut == 2){\n        for (i in 1:Case) {\n          for (j in 1:interval) {\n            \n            Yield.table[i,j+1] <-  Yield.table[i,j] + (mu*t+(sigma*sqrt(t)*rnd.num[i,j]))\n            Payoff.table[i,j]  <-  exp(-r*j/unit)*max(0,StrikePrice-Ini.Stock*exp(Yield.table[i,j+1]))  \n          }}} else { print(\"Call =1 , Put =2 로 설정해주셔야 합니다.\")\n          }\n  \n  \n  \n  if (Bermuda.End>0 & Bermuda.End<=interval){\n    for (i in 1:Case) { \n      Bermuda.table[i,1]<-max(Payoff.table[i,Bermuda.Start:Bermuda.End],Payoff.table[i,interval])\n      \n    }  \n    value<-mean(Bermuda.table[,1])\n  }  else {value<-mean(Payoff.table[,interval])\n  }\n  \n  \n  return(value)\n}\n\n\n\n\n\nBermuda_callop <-function(Case,Ini.Stock,StrikePrice,year,unit,r,sigma,Bermuda.Start,Bermuda.End){\n  interval <- year * unit\n  t <- 1/unit\n  mu <- r-0.5*sigma^2\n  \nset.seed(5)\n\nrnd.num <- as.data.frame(matrix(rnorm(Case*interval), nrow = Case, ncol=interval))\n\nYield.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval+1))\nPayoff.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval))\nBermuda.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = 1))\n\nif (Bermuda.End>0 & Bermuda.End<=interval){\n  for (i in 1:Case) {\n    for (j in 1:interval) {\n      \n      Yield.table[i,j+1] <-  Yield.table[i,j] + (mu*t+(sigma*sqrt(t)*rnd.num[i,j]))\n      Payoff.table[i,j]  <-  exp(-r*j/unit)*max(0,Ini.Stock*exp(Yield.table[i,j+1])-StrikePrice)  \n    }\n    Bermuda.table[i,1]<-max(Payoff.table[i,Bermuda.Start:Bermuda.End],Payoff.table[i,interval])} \n  value<-mean(Bermuda.table[,1])\n} else {\n  for (i in 1:Case) {\n    for (j in 1:interval) {\n      \n      Yield.table[i,j+1] <-  Yield.table[i,j] + (mu*t+(sigma*sqrt(t)*rnd.num[i,j]))\n      Payoff.table[i,j]  <-  exp(-r*j/unit)*max(0,Ini.Stock*exp(Yield.table[i,j+1])-StrikePrice)  \n    }}\n  value<-mean(Payoff.table[,interval])\n}\n\n\nreturn(value)\n}\n\nBermuda_putop <-function(Case,Ini.Stock,StrikePrice,year,unit,r,sigma,Bermuda.Start,Bermuda.End){\n  interval <- year * unit\n  t <- 1/unit\n  mu <- r-0.5*sigma^2\n  \n  set.seed(5)\n  \n  rnd.num <- as.data.frame(matrix(rnorm(Case*interval), nrow = Case, ncol=interval))\n  \n  Yield.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval+1))\n  Payoff.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval))\n  Bermuda.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = 1))\n  \n  if (Bermuda.End>0 & Bermuda.End<=interval){\n    for (i in 1:Case) {\n      for (j in 1:interval) {\n        \n        Yield.table[i,j+1] <-  Yield.table[i,j] + (mu*t+(sigma*sqrt(t)*rnd.num[i,j]))\n        Payoff.table[i,j]  <-  exp(-r*j/unit)*max(0,StrikePrice-Ini.Stock*exp(Yield.table[i,j+1]))  \n      }\n      Bermuda.table[i,1]<-max(Payoff.table[i,Bermuda.Start:Bermuda.End],Payoff.table[i,interval])} \n    value<-mean(Bermuda.table[,1])\n  } else {\n    for (i in 1:Case) {\n      for (j in 1:interval) {\n        \n        Yield.table[i,j+1] <-  Yield.table[i,j] + (mu*t+(sigma*sqrt(t)*rnd.num[i,j]))\n        Payoff.table[i,j]  <-  exp(-r*j/unit)*max(0,StrikePrice-Ini.Stock*exp(Yield.table[i,j+1]))  \n      }}\n    value<-mean(Payoff.table[,interval])\n  }\n  \n  \n  return(value)\n}\n\n\nEuropean_callop <-function(Case,Ini.Stock,StrikePrice,year,unit,r,sigma){\n\n  \n  interval <- year * unit\n  t <- year/interval\n  mu <- r-0.5*sigma^2\n  set.seed(5)\n  #시뮬레이션 난수 값을 고정시키려면 set.seed(10) <10은 page와 같음> 10페이지에 있는 난수값. \n  \n  rnd.num <- as.data.frame(matrix(rnorm(Case*interval), nrow = Case, ncol=interval))\n  \n  Yield.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval+1))\n  Payoff.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval))\n  European.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = 1))\n  \n  for (i in 1:Case) {\n    for (j in 1:interval) {\n      \n      Yield.table[i,j+1] <-  Yield.table[i,j] + (mu*t+(sigma*sqrt(t)*rnd.num[i,j]))\n      Payoff.table[i,j]  <-  exp(-r*j/unit)*max(0,Ini.Stock*exp(Yield.table[i,j+1])-StrikePrice)  \n    }\n    European.table[i,1]<-Payoff.table[i,interval]\n  }\n  \n  value<-mean(European.table[,1])\n  \n  return(value)\n}\n\nEuropean_putop <-function(Case,Ini.Stock,StrikePrice,year,unit,r,sigma){\n  \n  \n  interval <- year * unit\n  t <- year/interval\n  mu <- r-0.5*sigma^2\n  set.seed(5)\n  #시뮬레이션 난수 값을 고정시키려면 set.seed(10) <10은 page와 같음> 10페이지에 있는 난수값. \n  \n  rnd.num <- as.data.frame(matrix(rnorm(Case*interval), nrow = Case, ncol=interval))\n  \n  Yield.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval+1))\n  Payoff.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = interval))\n  European.table <- as.data.frame(matrix(data = 0, nrow = Case, ncol = 1))\n  \n  for (i in 1:Case) {\n    for (j in 1:interval) {\n      \n      Yield.table[i,j+1] <-  Yield.table[i,j] + (mu*t+(sigma*sqrt(t)*rnd.num[i,j]))\n      Payoff.table[i,j]  <-  exp(-r*j/unit)*max(0,StrikePrice-Ini.Stock*exp(Yield.table[i,j+1]))  \n    }\n    European.table[i,1]<-Payoff.table[i,interval]\n  }\n  \n  value<-mean(European.table[,1])\n  \n  return(value)\n}\n\nBermuda_option(3,100,100,100,5,12,0.01,0.1,0,0)\n\n\n[1] \"Call =1 , Put =2 로 설정해주셔야 합니다.\"\n[1] 0\n\nBermuda_option(2,100,100,100,5,12,0.02,0.1,0,0)\n\n\n[1] 2.920645\n\nBermuda_option(1,100,100,80,5,12,0.03,0.1,0,0)\n\n\n[1] 33.56165\n\nBermuda_callop(100,100,80,5,12,0.02,0.2,20,40)\n\n\n[1] 54.56337\n\nBermuda_putop(100,100,100,5,12,0.01,0.1,0,0)\n\n\n[1] 4.413762\n\nEuropean_callop(100,100,100,5,12,0.01,0.1)\n\n\n[1] 11.41853\n\nEuropean_putop(100,100,100,5,12,0.01,0.1)\n\n\n[1] 4.413762\n\nknitr::opts_chunk$set(echo = TRUE)\n\n\n\nIf you want to get the plots about bermuda options, Write this down.\nresult.table.r<-c(1:100) result.table.sigma<-c(1:100) result.table.StrikePrice<-c(1:100) result.table.r2<-c(1:100) result.table.sigma2<-c(1:100) result.table.StrikePrice2<-c(1:100) sample.r<- seq(0.01,0.03,length.out = 100) sample.sigma<-seq(0.1,0.3,length.out = 100) sample.StrikePrice<-seq(80,120,length.out = 100)\nfor (i in 1:100) { result.table.r[i]<-Bermuda_option(1,100,100,100,5,12,sample.r[i],0.2,20,40) result.table.sigma[i]<-Bermuda_option(1,100,100,100,5,12,0.02,sample.sigma[i],20,40) result.table.StrikePrice[i]<-Bermuda_option(1,100,100,sample.StrikePrice[i],5,12,0.02,0.2,20,40) result.table.r2[i]<-Bermuda_option(1,100,100,100,5,12,sample.r[i],0.2,0,0) result.table.sigma2[i]<-Bermuda_option(1,100,100,100,5,12,0.02,sample.sigma[i],0,0) result.table.StrikePrice2[i]<-Bermuda_option(1,100,100,sample.StrikePrice[i],5,12,0.02,0.2,0,0)\n}\nplot(sample.r,result.table.r,type = “l”,col=“red”,xlab = “무위험이자율”,ylab=“콜옵션 가격”,xlim=c(0.009,0.031),ylim=c(10,50)) lines(sample.r,result.table.r2,type = “l”) legend(0.026,48,c(“European”,“Bermuda”),col=c(“black”,“red”),lty=1,cex=0.9)\nplot(sample.sigma,result.table.sigma,type = “l”,col=“red”,xlab = “표준편차(시그마)”,ylab=“콜옵션 가격”,xlim=c(0.05,0.40),ylim=c(10,50)) lines(sample.sigma,result.table.sigma2,type = “l”) legend(0.32,49,c(“European”,“Bermuda”),col=c(“black”,“red”),lty=1,cex=0.9)\nplot(sample.StrikePrice,result.table.StrikePrice,type = “l”,col=“red”,xlab = “행사가격”,ylab=“콜옵션 가격”,xlim=c(75,125),ylim=c(10,50)) lines(sample.StrikePrice,result.table.StrikePrice2) legend(114,49,c(“European”,“Bermuda”),col=c(“black”,“red”),lty=1,cex=0.9)\nNPV Function with Tax (Monte carlo Simulation)\nInitial Investment = ICASHFLOW before tax = CFGrowth rate = GTax rate = T Cost of Captial = CPeriod = N\n\n\nlibrary(\"dplyr\")\n\nNPVRAM <-function(I,CF,G,T,C,N) {\n  PVCF = 0 \n  ACF= CF*(1-T)  ##After tax cash flow\n  for(i in 1:N){\n    PVCF[i]<-ACF*(1+G)^(i-1) / (1+C)^i \n  }\n  \n  sum(PVCF)-I}\n\n### Monte Function ###\n  \nMonte <- function(PROB,RV) {if(PROB<=0.25){\n    return(RV[1])}\n    else if(PROB<=0.75) {\n      return(RV[2])\n    }\n    else  { \n      return(RV[3])\n    }}      \n\n  \n\nNPVRAM(5000000,1000000,0.03,0.25,0.06,10)\n\n\n[1] 1239103\n\nA<-c(5500000,5000000,4500000)\nB<-c(900000,1000000,1100000)\nC<-c(0.02,0.03,0.04)\nD<-c(0.35,0.25,0.15)\nE<-c(0.07,0.06,0.05)\nF<-c(8,10,12)\n\n\nResult<-0\n\n\n### NPVMONTE function ###\n\n\nNPVMONTE <- function(x) {\n          \n                            NPV1<-c(1:x)  \n            for(i in 1:x){\n                       \n                         I1<-Monte(runif(1),A)\n                         CF1<-Monte(runif(1),B)\n                         G1<-Monte(runif(1),C)\n                         T1<-Monte(runif(1),D)\n                         C1<-Monte(runif(1),E)\n                         N1<-Monte(runif(1),F)\n      NPV1[i] <- NPVRAM(I1,CF1,G1,T1,C1,N1)                   \n      }\n return(NPV1) \n}\n\nResult1<-NPVMONTE(10000)\nmean(Result1)  ## NPV ???հ?\n\n\n[1] 1224460\n\nvar(Result1)   ## NPV var ??\n\n\n[1] 1.331364e+12\n\nResult1<-as.data.frame(Result1)\ncolnames(Result1) <- \"NPV\"\nResult1<-arrange(Result1,NPV)\nPositive<- filter(Result1,NPV>0)  \nnrow(Positive)/nrow(Result1)     ## NPV ?? ?????? Ȯ?? ##\n\n\n[1] 0.8519\n\nAM<- filter(Result1,NPV>1000000) ## Above  1Million\nBM<- filter(Result1,NPV<1000000) ## Below  1Million\nnrow(AM)/nrow(Result1)   ## NPV 1,000,000 ?ʰ??? Ȯ??\n\n\n[1] 0.5492\n\nnrow(BM)/nrow(Result1)   ## NPV 1,000,000 ?̸??? Ȯ??\n\n\n[1] 0.4508\n\nResult1[100,1]   ## 1  percentile ##\n\n\n[1] -1091259\n\nResult1[1000,1]  ## 10 percentile ##\n\n\n[1] -209591.2\n\nResult1[9000,1]  ## 90 percentile ##\n\n\n[1] 2786013\n\n\n\n\n",
      "last_modified": "2021-05-31T08:02:49+00:00"
    },
    {
      "path": "index.html",
      "title": "Rammon's Github",
      "description": "Welcome to my website. I hope you enjoy it! Prediction with AmesHousing uploaded!",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2021-03-18T11:34:52+00:00"
    },
    {
      "path": "portfolio.html",
      "title": "Rammon's Portfolio",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2021-05-31T08:02:49+00:00"
    },
    {
      "path": "RidgeLasso.html",
      "title": "Coefficient Ridge & Lasso",
      "author": [],
      "contents": "\n\n\n\n\n\n\n\n\n\n\nHomepage\n\n\nHome\nMy Info\nPortfolio\n\n\nAssingnment\n \n▾\n\n\nData Analysis(AmesHosuing)\nPrediction(AmesHousing)\nRidge&Lasso\n\n\n\n\n\n\n\n\n\n\n\n\n\n☰\n\n\n  \n    \n      \n        \n        \n        \n      \n      \n    \n    \n      \n  Home\n\n\n  My Info\n\n\n  Portfolio\n\n\n  \n    Assingnment\n     \n    \n  \n  \n      Data Analysis(AmesHosuing)\n    \n    \n      Prediction(AmesHousing)\n    \n    \n      Ridge&Lasso\n    \n  \n\n  \n    \n     \n  \n\n\n  \n    \n     \n  \n\n\n  \n\n      \n  \n\n\n\n\n\nCode \nShow All Code\nHide All Code\n\n\n\n\nCoefficient Ridge & Lasso\n\n\n\n\n1 준비작업\n1.1 필요 라이브러리 모음\n1.2 데이터 정리 작업 (NA처리)\n1.3 검증 set 및 Lambda Grid 설정하기\n\n2 Coefficient 찾기\n2.1 Best Lambda (Lasso)일 때\n2.2 Best Lambda (Ridge)일 때\n\n\n\n이삭 쌤의 응용통계학 수업 관련 과제 페이지 입니다\nknitr::opts_chunk$set(echo = TRUE,\n                      fig.align = \"center\")\n\n1 준비작업\n\n1.1 필요 라이브러리 모음\nlibrary(tidymodels)\n## ── Attaching packages ────────────────────────────────────── tidymodels 0.1.2 ──\n## ✓ broom     0.7.5      ✓ recipes   0.1.15\n## ✓ dials     0.0.9      ✓ rsample   0.0.9 \n## ✓ dplyr     1.0.4      ✓ tibble    3.1.0 \n## ✓ ggplot2   3.3.3      ✓ tidyr     1.1.3 \n## ✓ infer     0.5.4      ✓ tune      0.1.3 \n## ✓ modeldata 0.1.0      ✓ workflows 0.2.2 \n## ✓ parsnip   0.1.5      ✓ yardstick 0.0.8 \n## ✓ purrr     0.3.4\n## ── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n## x purrr::discard() masks scales::discard()\n## x dplyr::filter()  masks stats::filter()\n## x dplyr::lag()     masks stats::lag()\n## x recipes::step()  masks stats::step()\nlibrary(tidyverse)\n## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──\n## ✓ readr   1.4.0     ✓ forcats 0.5.1\n## ✓ stringr 1.4.0\n## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n## x readr::col_factor() masks scales::col_factor()\n## x purrr::discard()    masks scales::discard()\n## x dplyr::filter()     masks stats::filter()\n## x stringr::fixed()    masks recipes::fixed()\n## x dplyr::lag()        masks stats::lag()\n## x readr::spec()       masks yardstick::spec()\nlibrary(magrittr)\n## \n## Attaching package: 'magrittr'\n## The following object is masked from 'package:tidyr':\n## \n##     extract\n## The following object is masked from 'package:purrr':\n## \n##     set_names\nlibrary(skimr)\nlibrary(knitr)\nlibrary(car)\n## Loading required package: carData\n## \n## Attaching package: 'car'\n## The following object is masked from 'package:purrr':\n## \n##     some\n## The following object is masked from 'package:dplyr':\n## \n##     recode\nlibrary(glmnet)\n## Loading required package: Matrix\n## \n## Attaching package: 'Matrix'\n## The following objects are masked from 'package:tidyr':\n## \n##     expand, pack, unpack\n## Loaded glmnet 4.1-1\nlibrary(doParallel)\n## Loading required package: foreach\n## \n## Attaching package: 'foreach'\n## The following objects are masked from 'package:purrr':\n## \n##     accumulate, when\n## Loading required package: iterators\n## Loading required package: parallel\ntheme_set(theme_bw())\n\n\n1.2 데이터 정리 작업 (NA처리)\ntrain <- read_csv(\"Lecture3/train.csv\")\n## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   .default = col_character(),\n##   Id = col_double(),\n##   MSSubClass = col_double(),\n##   LotFrontage = col_double(),\n##   LotArea = col_double(),\n##   OverallQual = col_double(),\n##   OverallCond = col_double(),\n##   YearBuilt = col_double(),\n##   YearRemodAdd = col_double(),\n##   MasVnrArea = col_double(),\n##   BsmtFinSF1 = col_double(),\n##   BsmtFinSF2 = col_double(),\n##   BsmtUnfSF = col_double(),\n##   TotalBsmtSF = col_double(),\n##   `1stFlrSF` = col_double(),\n##   `2ndFlrSF` = col_double(),\n##   LowQualFinSF = col_double(),\n##   GrLivArea = col_double(),\n##   BsmtFullBath = col_double(),\n##   BsmtHalfBath = col_double(),\n##   FullBath = col_double()\n##   # ... with 18 more columns\n## )\n## ℹ Use `spec()` for the full column specifications.\ntest <- read_csv(\"Lecture3/test.csv\")\n## \n## ── Column specification ────────────────────────────────────────────────────────\n## cols(\n##   .default = col_character(),\n##   Id = col_double(),\n##   MSSubClass = col_double(),\n##   LotFrontage = col_double(),\n##   LotArea = col_double(),\n##   OverallQual = col_double(),\n##   OverallCond = col_double(),\n##   YearBuilt = col_double(),\n##   YearRemodAdd = col_double(),\n##   MasVnrArea = col_double(),\n##   BsmtFinSF1 = col_double(),\n##   BsmtFinSF2 = col_double(),\n##   BsmtUnfSF = col_double(),\n##   TotalBsmtSF = col_double(),\n##   `1stFlrSF` = col_double(),\n##   `2ndFlrSF` = col_double(),\n##   LowQualFinSF = col_double(),\n##   GrLivArea = col_double(),\n##   BsmtFullBath = col_double(),\n##   BsmtHalfBath = col_double(),\n##   FullBath = col_double()\n##   # ... with 17 more columns\n## )\n## ℹ Use `spec()` for the full column specifications.\nall_data <- bind_rows(train, test) %>% \n  janitor::clean_names()\nnames(all_data)[1:81]\n##  [1] \"id\"              \"ms_sub_class\"    \"ms_zoning\"       \"lot_frontage\"   \n##  [5] \"lot_area\"        \"street\"          \"alley\"           \"lot_shape\"      \n##  [9] \"land_contour\"    \"utilities\"       \"lot_config\"      \"land_slope\"     \n## [13] \"neighborhood\"    \"condition1\"      \"condition2\"      \"bldg_type\"      \n## [17] \"house_style\"     \"overall_qual\"    \"overall_cond\"    \"year_built\"     \n## [21] \"year_remod_add\"  \"roof_style\"      \"roof_matl\"       \"exterior1st\"    \n## [25] \"exterior2nd\"     \"mas_vnr_type\"    \"mas_vnr_area\"    \"exter_qual\"     \n## [29] \"exter_cond\"      \"foundation\"      \"bsmt_qual\"       \"bsmt_cond\"      \n## [33] \"bsmt_exposure\"   \"bsmt_fin_type1\"  \"bsmt_fin_sf1\"    \"bsmt_fin_type2\" \n## [37] \"bsmt_fin_sf2\"    \"bsmt_unf_sf\"     \"total_bsmt_sf\"   \"heating\"        \n## [41] \"heating_qc\"      \"central_air\"     \"electrical\"      \"x1st_flr_sf\"    \n## [45] \"x2nd_flr_sf\"     \"low_qual_fin_sf\" \"gr_liv_area\"     \"bsmt_full_bath\" \n## [49] \"bsmt_half_bath\"  \"full_bath\"       \"half_bath\"       \"bedroom_abv_gr\" \n## [53] \"kitchen_abv_gr\"  \"kitchen_qual\"    \"tot_rms_abv_grd\" \"functional\"     \n## [57] \"fireplaces\"      \"fireplace_qu\"    \"garage_type\"     \"garage_yr_blt\"  \n## [61] \"garage_finish\"   \"garage_cars\"     \"garage_area\"     \"garage_qual\"    \n## [65] \"garage_cond\"     \"paved_drive\"     \"wood_deck_sf\"    \"open_porch_sf\"  \n## [69] \"enclosed_porch\"  \"x3ssn_porch\"     \"screen_porch\"    \"pool_area\"      \n## [73] \"pool_qc\"         \"fence\"           \"misc_feature\"    \"misc_val\"       \n## [77] \"mo_sold\"         \"yr_sold\"         \"sale_type\"       \"sale_condition\" \n## [81] \"sale_price\"\nhousing_recipe <- all_data %>% \n  recipe(sale_price ~ .) %>%\n  step_rm(id) %>% \n  step_log(sale_price) %>% \n  step_modeimpute(all_nominal()) %>% \n  step_dummy(all_nominal()) %>% \n  step_meanimpute(all_predictors()) %>%\n  step_normalize(all_predictors()) %>% \n  ##step_nzv(all_predictors()) %>% \n  prep(training = all_data)\n\nprint(housing_recipe)\n## Data Recipe\n## \n## Inputs:\n## \n##       role #variables\n##    outcome          1\n##  predictor         80\n## \n## Training data contained 2919 data points and 2919 incomplete rows. \n## \n## Operations:\n## \n## Variables removed id [trained]\n## Log transformation on sale_price [trained]\n## Mode Imputation for ms_zoning, street, alley, ... [trained]\n## Dummy variables from ms_zoning, street, alley, lot_shape, ... [trained]\n## Mean Imputation for ms_sub_class, lot_frontage, ... [trained]\n## Centering and scaling for ms_sub_class, lot_frontage, ... [trained]\nall_data2 <- juice(housing_recipe)\ntrain_index <- seq_len(nrow(train))\n\ntrain2 <- all_data2[train_index,]\ntest2 <- all_data2[-train_index,]\ntrain2 %>% \n  head() %>% \n  kable()\nms_sub_class\nlot_frontage\nlot_area\noverall_qual\noverall_cond\nyear_built\nyear_remod_add\nmas_vnr_area\nbsmt_fin_sf1\nbsmt_fin_sf2\nbsmt_unf_sf\ntotal_bsmt_sf\nx1st_flr_sf\nx2nd_flr_sf\nlow_qual_fin_sf\ngr_liv_area\nbsmt_full_bath\nbsmt_half_bath\nfull_bath\nhalf_bath\nbedroom_abv_gr\nkitchen_abv_gr\ntot_rms_abv_grd\nfireplaces\ngarage_yr_blt\ngarage_cars\ngarage_area\nwood_deck_sf\nopen_porch_sf\nenclosed_porch\nx3ssn_porch\nscreen_porch\npool_area\nmisc_val\nmo_sold\nyr_sold\nsale_price\nms_zoning_FV\nms_zoning_RH\nms_zoning_RL\nms_zoning_RM\nstreet_Pave\nalley_Pave\nlot_shape_IR2\nlot_shape_IR3\nlot_shape_Reg\nland_contour_HLS\nland_contour_Low\nland_contour_Lvl\nutilities_NoSeWa\nlot_config_CulDSac\nlot_config_FR2\nlot_config_FR3\nlot_config_Inside\nland_slope_Mod\nland_slope_Sev\nneighborhood_Blueste\nneighborhood_BrDale\nneighborhood_BrkSide\nneighborhood_ClearCr\nneighborhood_CollgCr\nneighborhood_Crawfor\nneighborhood_Edwards\nneighborhood_Gilbert\nneighborhood_IDOTRR\nneighborhood_MeadowV\nneighborhood_Mitchel\nneighborhood_NAmes\nneighborhood_NoRidge\nneighborhood_NPkVill\nneighborhood_NridgHt\nneighborhood_NWAmes\nneighborhood_OldTown\nneighborhood_Sawyer\nneighborhood_SawyerW\nneighborhood_Somerst\nneighborhood_StoneBr\nneighborhood_SWISU\nneighborhood_Timber\nneighborhood_Veenker\ncondition1_Feedr\ncondition1_Norm\ncondition1_PosA\ncondition1_PosN\ncondition1_RRAe\ncondition1_RRAn\ncondition1_RRNe\ncondition1_RRNn\ncondition2_Feedr\ncondition2_Norm\ncondition2_PosA\ncondition2_PosN\ncondition2_RRAe\ncondition2_RRAn\ncondition2_RRNn\nbldg_type_X2fmCon\nbldg_type_Duplex\nbldg_type_Twnhs\nbldg_type_TwnhsE\nhouse_style_X1.5Unf\nhouse_style_X1Story\nhouse_style_X2.5Fin\nhouse_style_X2.5Unf\nhouse_style_X2Story\nhouse_style_SFoyer\nhouse_style_SLvl\nroof_style_Gable\nroof_style_Gambrel\nroof_style_Hip\nroof_style_Mansard\nroof_style_Shed\nroof_matl_CompShg\nroof_matl_Membran\nroof_matl_Metal\nroof_matl_Roll\nroof_matl_Tar.Grv\nroof_matl_WdShake\nroof_matl_WdShngl\nexterior1st_AsphShn\nexterior1st_BrkComm\nexterior1st_BrkFace\nexterior1st_CBlock\nexterior1st_CemntBd\nexterior1st_HdBoard\nexterior1st_ImStucc\nexterior1st_MetalSd\nexterior1st_Plywood\nexterior1st_Stone\nexterior1st_Stucco\nexterior1st_VinylSd\nexterior1st_Wd.Sdng\nexterior1st_WdShing\nexterior2nd_AsphShn\nexterior2nd_Brk.Cmn\nexterior2nd_BrkFace\nexterior2nd_CBlock\nexterior2nd_CmentBd\nexterior2nd_HdBoard\nexterior2nd_ImStucc\nexterior2nd_MetalSd\nexterior2nd_Other\nexterior2nd_Plywood\nexterior2nd_Stone\nexterior2nd_Stucco\nexterior2nd_VinylSd\nexterior2nd_Wd.Sdng\nexterior2nd_Wd.Shng\nmas_vnr_type_BrkFace\nmas_vnr_type_None\nmas_vnr_type_Stone\nexter_qual_Fa\nexter_qual_Gd\nexter_qual_TA\nexter_cond_Fa\nexter_cond_Gd\nexter_cond_Po\nexter_cond_TA\nfoundation_CBlock\nfoundation_PConc\nfoundation_Slab\nfoundation_Stone\nfoundation_Wood\nbsmt_qual_Fa\nbsmt_qual_Gd\nbsmt_qual_TA\nbsmt_cond_Gd\nbsmt_cond_Po\nbsmt_cond_TA\nbsmt_exposure_Gd\nbsmt_exposure_Mn\nbsmt_exposure_No\nbsmt_fin_type1_BLQ\nbsmt_fin_type1_GLQ\nbsmt_fin_type1_LwQ\nbsmt_fin_type1_Rec\nbsmt_fin_type1_Unf\nbsmt_fin_type2_BLQ\nbsmt_fin_type2_GLQ\nbsmt_fin_type2_LwQ\nbsmt_fin_type2_Rec\nbsmt_fin_type2_Unf\nheating_GasA\nheating_GasW\nheating_Grav\nheating_OthW\nheating_Wall\nheating_qc_Fa\nheating_qc_Gd\nheating_qc_Po\nheating_qc_TA\ncentral_air_Y\nelectrical_FuseF\nelectrical_FuseP\nelectrical_Mix\nelectrical_SBrkr\nkitchen_qual_Fa\nkitchen_qual_Gd\nkitchen_qual_TA\nfunctional_Maj2\nfunctional_Min1\nfunctional_Min2\nfunctional_Mod\nfunctional_Sev\nfunctional_Typ\nfireplace_qu_Fa\nfireplace_qu_Gd\nfireplace_qu_Po\nfireplace_qu_TA\ngarage_type_Attchd\ngarage_type_Basment\ngarage_type_BuiltIn\ngarage_type_CarPort\ngarage_type_Detchd\ngarage_finish_RFn\ngarage_finish_Unf\ngarage_qual_Fa\ngarage_qual_Gd\ngarage_qual_Po\ngarage_qual_TA\ngarage_cond_Fa\ngarage_cond_Gd\ngarage_cond_Po\ngarage_cond_TA\npaved_drive_P\npaved_drive_Y\npool_qc_Fa\npool_qc_Gd\nfence_GdWo\nfence_MnPrv\nfence_MnWw\nmisc_feature_Othr\nmisc_feature_Shed\nmisc_feature_TenC\nsale_type_Con\nsale_type_ConLD\nsale_type_ConLI\nsale_type_ConLw\nsale_type_CWD\nsale_type_New\nsale_type_Oth\nsale_type_WD\nsale_condition_AdjLand\nsale_condition_Alloca\nsale_condition_Family\nsale_condition_Normal\nsale_condition_Partial\n0.0673199\n-0.2020329\n-0.2178414\n0.6460727\n-0.5071973\n1.0460784\n0.8966793\n0.5251119\n0.5808073\n-0.2930798\n-0.9347024\n-0.4442517\n-0.7737285\n1.2071717\n-0.1011797\n0.4134764\n1.0868363\n-0.2498524\n0.781232\n1.2323877\n0.169898\n-0.2076629\n0.9866803\n-0.9241529\n1.0007573\n0.3064753\n0.3488399\n-0.7406335\n0.1999717\n-0.3595391\n-0.1033128\n-0.2858865\n-0.0631394\n-0.0895766\n-1.5519176\n0.1576185\n12.24769\n-0.2235685\n-0.0947847\n0.5351371\n-0.4324394\n0.0642383\n-0.1656675\n-0.1634722\n-0.074227\n0.7549859\n-0.2070212\n-0.1448419\n0.3365019\n-0.018509\n-0.2532614\n-0.173155\n-0.0694091\n0.606934\n-0.2114791\n-0.074227\n-0.0586211\n-0.1018855\n-0.1959779\n-0.1236896\n3.1510604\n-0.1912176\n-0.2667738\n-0.2447291\n-0.1813765\n-0.1132868\n-0.2015634\n-0.4229141\n-0.1578646\n-0.0891026\n-0.2455142\n-0.2167279\n-0.2985775\n-0.2335237\n-0.2114791\n-0.2578243\n-0.1333279\n-0.1292795\n-0.1590004\n-0.0910347\n-0.2439421\n0.4030253\n-0.0830456\n-0.1163487\n-0.0983967\n-0.1319913\n-0.0453765\n-0.0556033\n-0.0668728\n0.1018855\n-0.037037\n-0.037037\n-0.018509\n-0.018509\n-0.0261802\n-0.1472876\n-0.1969181\n-0.1843766\n-0.2903361\n-0.0809289\n-1.0077380\n-0.0524143\n-0.0910347\n1.5318854\n-0.1710455\n-0.2141168\n0.5133674\n-0.087129\n-0.4822925\n-0.0614929\n-0.0414158\n0.1222546\n-0.018509\n-0.018509\n-0.018509\n-0.0891026\n-0.0556033\n-0.0490206\n-0.0261802\n-0.0453765\n-0.1752422\n-0.0261802\n-0.2123613\n-0.4223512\n-0.018509\n-0.4268461\n-0.2861546\n-0.0261802\n-0.1222546\n1.3580858\n-0.4047462\n-0.1398328\n-0.037037\n-0.087129\n-0.1279035\n-0.0320695\n-0.2123613\n-0.4018763\n-0.0718576\n-0.4251627\n-0.018509\n-0.3192027\n-0.0453765\n-0.1279035\n1.3693865\n-0.3932108\n-0.1689125\n1.5231625\n-1.2373891\n-0.3053301\n-0.1101443\n1.4074569\n-1.2662447\n-0.1532457\n-0.3377618\n-0.0320695\n0.3873845\n-0.8562253\n1.1096078\n-0.130642\n-0.0614929\n-0.0414158\n-0.1762775\n1.1890784\n-0.9364133\n-0.2088138\n-0.0414158\n0.2931008\n-0.323096\n-0.2985775\n0.6852938\n-0.3185509\n1.5611942\n-0.23596\n-0.3307969\n-0.683675\n-0.1544121\n-0.1085406\n-0.1752422\n-0.1931338\n0.3666433\n0.125109\n-0.0966069\n-0.0556033\n-0.0261802\n-0.0453765\n-0.1803668\n-0.4402256\n-0.0320695\n-0.6445724\n0.2682439\n-0.1319913\n-0.0524143\n-0.018509\n0.3039876\n-0.1567214\n1.2391648\n-1.023047\n-0.0556033\n-0.1508882\n-0.1567214\n-0.1101443\n-0.0261802\n0.2711665\n-0.1612502\n0.5905687\n-0.1265135\n-0.5042992\n0.7432834\n-0.1117261\n-0.2608328\n-0.0718576\n-0.6032363\n1.6119459\n-0.9526448\n-0.2105938\n-0.0910347\n-0.0414158\n0.2375732\n-0.1612502\n-0.0718576\n-0.0694091\n0.1940858\n-0.1472876\n0.3243873\n-0.0261802\n0.0453765\n-0.1997162\n0.3006139\n-0.0642383\n-0.037037\n0.0586211\n-0.018509\n-0.0414158\n-0.0947847\n-0.0556033\n-0.0524143\n-0.0642383\n-0.2985775\n-0.0490206\n0.3943712\n-0.0642383\n-0.0910347\n-0.1265135\n0.4638573\n-0.3026411\n-0.8734664\n0.5017845\n-0.0720317\n-0.0631737\n2.1879039\n0.1547375\n-0.3955364\n-0.5721522\n1.1779104\n-0.2930798\n-0.6297885\n0.4770294\n0.2610301\n-0.7848906\n-0.1011797\n-0.4718098\n-0.8195386\n3.8217640\n0.781232\n-0.7561915\n0.169898\n-0.2076629\n-0.2877090\n0.6235248\n-0.0849858\n0.3064753\n-0.0597822\n1.6146027\n-0.7027224\n-0.3595391\n-0.1033128\n-0.2858865\n-0.0631394\n-0.0895766\n-0.4468483\n-0.6028583\n12.10901\n-0.2235685\n-0.0947847\n0.5351371\n-0.4324394\n0.0642383\n-0.1656675\n-0.1634722\n-0.074227\n0.7549859\n-0.2070212\n-0.1448419\n0.3365019\n-0.018509\n-0.2532614\n5.773193\n-0.0694091\n-1.647061\n-0.2114791\n-0.074227\n-0.0586211\n-0.1018855\n-0.1959779\n-0.1236896\n-0.3172448\n-0.1912176\n-0.2667738\n-0.2447291\n-0.1813765\n-0.1132868\n-0.2015634\n-0.4229141\n-0.1578646\n-0.0891026\n-0.2455142\n-0.2167279\n-0.2985775\n-0.2335237\n-0.2114791\n-0.2578243\n-0.1333279\n-0.1292795\n-0.1590004\n10.9810599\n4.0979294\n-2.4803837\n-0.0830456\n-0.1163487\n-0.0983967\n-0.1319913\n-0.0453765\n-0.0556033\n-0.0668728\n0.1018855\n-0.037037\n-0.037037\n-0.018509\n-0.018509\n-0.0261802\n-0.1472876\n-0.1969181\n-0.1843766\n-0.2903361\n-0.0809289\n0.9919814\n-0.0524143\n-0.0910347\n-0.6525667\n-0.1710455\n-0.2141168\n0.5133674\n-0.087129\n-0.4822925\n-0.0614929\n-0.0414158\n0.1222546\n-0.018509\n-0.018509\n-0.018509\n-0.0891026\n-0.0556033\n-0.0490206\n-0.0261802\n-0.0453765\n-0.1752422\n-0.0261802\n-0.2123613\n-0.4223512\n-0.018509\n2.3419622\n-0.2861546\n-0.0261802\n-0.1222546\n-0.7360782\n-0.4047462\n-0.1398328\n-0.037037\n-0.087129\n-0.1279035\n-0.0320695\n-0.2123613\n-0.4018763\n-0.0718576\n2.3512352\n-0.018509\n-0.3192027\n-0.0453765\n-0.1279035\n-0.7300038\n-0.3932108\n-0.1689125\n-0.6563038\n0.8078764\n-0.3053301\n-0.1101443\n-0.7102579\n0.7894662\n-0.1532457\n-0.3377618\n-0.0320695\n0.3873845\n1.1675169\n-0.9009106\n-0.130642\n-0.0614929\n-0.0414158\n-0.1762775\n1.1890784\n-0.9364133\n-0.2088138\n-0.0414158\n0.2931008\n3.093995\n-0.2985775\n-1.4587283\n-0.3185509\n-0.6403159\n-0.23596\n-0.3307969\n-0.683675\n-0.1544121\n-0.1085406\n-0.1752422\n-0.1931338\n0.3666433\n0.125109\n-0.0966069\n-0.0556033\n-0.0261802\n-0.0453765\n-0.1803668\n-0.4402256\n-0.0320695\n-0.6445724\n0.2682439\n-0.1319913\n-0.0524143\n-0.018509\n0.3039876\n-0.1567214\n-0.8067187\n0.977137\n-0.0556033\n-0.1508882\n-0.1567214\n-0.1101443\n-0.0261802\n0.2711665\n-0.1612502\n-1.6927029\n-0.1265135\n1.9822706\n0.7432834\n-0.1117261\n-0.2608328\n-0.0718576\n-0.6032363\n1.6119459\n-0.9526448\n-0.2105938\n-0.0910347\n-0.0414158\n0.2375732\n-0.1612502\n-0.0718576\n-0.0694091\n0.1940858\n-0.1472876\n0.3243873\n-0.0261802\n0.0453765\n-0.1997162\n0.3006139\n-0.0642383\n-0.037037\n0.0586211\n-0.018509\n-0.0414158\n-0.0947847\n-0.0556033\n-0.0524143\n-0.0642383\n-0.2985775\n-0.0490206\n0.3943712\n-0.0642383\n-0.0910347\n-0.1265135\n0.4638573\n-0.3026411\n0.0673199\n-0.0612694\n0.1371734\n0.6460727\n-0.5071973\n0.9800531\n0.8488195\n0.3347702\n0.0978563\n-0.2930798\n-0.2884670\n-0.2990251\n-0.6106138\n1.2351632\n-0.1011797\n0.5636589\n1.0868363\n-0.2498524\n0.781232\n1.2323877\n0.169898\n-0.2076629\n-0.2877090\n0.6235248\n0.9203319\n0.3064753\n0.6274459\n-0.7406335\n-0.0811953\n-0.3595391\n-0.1033128\n-0.2858865\n-0.0631394\n-0.0895766\n1.0265775\n0.1576185\n12.31717\n-0.2235685\n-0.0947847\n0.5351371\n-0.4324394\n0.0642383\n-0.1656675\n-0.1634722\n-0.074227\n-1.3240743\n-0.2070212\n-0.1448419\n0.3365019\n-0.018509\n-0.2532614\n-0.173155\n-0.0694091\n0.606934\n-0.2114791\n-0.074227\n-0.0586211\n-0.1018855\n-0.1959779\n-0.1236896\n3.1510604\n-0.1912176\n-0.2667738\n-0.2447291\n-0.1813765\n-0.1132868\n-0.2015634\n-0.4229141\n-0.1578646\n-0.0891026\n-0.2455142\n-0.2167279\n-0.2985775\n-0.2335237\n-0.2114791\n-0.2578243\n-0.1333279\n-0.1292795\n-0.1590004\n-0.0910347\n-0.2439421\n0.4030253\n-0.0830456\n-0.1163487\n-0.0983967\n-0.1319913\n-0.0453765\n-0.0556033\n-0.0668728\n0.1018855\n-0.037037\n-0.037037\n-0.018509\n-0.018509\n-0.0261802\n-0.1472876\n-0.1969181\n-0.1843766\n-0.2903361\n-0.0809289\n-1.0077380\n-0.0524143\n-0.0910347\n1.5318854\n-0.1710455\n-0.2141168\n0.5133674\n-0.087129\n-0.4822925\n-0.0614929\n-0.0414158\n0.1222546\n-0.018509\n-0.018509\n-0.018509\n-0.0891026\n-0.0556033\n-0.0490206\n-0.0261802\n-0.0453765\n-0.1752422\n-0.0261802\n-0.2123613\n-0.4223512\n-0.018509\n-0.4268461\n-0.2861546\n-0.0261802\n-0.1222546\n1.3580858\n-0.4047462\n-0.1398328\n-0.037037\n-0.087129\n-0.1279035\n-0.0320695\n-0.2123613\n-0.4018763\n-0.0718576\n-0.4251627\n-0.018509\n-0.3192027\n-0.0453765\n-0.1279035\n1.3693865\n-0.3932108\n-0.1689125\n1.5231625\n-1.2373891\n-0.3053301\n-0.1101443\n1.4074569\n-1.2662447\n-0.1532457\n-0.3377618\n-0.0320695\n0.3873845\n-0.8562253\n1.1096078\n-0.130642\n-0.0614929\n-0.0414158\n-0.1762775\n1.1890784\n-0.9364133\n-0.2088138\n-0.0414158\n0.2931008\n-0.323096\n3.3480662\n-1.4587283\n-0.3185509\n1.5611942\n-0.23596\n-0.3307969\n-0.683675\n-0.1544121\n-0.1085406\n-0.1752422\n-0.1931338\n0.3666433\n0.125109\n-0.0966069\n-0.0556033\n-0.0261802\n-0.0453765\n-0.1803668\n-0.4402256\n-0.0320695\n-0.6445724\n0.2682439\n-0.1319913\n-0.0524143\n-0.018509\n0.3039876\n-0.1567214\n1.2391648\n-1.023047\n-0.0556033\n-0.1508882\n-0.1567214\n-0.1101443\n-0.0261802\n0.2711665\n-0.1612502\n-1.6927029\n-0.1265135\n1.9822706\n0.7432834\n-0.1117261\n-0.2608328\n-0.0718576\n-0.6032363\n1.6119459\n-0.9526448\n-0.2105938\n-0.0910347\n-0.0414158\n0.2375732\n-0.1612502\n-0.0718576\n-0.0694091\n0.1940858\n-0.1472876\n0.3243873\n-0.0261802\n0.0453765\n-0.1997162\n0.3006139\n-0.0642383\n-0.037037\n0.0586211\n-0.018509\n-0.0414158\n-0.0947847\n-0.0556033\n-0.0524143\n-0.0642383\n-0.2985775\n-0.0490206\n0.3943712\n-0.0642383\n-0.0910347\n-0.1265135\n0.4638573\n-0.3026411\n0.3025164\n-0.4366387\n-0.0783713\n0.6460727\n-0.5071973\n-1.8590326\n-0.6826955\n-0.5721522\n-0.4948563\n-0.2930798\n-0.0472664\n-0.6711682\n-0.5061185\n0.9785744\n-0.1011797\n0.4273090\n1.0868363\n-0.2498524\n-1.027187\n-0.7561915\n0.169898\n-0.2076629\n0.3494857\n0.6235248\n0.7996938\n1.6196836\n0.7853226\n-0.7406335\n-0.1847831\n3.8743031\n-0.1033128\n-0.2858865\n-0.0631394\n-0.0895766\n-1.5519176\n-1.3633351\n11.84940\n-0.2235685\n-0.0947847\n0.5351371\n-0.4324394\n0.0642383\n-0.1656675\n-0.1634722\n-0.074227\n-1.3240743\n-0.2070212\n-0.1448419\n0.3365019\n-0.018509\n-0.2532614\n-0.173155\n-0.0694091\n-1.647061\n-0.2114791\n-0.074227\n-0.0586211\n-0.1018855\n-0.1959779\n-0.1236896\n-0.3172448\n5.2278523\n-0.2667738\n-0.2447291\n-0.1813765\n-0.1132868\n-0.2015634\n-0.4229141\n-0.1578646\n-0.0891026\n-0.2455142\n-0.2167279\n-0.2985775\n-0.2335237\n-0.2114791\n-0.2578243\n-0.1333279\n-0.1292795\n-0.1590004\n-0.0910347\n-0.2439421\n0.4030253\n-0.0830456\n-0.1163487\n-0.0983967\n-0.1319913\n-0.0453765\n-0.0556033\n-0.0668728\n0.1018855\n-0.037037\n-0.037037\n-0.018509\n-0.018509\n-0.0261802\n-0.1472876\n-0.1969181\n-0.1843766\n-0.2903361\n-0.0809289\n-1.0077380\n-0.0524143\n-0.0910347\n1.5318854\n-0.1710455\n-0.2141168\n0.5133674\n-0.087129\n-0.4822925\n-0.0614929\n-0.0414158\n0.1222546\n-0.018509\n-0.018509\n-0.018509\n-0.0891026\n-0.0556033\n-0.0490206\n-0.0261802\n-0.0453765\n-0.1752422\n-0.0261802\n-0.2123613\n-0.4223512\n-0.018509\n-0.4268461\n-0.2861546\n-0.0261802\n-0.1222546\n-0.7360782\n2.4698379\n-0.1398328\n-0.037037\n-0.087129\n-0.1279035\n-0.0320695\n-0.2123613\n-0.4018763\n-0.0718576\n-0.4251627\n-0.018509\n-0.3192027\n-0.0453765\n-0.1279035\n-0.7300038\n-0.3932108\n5.9181952\n-0.6563038\n0.8078764\n-0.3053301\n-0.1101443\n-0.7102579\n0.7894662\n-0.1532457\n-0.3377618\n-0.0320695\n0.3873845\n-0.8562253\n-0.9009106\n-0.130642\n-0.0614929\n-0.0414158\n-0.1762775\n-0.8406993\n1.0675387\n4.7873140\n-0.0414158\n-3.4106271\n-0.323096\n-0.2985775\n0.6852938\n-0.3185509\n-0.6403159\n-0.23596\n-0.3307969\n-0.683675\n-0.1544121\n-0.1085406\n-0.1752422\n-0.1931338\n0.3666433\n0.125109\n-0.0966069\n-0.0556033\n-0.0261802\n-0.0453765\n-0.1803668\n2.2707842\n-0.0320695\n-0.6445724\n0.2682439\n-0.1319913\n-0.0524143\n-0.018509\n0.3039876\n-0.1567214\n1.2391648\n-1.023047\n-0.0556033\n-0.1508882\n-0.1567214\n-0.1101443\n-0.0261802\n0.2711665\n-0.1612502\n0.5905687\n-0.1265135\n-0.5042992\n-1.3449209\n-0.1117261\n-0.2608328\n-0.0718576\n1.6571574\n-0.6201557\n1.0493496\n-0.2105938\n-0.0910347\n-0.0414158\n0.2375732\n-0.1612502\n-0.0718576\n-0.0694091\n0.1940858\n-0.1472876\n0.3243873\n-0.0261802\n0.0453765\n-0.1997162\n0.3006139\n-0.0642383\n-0.037037\n0.0586211\n-0.018509\n-0.0414158\n-0.0947847\n-0.0556033\n-0.0524143\n-0.0642383\n-0.2985775\n-0.0490206\n0.3943712\n-0.0642383\n-0.0910347\n-0.1265135\n-2.1550970\n-0.3026411\n0.0673199\n0.6894691\n0.5188142\n1.3553191\n-0.5071973\n0.9470405\n0.7530998\n1.3872480\n0.4688505\n-0.2930798\n-0.1610403\n0.2115370\n-0.0371639\n1.6713642\n-0.1011797\n1.3778060\n1.0868363\n-0.2498524\n0.781232\n1.2323877\n1.385418\n-0.2076629\n1.6238750\n0.6235248\n0.8801192\n1.6196836\n1.6861486\n0.7768341\n0.5403318\n-0.3595391\n-0.1033128\n-0.2858865\n-0.0631394\n-0.0895766\n2.1316468\n0.1576185\n12.42922\n-0.2235685\n-0.0947847\n0.5351371\n-0.4324394\n0.0642383\n-0.1656675\n-0.1634722\n-0.074227\n-1.3240743\n-0.2070212\n-0.1448419\n0.3365019\n-0.018509\n-0.2532614\n5.773193\n-0.0694091\n-1.647061\n-0.2114791\n-0.074227\n-0.0586211\n-0.1018855\n-0.1959779\n-0.1236896\n-0.3172448\n-0.1912176\n-0.2667738\n-0.2447291\n-0.1813765\n-0.1132868\n-0.2015634\n-0.4229141\n6.3323719\n-0.0891026\n-0.2455142\n-0.2167279\n-0.2985775\n-0.2335237\n-0.2114791\n-0.2578243\n-0.1333279\n-0.1292795\n-0.1590004\n-0.0910347\n-0.2439421\n0.4030253\n-0.0830456\n-0.1163487\n-0.0983967\n-0.1319913\n-0.0453765\n-0.0556033\n-0.0668728\n0.1018855\n-0.037037\n-0.037037\n-0.018509\n-0.018509\n-0.0261802\n-0.1472876\n-0.1969181\n-0.1843766\n-0.2903361\n-0.0809289\n-1.0077380\n-0.0524143\n-0.0910347\n1.5318854\n-0.1710455\n-0.2141168\n0.5133674\n-0.087129\n-0.4822925\n-0.0614929\n-0.0414158\n0.1222546\n-0.018509\n-0.018509\n-0.018509\n-0.0891026\n-0.0556033\n-0.0490206\n-0.0261802\n-0.0453765\n-0.1752422\n-0.0261802\n-0.2123613\n-0.4223512\n-0.018509\n-0.4268461\n-0.2861546\n-0.0261802\n-0.1222546\n1.3580858\n-0.4047462\n-0.1398328\n-0.037037\n-0.087129\n-0.1279035\n-0.0320695\n-0.2123613\n-0.4018763\n-0.0718576\n-0.4251627\n-0.018509\n-0.3192027\n-0.0453765\n-0.1279035\n1.3693865\n-0.3932108\n-0.1689125\n1.5231625\n-1.2373891\n-0.3053301\n-0.1101443\n1.4074569\n-1.2662447\n-0.1532457\n-0.3377618\n-0.0320695\n0.3873845\n-0.8562253\n1.1096078\n-0.130642\n-0.0614929\n-0.0414158\n-0.1762775\n1.1890784\n-0.9364133\n-0.2088138\n-0.0414158\n0.2931008\n-0.323096\n-0.2985775\n-1.4587283\n-0.3185509\n1.5611942\n-0.23596\n-0.3307969\n-0.683675\n-0.1544121\n-0.1085406\n-0.1752422\n-0.1931338\n0.3666433\n0.125109\n-0.0966069\n-0.0556033\n-0.0261802\n-0.0453765\n-0.1803668\n-0.4402256\n-0.0320695\n-0.6445724\n0.2682439\n-0.1319913\n-0.0524143\n-0.018509\n0.3039876\n-0.1567214\n1.2391648\n-1.023047\n-0.0556033\n-0.1508882\n-0.1567214\n-0.1101443\n-0.0261802\n0.2711665\n-0.1612502\n-1.6927029\n-0.1265135\n1.9822706\n0.7432834\n-0.1117261\n-0.2608328\n-0.0718576\n-0.6032363\n1.6119459\n-0.9526448\n-0.2105938\n-0.0910347\n-0.0414158\n0.2375732\n-0.1612502\n-0.0718576\n-0.0694091\n0.1940858\n-0.1472876\n0.3243873\n-0.0261802\n0.0453765\n-0.1997162\n0.3006139\n-0.0642383\n-0.037037\n0.0586211\n-0.018509\n-0.0414158\n-0.0947847\n-0.0556033\n-0.0524143\n-0.0642383\n-0.2985775\n-0.0490206\n0.3943712\n-0.0642383\n-0.0910347\n-0.1265135\n0.4638573\n-0.3026411\n-0.1678767\n0.7363903\n0.5004295\n-0.7724201\n-0.5071973\n0.7159521\n0.5138006\n-0.5721522\n0.6378834\n-0.2930798\n-1.1303934\n-0.5804016\n-0.9266484\n0.5353755\n-0.1011797\n-0.2742013\n1.0868363\n-0.2498524\n-1.027187\n1.2323877\n-2.261142\n-0.2076629\n-0.9249036\n-0.9241529\n0.5986302\n0.3064753\n0.0330864\n-0.4244944\n-0.2587744\n-0.3595391\n12.6010642\n-0.2858865\n-0.0631394\n1.1441161\n1.3949339\n0.9180953\n11.87060\n-0.2235685\n-0.0947847\n0.5351371\n-0.4324394\n0.0642383\n-0.1656675\n-0.1634722\n-0.074227\n-1.3240743\n-0.2070212\n-0.1448419\n0.3365019\n-0.018509\n-0.2532614\n-0.173155\n-0.0694091\n0.606934\n-0.2114791\n-0.074227\n-0.0586211\n-0.1018855\n-0.1959779\n-0.1236896\n-0.3172448\n-0.1912176\n-0.2667738\n-0.2447291\n-0.1813765\n-0.1132868\n4.9595195\n-0.4229141\n-0.1578646\n-0.0891026\n-0.2455142\n-0.2167279\n-0.2985775\n-0.2335237\n-0.2114791\n-0.2578243\n-0.1333279\n-0.1292795\n-0.1590004\n-0.0910347\n-0.2439421\n0.4030253\n-0.0830456\n-0.1163487\n-0.0983967\n-0.1319913\n-0.0453765\n-0.0556033\n-0.0668728\n0.1018855\n-0.037037\n-0.037037\n-0.018509\n-0.018509\n-0.0261802\n-0.1472876\n-0.1969181\n-0.1843766\n-0.2903361\n-0.0809289\n-1.0077380\n-0.0524143\n-0.0910347\n-0.6525667\n-0.1710455\n-0.2141168\n0.5133674\n-0.087129\n-0.4822925\n-0.0614929\n-0.0414158\n0.1222546\n-0.018509\n-0.018509\n-0.018509\n-0.0891026\n-0.0556033\n-0.0490206\n-0.0261802\n-0.0453765\n-0.1752422\n-0.0261802\n-0.2123613\n-0.4223512\n-0.018509\n-0.4268461\n-0.2861546\n-0.0261802\n-0.1222546\n1.3580858\n-0.4047462\n-0.1398328\n-0.037037\n-0.087129\n-0.1279035\n-0.0320695\n-0.2123613\n-0.4018763\n-0.0718576\n-0.4251627\n-0.018509\n-0.3192027\n-0.0453765\n-0.1279035\n1.3693865\n-0.3932108\n-0.1689125\n-0.6563038\n0.8078764\n-0.3053301\n-0.1101443\n-0.7102579\n0.7894662\n-0.1532457\n-0.3377618\n-0.0320695\n0.3873845\n-0.8562253\n-0.9009106\n-0.130642\n-0.0614929\n24.1371155\n-0.1762775\n1.1890784\n-0.9364133\n-0.2088138\n-0.0414158\n0.2931008\n-0.323096\n-0.2985775\n0.6852938\n-0.3185509\n1.5611942\n-0.23596\n-0.3307969\n-0.683675\n-0.1544121\n-0.1085406\n-0.1752422\n-0.1931338\n0.3666433\n0.125109\n-0.0966069\n-0.0556033\n-0.0261802\n-0.0453765\n-0.1803668\n-0.4402256\n-0.0320695\n-0.6445724\n0.2682439\n-0.1319913\n-0.0524143\n-0.018509\n0.3039876\n-0.1567214\n-0.8067187\n0.977137\n-0.0556033\n-0.1508882\n-0.1567214\n-0.1101443\n-0.0261802\n0.2711665\n-0.1612502\n0.5905687\n-0.1265135\n-0.5042992\n0.7432834\n-0.1117261\n-0.2608328\n-0.0718576\n-0.6032363\n-0.6201557\n1.0493496\n-0.2105938\n-0.0910347\n-0.0414158\n0.2375732\n-0.1612502\n-0.0718576\n-0.0694091\n0.1940858\n-0.1472876\n0.3243873\n-0.0261802\n0.0453765\n-0.1997162\n0.3006139\n-0.0642383\n-0.037037\n0.0586211\n-0.018509\n-0.0414158\n-0.0947847\n-0.0556033\n-0.0524143\n-0.0642383\n-0.2985775\n-0.0490206\n0.3943712\n-0.0642383\n-0.0910347\n-0.1265135\n0.4638573\n-0.3026411\n\n\n1.3 검증 set 및 Lambda Grid 설정하기\nvalidation_set<- validation_split(train2, prop = 0.3)\n\n \n\nvalidation_set$splits[[1]]$in_id\n##   [1]    4    8   12   13   14   20   27   48   50   58   60   62   65   66   71\n##  [16]   73   83   88   90   91   92   94  102  106  108  111  112  116  118  121\n##  [31]  122  129  135  144  147  150  153  155  156  157  159  161  162  163  168\n##  [46]  173  178  180  181  184  188  191  196  197  198  199  205  207  215  216\n##  [61]  217  218  219  220  226  228  229  230  232  233  234  239  241  242  246\n##  [76]  247  253  254  256  258  262  265  267  268  276  277  278  280  281  283\n##  [91]  300  303  304  306  307  308  311  317  318  324  325  326  328  330  344\n## [106]  346  348  349  352  358  361  362  363  365  368  370  371  383  386  390\n## [121]  400  401  403  404  408  410  411  412  416  421  422  425  431  436  437\n## [136]  439  447  455  458  472  473  478  480  482  484  485  486  488  497  499\n## [151]  501  504  507  508  514  517  519  521  524  527  528  529  531  533  534\n## [166]  535  538  539  541  542  543  544  552  557  558  562  567  568  570  577\n## [181]  580  586  588  590  591  594  597  598  599  601  612  615  617  620  621\n## [196]  622  629  630  635  636  640  643  652  655  658  660  666  668  673  674\n## [211]  677  683  687  689  693  694  696  697  698  702  703  708  712  713  722\n## [226]  728  731  737  741  745  749  754  758  762  764  767  770  775  779  780\n## [241]  781  783  789  796  802  810  820  821  825  827  833  842  843  847  852\n## [256]  853  860  866  869  872  874  876  882  883  893  894  895  897  898  900\n## [271]  905  906  911  917  921  923  932  939  940  941  942  943  948  950  951\n## [286]  958  959  964  966  967  968  969  975  978  981  983  986  989  990  992\n## [301]  997  999 1003 1007 1008 1011 1014 1015 1021 1024 1028 1030 1034 1042 1043\n## [316] 1044 1048 1053 1062 1063 1066 1072 1074 1081 1085 1088 1089 1090 1094 1096\n## [331] 1100 1101 1105 1106 1107 1110 1113 1114 1115 1119 1123 1127 1129 1130 1131\n## [346] 1134 1135 1140 1144 1150 1152 1157 1158 1160 1165 1171 1172 1174 1182 1185\n## [361] 1191 1192 1210 1219 1221 1222 1223 1226 1227 1229 1237 1238 1239 1241 1244\n## [376] 1246 1248 1254 1266 1269 1270 1271 1272 1273 1276 1277 1278 1282 1286 1307\n## [391] 1308 1316 1317 1318 1319 1322 1324 1330 1335 1336 1340 1343 1344 1347 1351\n## [406] 1360 1361 1362 1365 1367 1372 1373 1376 1377 1380 1382 1387 1389 1390 1395\n## [421] 1402 1404 1408 1413 1424 1426 1431 1434 1435 1436 1439 1443 1444 1446 1447\n## [436] 1452 1453 1457 1460\n439/nrow(train)\n## [1] 0.3006849\ntune_spec <- linear_reg(penalty = tune(), mixture = 1) %>%\n  set_engine(\"glmnet\")\n\nlambda_grid <- grid_regular(penalty(), levels = 100)\n0.3는 분석을 위해 남아 있을 표본의 비율 439개로 확인됨 0.3 확인\n\n\n\n2 Coefficient 찾기\n\n2.1 Best Lambda (Lasso)일 때\n## # A tibble: 100 x 7\n##     penalty .metric .estimator  mean     n std_err .config               \n##       <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                 \n##  1 1.00e-10 rmse    standard   0.189     1      NA Preprocessor1_Model001\n##  2 1.26e-10 rmse    standard   0.189     1      NA Preprocessor1_Model002\n##  3 1.59e-10 rmse    standard   0.189     1      NA Preprocessor1_Model003\n##  4 2.01e-10 rmse    standard   0.189     1      NA Preprocessor1_Model004\n##  5 2.54e-10 rmse    standard   0.189     1      NA Preprocessor1_Model005\n##  6 3.20e-10 rmse    standard   0.189     1      NA Preprocessor1_Model006\n##  7 4.04e-10 rmse    standard   0.189     1      NA Preprocessor1_Model007\n##  8 5.09e-10 rmse    standard   0.189     1      NA Preprocessor1_Model008\n##  9 6.43e-10 rmse    standard   0.189     1      NA Preprocessor1_Model009\n## 10 8.11e-10 rmse    standard   0.189     1      NA Preprocessor1_Model010\n## # … with 90 more rows\n## # A tibble: 5 x 7\n##   penalty .metric .estimator  mean     n std_err .config               \n##     <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                 \n## 1 0.0242  rmse    standard   0.164     1      NA Preprocessor1_Model084\n## 2 0.0192  rmse    standard   0.164     1      NA Preprocessor1_Model083\n## 3 0.0152  rmse    standard   0.165     1      NA Preprocessor1_Model082\n## 4 0.0305  rmse    standard   0.165     1      NA Preprocessor1_Model085\n## 5 0.00756 rmse    standard   0.166     1      NA Preprocessor1_Model079\n## [1] 0.02420128\n## # A tibble: 24 x 2\n##    term           estimate\n##    <chr>             <dbl>\n##  1 (Intercept)    12.0    \n##  2 lot_area        0.00351\n##  3 overall_qual    0.135  \n##  4 overall_cond    0.00866\n##  5 year_built      0.0251 \n##  6 year_remod_add  0.0312 \n##  7 bsmt_fin_sf1    0.00413\n##  8 total_bsmt_sf   0.0269 \n##  9 x1st_flr_sf     0.00338\n## 10 gr_liv_area     0.0961 \n## # … with 14 more rows\n다행히도(?) 3가지 방법 모두 같은 독립 변수들을 선택하였다.\n변수들은 다음과 같다.\n\n\n2.2 Best Lambda (Ridge)일 때\ntune_spec2 <- linear_reg(penalty = tune(), mixture = 0) %>%\n  set_engine(\"glmnet\")\n\nworkflow2 <- workflow() %>%\n  add_model(tune_spec2) %>% \n  add_formula(sale_price ~ .)\n\ndoParallel::registerDoParallel()\n\ntune_result2 <- workflow2 %>% \n  tune_grid(validation_set,\n            grid = lambda_grid,\n            metrics = metric_set(rmse))\n\n##rmse root mean square error\n\ntune_result2 %>% \n  collect_metrics()\n## # A tibble: 100 x 7\n##     penalty .metric .estimator  mean     n std_err .config               \n##       <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                 \n##  1 1.00e-10 rmse    standard   0.163     1      NA Preprocessor1_Model001\n##  2 1.26e-10 rmse    standard   0.163     1      NA Preprocessor1_Model002\n##  3 1.59e-10 rmse    standard   0.163     1      NA Preprocessor1_Model003\n##  4 2.01e-10 rmse    standard   0.163     1      NA Preprocessor1_Model004\n##  5 2.54e-10 rmse    standard   0.163     1      NA Preprocessor1_Model005\n##  6 3.20e-10 rmse    standard   0.163     1      NA Preprocessor1_Model006\n##  7 4.04e-10 rmse    standard   0.163     1      NA Preprocessor1_Model007\n##  8 5.09e-10 rmse    standard   0.163     1      NA Preprocessor1_Model008\n##  9 6.43e-10 rmse    standard   0.163     1      NA Preprocessor1_Model009\n## 10 8.11e-10 rmse    standard   0.163     1      NA Preprocessor1_Model010\n## # … with 90 more rows\ntune_result2 %>% show_best()\n## # A tibble: 5 x 7\n##   penalty .metric .estimator  mean     n std_err .config               \n##     <dbl> <chr>   <chr>      <dbl> <int>   <dbl> <chr>                 \n## 1   0.248 rmse    standard   0.151     1      NA Preprocessor1_Model094\n## 2   0.196 rmse    standard   0.151     1      NA Preprocessor1_Model093\n## 3   0.313 rmse    standard   0.151     1      NA Preprocessor1_Model095\n## 4   0.156 rmse    standard   0.151     1      NA Preprocessor1_Model092\n## 5   0.123 rmse    standard   0.152     1      NA Preprocessor1_Model091\ntune_best2 <- tune_result2 %>% select_best(metric = \"rmse\")\ntune_best2$penalty\n## [1] 0.2477076\nRidge_model <- \n  linear_reg(penalty = tune_best2$penalty, # tuned penalty\n             mixture = 0) %>% # lasso: 1, ridge: 0\n  set_engine(\"glmnet\")\n\nRidge_fit <- \n  Ridge_model %>% \n  fit(sale_price ~ ., data = train2)\n\nresult_Ridge <- Ridge_fit %>% \n  tidy() %>% filter (estimate != 0)%>% select(term,estimate)\n\nresult_Ridge\n## # A tibble: 246 x 2\n##    term           estimate\n##    <chr>             <dbl>\n##  1 (Intercept)    12.0    \n##  2 ms_sub_class   -0.00742\n##  3 lot_frontage    0.00448\n##  4 lot_area        0.00969\n##  5 overall_qual    0.0426 \n##  6 overall_cond    0.0214 \n##  7 year_built      0.0124 \n##  8 year_remod_add  0.0173 \n##  9 mas_vnr_area    0.00895\n## 10 bsmt_fin_sf1    0.0117 \n## # … with 236 more rows\nRidge<-train2[seq_len(nrow(lambda_grid)),]%>%select(-sale_price)\nLasso<-train2[seq_len(nrow(lambda_grid)),]%>%select(-sale_price)\n\nIntercept<-c(0)\nRidge<-cbind(Intercept,Ridge)\nLasso<-cbind(Intercept,Lasso)\n\nRidge<-cbind(lambda_grid,Ridge)\nLasso<-cbind(lambda_grid,Lasso)\n\nRidge_t<-as.data.frame(t(Ridge))\nLasso_t<-as.data.frame(t(Lasso))\n\nfor (i in 1:100) {\n  Ridge_t[-1,i]<-coefficient_lambda(lambda_grid$penalty[i],0)\n  Lasso_t[-1,i]<-coefficient_lambda(lambda_grid$penalty[i],1)\n}\n\nRidge_coeffi<-as.data.frame(t(Ridge_t))\nLasso_coeffi<-as.data.frame(t(Lasso_t))\n\nskim(Ridge_coeffi)\nData summary\nName\nRidge_coeffi\nNumber of rows\n100\nNumber of columns\n247\n_______________________\n\nColumn type frequency:\n\nnumeric\n247\n________________________\n\nGroup variables\nNone\nVariable type: numeric\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\npenalty\n0\n1\n0.05\n0.16\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\nIntercept\n0\n1\n12.02\n0.00\n12.02\n12.02\n12.02\n12.02\n12.02\n▁▁▁▇▁\nms_sub_class\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nlot_frontage\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▇▁▁▁▁\nlot_area\n0\n1\n0.01\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\noverall_qual\n0\n1\n0.06\n0.01\n0.03\n0.06\n0.06\n0.06\n0.06\n▁▁▁▁▇\noverall_cond\n0\n1\n0.03\n0.01\n0.01\n0.03\n0.03\n0.03\n0.03\n▁▁▁▁▇\nyear_built\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nyear_remod_add\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nmas_vnr_area\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▇▁▁▁▁\nbsmt_fin_sf1\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▇▁▁▁▁\nbsmt_fin_sf2\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nbsmt_unf_sf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▇▁▁▁▁\ntotal_bsmt_sf\n0\n1\n0.02\n0.00\n0.01\n0.01\n0.01\n0.01\n0.02\n▇▁▁▁▁\nx1st_flr_sf\n0\n1\n0.03\n0.00\n0.02\n0.03\n0.03\n0.03\n0.03\n▁▁▁▁▇\nx2nd_flr_sf\n0\n1\n0.02\n0.00\n0.01\n0.03\n0.03\n0.03\n0.03\n▁▁▁▁▇\nlow_qual_fin_sf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\ngr_liv_area\n0\n1\n0.04\n0.00\n0.02\n0.04\n0.04\n0.04\n0.04\n▁▁▁▁▇\nbsmt_full_bath\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nbsmt_half_bath\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▇▁\nfull_bath\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nhalf_bath\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nbedroom_abv_gr\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▇▁▁▁▁\nkitchen_abv_gr\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\ntot_rms_abv_grd\n0\n1\n0.02\n0.00\n0.02\n0.02\n0.02\n0.02\n0.02\n▁▁▁▇▁\nfireplaces\n0\n1\n0.02\n0.00\n0.02\n0.02\n0.02\n0.02\n0.02\n▁▁▇▁▁\ngarage_yr_blt\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.01\n▇▁▁▁▁\ngarage_cars\n0\n1\n0.03\n0.00\n0.02\n0.03\n0.03\n0.03\n0.03\n▁▁▁▁▇\ngarage_area\n0\n1\n0.02\n0.00\n0.02\n0.02\n0.02\n0.02\n0.02\n▇▁▁▁▁\nwood_deck_sf\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nopen_porch_sf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▇▁▁▁▁\nenclosed_porch\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nx3ssn_porch\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nscreen_porch\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\npool_area\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nmisc_val\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▇▁▁\nmo_sold\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nyr_sold\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nms_zoning_FV\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nms_zoning_RH\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nms_zoning_RL\n0\n1\n0.02\n0.00\n0.01\n0.03\n0.03\n0.03\n0.03\n▁▁▁▁▇\nms_zoning_RM\n0\n1\n0.01\n0.01\n-0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nstreet_Pave\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nalley_Pave\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nlot_shape_IR2\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nlot_shape_IR3\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nlot_shape_Reg\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nland_contour_HLS\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nland_contour_Low\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nland_contour_Lvl\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nutilities_NoSeWa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nlot_config_CulDSac\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nlot_config_FR2\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nlot_config_FR3\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nlot_config_Inside\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nland_slope_Mod\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nland_slope_Sev\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nneighborhood_Blueste\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nneighborhood_BrDale\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nneighborhood_BrkSide\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▇▁▁\nneighborhood_ClearCr\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nneighborhood_CollgCr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nneighborhood_Crawfor\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nneighborhood_Edwards\n0\n1\n-0.02\n0.00\n-0.02\n-0.02\n-0.02\n-0.02\n-0.01\n▇▁▁▁▁\nneighborhood_Gilbert\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▇▁\nneighborhood_IDOTRR\n0\n1\n-0.02\n0.00\n-0.02\n-0.02\n-0.02\n-0.02\n-0.01\n▇▁▁▁▁\nneighborhood_MeadowV\n0\n1\n-0.02\n0.00\n-0.02\n-0.02\n-0.02\n-0.02\n-0.01\n▇▁▁▁▁\nneighborhood_Mitchel\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nneighborhood_NAmes\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nneighborhood_NoRidge\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nneighborhood_NPkVill\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nneighborhood_NridgHt\n0\n1\n0.03\n0.00\n0.01\n0.03\n0.03\n0.03\n0.03\n▁▁▁▁▇\nneighborhood_NWAmes\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nneighborhood_OldTown\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nneighborhood_Sawyer\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nneighborhood_SawyerW\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nneighborhood_Somerst\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nneighborhood_StoneBr\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nneighborhood_SWISU\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nneighborhood_Timber\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nneighborhood_Veenker\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\ncondition1_Feedr\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\ncondition1_Norm\n0\n1\n0.02\n0.00\n0.00\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\ncondition1_PosA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\ncondition1_PosN\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\ncondition1_RRAe\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\ncondition1_RRAn\n0\n1\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\ncondition1_RRNe\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▇▁▁▁\ncondition1_RRNn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\ncondition2_Feedr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\ncondition2_Norm\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\ncondition2_PosA\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\ncondition2_PosN\n0\n1\n-0.02\n0.00\n-0.02\n-0.02\n-0.02\n-0.02\n0.00\n▇▁▁▁▁\ncondition2_RRAe\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\ncondition2_RRAn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\ncondition2_RRNn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nbldg_type_X2fmCon\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nbldg_type_Duplex\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nbldg_type_Twnhs\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n-0.01\n▇▁▁▁▁\nbldg_type_TwnhsE\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nhouse_style_X1.5Unf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nhouse_style_X1Story\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▇▁\nhouse_style_X2.5Fin\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nhouse_style_X2.5Unf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nhouse_style_X2Story\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.01\n▇▁▁▁▁\nhouse_style_SFoyer\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nhouse_style_SLvl\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nroof_style_Gable\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n-0.01\n▇▁▁▁▁\nroof_style_Gambrel\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nroof_style_Hip\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▇▁▁▁▁\nroof_style_Mansard\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nroof_style_Shed\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nroof_matl_CompShg\n0\n1\n0.03\n0.01\n0.00\n0.03\n0.03\n0.03\n0.03\n▁▁▁▁▇\nroof_matl_Membran\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nroof_matl_Metal\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nroof_matl_Roll\n0\n1\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nroof_matl_Tar.Grv\n0\n1\n0.02\n0.01\n0.00\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nroof_matl_WdShake\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nroof_matl_WdShngl\n0\n1\n0.02\n0.00\n0.00\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nexterior1st_AsphShn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nexterior1st_BrkComm\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nexterior1st_BrkFace\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nexterior1st_CBlock\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior1st_CemntBd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nexterior1st_HdBoard\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▇▁▁▁\nexterior1st_ImStucc\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nexterior1st_MetalSd\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nexterior1st_Plywood\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior1st_Stone\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior1st_Stucco\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior1st_VinylSd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior1st_Wd.Sdng\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nexterior1st_WdShing\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior2nd_AsphShn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior2nd_Brk.Cmn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior2nd_BrkFace\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nexterior2nd_CBlock\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior2nd_CmentBd\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nexterior2nd_HdBoard\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior2nd_ImStucc\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▇▁▁▁\nexterior2nd_MetalSd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▇▁▁▁\nexterior2nd_Other\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nexterior2nd_Plywood\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior2nd_Stone\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nexterior2nd_Stucco\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nexterior2nd_VinylSd\n0\n1\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nexterior2nd_Wd.Sdng\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nexterior2nd_Wd.Shng\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nmas_vnr_type_BrkFace\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nmas_vnr_type_None\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nmas_vnr_type_Stone\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▇▁▁▁▁\nexter_qual_Fa\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexter_qual_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▇▁▁▁▁\nexter_qual_TA\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n-0.01\n▁▁▁▁▇\nexter_cond_Fa\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n-0.01\n▁▁▁▁▇\nexter_cond_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nexter_cond_Po\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexter_cond_TA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nfoundation_CBlock\n0\n1\n0.00\n0.00\n-0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nfoundation_PConc\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nfoundation_Slab\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nfoundation_Stone\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nfoundation_Wood\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nbsmt_qual_Fa\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nbsmt_qual_Gd\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nbsmt_qual_TA\n0\n1\n-0.02\n0.00\n-0.02\n-0.02\n-0.02\n-0.02\n-0.01\n▇▁▁▁▁\nbsmt_cond_Gd\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nbsmt_cond_Po\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nbsmt_cond_TA\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nbsmt_exposure_Gd\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nbsmt_exposure_Mn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nbsmt_exposure_No\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n-0.01\n▁▁▇▁▁\nbsmt_fin_type1_BLQ\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nbsmt_fin_type1_GLQ\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▇▁▁▁▁\nbsmt_fin_type1_LwQ\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nbsmt_fin_type1_Rec\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nbsmt_fin_type1_Unf\n0\n1\n-0.02\n0.00\n-0.02\n-0.02\n-0.02\n-0.02\n-0.01\n▇▁▁▁▁\nbsmt_fin_type2_BLQ\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nbsmt_fin_type2_GLQ\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nbsmt_fin_type2_LwQ\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nbsmt_fin_type2_Rec\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nbsmt_fin_type2_Unf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nheating_GasA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nheating_GasW\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nheating_Grav\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nheating_OthW\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nheating_Wall\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nheating_qc_Fa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nheating_qc_Gd\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nheating_qc_Po\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nheating_qc_TA\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n-0.01\n▇▁▁▁▁\ncentral_air_Y\n0\n1\n0.02\n0.00\n0.01\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nelectrical_FuseF\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nelectrical_FuseP\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nelectrical_Mix\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nelectrical_SBrkr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nkitchen_qual_Fa\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n-0.01\n▇▁▁▁▁\nkitchen_qual_Gd\n0\n1\n-0.01\n0.00\n-0.02\n-0.02\n-0.02\n-0.02\n0.00\n▇▁▁▁▁\nkitchen_qual_TA\n0\n1\n-0.02\n0.00\n-0.02\n-0.02\n-0.02\n-0.02\n-0.01\n▇▁▁▁▁\nfunctional_Maj2\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n-0.01\n▇▁▁▁▁\nfunctional_Min1\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nfunctional_Min2\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nfunctional_Mod\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nfunctional_Sev\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nfunctional_Typ\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nfireplace_qu_Fa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nfireplace_qu_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nfireplace_qu_Po\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nfireplace_qu_TA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\ngarage_type_Attchd\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\ngarage_type_Basment\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\ngarage_type_BuiltIn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▇▁▁▁▁\ngarage_type_CarPort\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\ngarage_type_Detchd\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\ngarage_finish_RFn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\ngarage_finish_Unf\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n-0.01\n▁▁▁▁▇\ngarage_qual_Fa\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\ngarage_qual_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\ngarage_qual_Po\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\ngarage_qual_TA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\ngarage_cond_Fa\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\ngarage_cond_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▇▁▁\ngarage_cond_Po\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\ngarage_cond_TA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\npaved_drive_P\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\npaved_drive_Y\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▇▁\npool_qc_Fa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\npool_qc_Gd\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nfence_GdWo\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▁\nfence_MnPrv\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nfence_MnWw\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nmisc_feature_Othr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nmisc_feature_Shed\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nmisc_feature_TenC\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nsale_type_Con\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nsale_type_ConLD\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nsale_type_ConLI\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nsale_type_ConLw\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nsale_type_CWD\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nsale_type_New\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nsale_type_Oth\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nsale_type_WD\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nsale_condition_AdjLand\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nsale_condition_Alloca\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nsale_condition_Family\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nsale_condition_Normal\n0\n1\n0.02\n0.00\n0.00\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nsale_condition_Partial\n0\n1\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n0.01\n▁▁▁▁▇\nskim(Lasso_coeffi)\nData summary\nName\nLasso_coeffi\nNumber of rows\n100\nNumber of columns\n247\n_______________________\n\nColumn type frequency:\n\nnumeric\n247\n________________________\n\nGroup variables\nNone\nVariable type: numeric\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\npenalty\n0\n1\n0.05\n0.16\n0.00\n0.00\n0.00\n0.00\n1.00\n▇▁▁▁▁\nIntercept\n0\n1\n12.02\n0.00\n12.02\n12.02\n12.02\n12.02\n12.02\n▇▁▁▁▁\nms_sub_class\n0\n1\n-0.01\n0.01\n-0.02\n-0.02\n-0.02\n-0.01\n0.00\n▇▁▁▁▂\nlot_frontage\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nlot_area\n0\n1\n0.02\n0.01\n0.00\n0.01\n0.02\n0.02\n0.02\n▂▁▁▁▇\noverall_qual\n0\n1\n0.07\n0.03\n0.00\n0.06\n0.06\n0.07\n0.16\n▁▇▂▁▂\noverall_cond\n0\n1\n0.03\n0.02\n0.00\n0.04\n0.04\n0.04\n0.04\n▂▁▁▁▇\nyear_built\n0\n1\n0.04\n0.02\n0.00\n0.04\n0.06\n0.06\n0.06\n▁▁▁▁▇\nyear_remod_add\n0\n1\n0.02\n0.01\n0.00\n0.02\n0.02\n0.02\n0.03\n▁▁▇▁▁\nmas_vnr_area\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▇▁▁\nbsmt_fin_sf1\n0\n1\n0.02\n0.01\n0.00\n0.00\n0.03\n0.03\n0.03\n▃▁▁▁▇\nbsmt_fin_sf2\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nbsmt_unf_sf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▇▁▁\ntotal_bsmt_sf\n0\n1\n0.03\n0.01\n0.00\n0.02\n0.03\n0.03\n0.03\n▁▁▁▁▇\nx1st_flr_sf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▁▇▁▁▁\nx2nd_flr_sf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▇▁▁\nlow_qual_fin_sf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▅\ngr_liv_area\n0\n1\n0.10\n0.03\n0.00\n0.10\n0.11\n0.11\n0.11\n▁▁▁▁▇\nbsmt_full_bath\n0\n1\n0.01\n0.01\n0.00\n0.01\n0.01\n0.01\n0.02\n▂▁▇▁▁\nbsmt_half_bath\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nfull_bath\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▂▁▁▇▂\nhalf_bath\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▂▁▁▁▇\nbedroom_abv_gr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nkitchen_abv_gr\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▂\ntot_rms_abv_grd\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.02\n▂▁▇▁▁\nfireplaces\n0\n1\n0.01\n0.01\n0.00\n0.01\n0.01\n0.01\n0.02\n▁▁▁▇▂\ngarage_yr_blt\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\ngarage_cars\n0\n1\n0.02\n0.01\n0.00\n0.02\n0.02\n0.02\n0.05\n▁▇▁▁▂\ngarage_area\n0\n1\n0.02\n0.01\n0.00\n0.01\n0.03\n0.03\n0.03\n▂▁▁▁▇\nwood_deck_sf\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▂▁▁▁▇\nopen_porch_sf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nenclosed_porch\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nx3ssn_porch\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nscreen_porch\n0\n1\n0.01\n0.01\n0.00\n0.01\n0.02\n0.02\n0.02\n▂▁▁▁▇\npool_area\n0\n1\n0.01\n0.01\n-0.01\n0.00\n0.01\n0.01\n0.01\n▁▃▁▁▇\nmisc_val\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▆\nmo_sold\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nyr_sold\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nms_zoning_FV\n0\n1\n0.06\n0.04\n0.00\n0.00\n0.09\n0.09\n0.09\n▃▁▁▁▇\nms_zoning_RH\n0\n1\n0.03\n0.02\n0.00\n0.00\n0.04\n0.04\n0.04\n▃▁▁▁▇\nms_zoning_RL\n0\n1\n0.11\n0.07\n0.00\n0.02\n0.17\n0.17\n0.17\n▃▁▁▁▇\nms_zoning_RM\n0\n1\n0.09\n0.06\n-0.02\n0.00\n0.13\n0.13\n0.13\n▃▁▁▁▇\nstreet_Pave\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▂▁▁▁▇\nalley_Pave\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nlot_shape_IR2\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▂▁▁▁▇\nlot_shape_IR3\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nlot_shape_Reg\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nland_contour_HLS\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nland_contour_Low\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▅\nland_contour_Lvl\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nutilities_NoSeWa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nlot_config_CulDSac\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▂▁▁▇▁\nlot_config_FR2\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nlot_config_FR3\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nlot_config_Inside\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nland_slope_Mod\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nland_slope_Sev\n0\n1\n-0.01\n0.01\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nneighborhood_Blueste\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nneighborhood_BrDale\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nneighborhood_BrkSide\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▇▁▁▂\nneighborhood_ClearCr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▂▁▇▂▁\nneighborhood_CollgCr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▅\nneighborhood_Crawfor\n0\n1\n0.02\n0.01\n0.00\n0.02\n0.02\n0.02\n0.02\n▂▁▁▁▇\nneighborhood_Edwards\n0\n1\n-0.02\n0.01\n-0.02\n-0.02\n-0.02\n-0.01\n0.00\n▇▁▁▁▂\nneighborhood_Gilbert\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▆\nneighborhood_IDOTRR\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▁▁▇▁▂\nneighborhood_MeadowV\n0\n1\n-0.01\n0.01\n-0.02\n-0.02\n-0.02\n-0.01\n0.00\n▇▁▁▁▂\nneighborhood_Mitchel\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nneighborhood_NAmes\n0\n1\n-0.01\n0.01\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nneighborhood_NoRidge\n0\n1\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▃▁▇▂▂\nneighborhood_NPkVill\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▇▁▁▁\nneighborhood_NridgHt\n0\n1\n0.02\n0.01\n0.00\n0.02\n0.02\n0.02\n0.03\n▂▁▁▇▁\nneighborhood_NWAmes\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nneighborhood_OldTown\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▂▁▁▃\nneighborhood_Sawyer\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▅\nneighborhood_SawyerW\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nneighborhood_Somerst\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.02\n▂▇▁▁▁\nneighborhood_StoneBr\n0\n1\n0.01\n0.01\n0.00\n0.02\n0.02\n0.02\n0.02\n▂▁▁▁▇\nneighborhood_SWISU\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▁\nneighborhood_Timber\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▇▁▂\nneighborhood_Veenker\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▂▁▁▁▇\ncondition1_Feedr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▁▃▁▁▇\ncondition1_Norm\n0\n1\n0.02\n0.01\n0.00\n0.01\n0.03\n0.03\n0.03\n▂▁▁▁▇\ncondition1_PosA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\ncondition1_PosN\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\ncondition1_RRAe\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▂▇▁▁▃\ncondition1_RRAn\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\ncondition1_RRNe\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\ncondition1_RRNn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\ncondition2_Feedr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\ncondition2_Norm\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\ncondition2_PosA\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\ncondition2_PosN\n0\n1\n-0.02\n0.01\n-0.03\n-0.03\n-0.03\n-0.02\n0.00\n▇▁▁▁▂\ncondition2_RRAe\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\ncondition2_RRAn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\ncondition2_RRNn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▆▁▁▇\nbldg_type_X2fmCon\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nbldg_type_Duplex\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▆▁▁▁▇\nbldg_type_Twnhs\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▁▁▇▁▂\nbldg_type_TwnhsE\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▇▃\nhouse_style_X1.5Unf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nhouse_style_X1Story\n0\n1\n-0.01\n0.01\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▅\nhouse_style_X2.5Fin\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nhouse_style_X2.5Unf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nhouse_style_X2Story\n0\n1\n-0.01\n0.01\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nhouse_style_SFoyer\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▅\nhouse_style_SLvl\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▅▁▁\nroof_style_Gable\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▇▃\nroof_style_Gambrel\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▆▁▁▁▇\nroof_style_Hip\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▇▁▁\nroof_style_Mansard\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nroof_style_Shed\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.02\n0.02\n0.02\n▃▁▁▁▇\nroof_matl_CompShg\n0\n1\n0.22\n0.14\n0.00\n0.00\n0.32\n0.32\n0.32\n▃▁▁▁▇\nroof_matl_Membran\n0\n1\n0.04\n0.02\n0.00\n0.00\n0.06\n0.06\n0.06\n▃▁▁▁▇\nroof_matl_Metal\n0\n1\n0.04\n0.02\n0.00\n0.00\n0.05\n0.05\n0.05\n▃▁▁▁▇\nroof_matl_Roll\n0\n1\n0.03\n0.02\n0.00\n0.00\n0.05\n0.05\n0.05\n▃▁▁▁▇\nroof_matl_Tar.Grv\n0\n1\n0.16\n0.10\n0.00\n0.00\n0.24\n0.24\n0.24\n▃▁▁▁▇\nroof_matl_WdShake\n0\n1\n0.10\n0.06\n0.00\n0.00\n0.14\n0.14\n0.14\n▃▁▁▁▇\nroof_matl_WdShngl\n0\n1\n0.09\n0.06\n0.00\n0.01\n0.13\n0.13\n0.13\n▃▁▁▁▇\nexterior1st_AsphShn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▅\nexterior1st_BrkComm\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▂\nexterior1st_BrkFace\n0\n1\n0.01\n0.01\n0.00\n0.01\n0.02\n0.02\n0.02\n▂▁▁▁▇\nexterior1st_CBlock\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nexterior1st_CemntBd\n0\n1\n-0.01\n0.01\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▅\nexterior1st_HdBoard\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior1st_ImStucc\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nexterior1st_MetalSd\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.02\n0.02\n0.02\n▅▁▁▁▇\nexterior1st_Plywood\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nexterior1st_Stone\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nexterior1st_Stucco\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nexterior1st_VinylSd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nexterior1st_Wd.Sdng\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nexterior1st_WdShing\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nexterior2nd_AsphShn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nexterior2nd_Brk.Cmn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nexterior2nd_BrkFace\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nexterior2nd_CBlock\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▅\nexterior2nd_CmentBd\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.02\n0.02\n0.02\n▃▁▁▁▇\nexterior2nd_HdBoard\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▆▁▁▁▇\nexterior2nd_ImStucc\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nexterior2nd_MetalSd\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▅\nexterior2nd_Other\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nexterior2nd_Plywood\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▆▁▁▁▇\nexterior2nd_Stone\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nexterior2nd_Stucco\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexterior2nd_VinylSd\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nexterior2nd_Wd.Sdng\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.02\n0.02\n0.02\n▅▁▁▁▇\nexterior2nd_Wd.Shng\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▃▇\nmas_vnr_type_BrkFace\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nmas_vnr_type_None\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nmas_vnr_type_Stone\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nexter_qual_Fa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▃▇\nexter_qual_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nexter_qual_TA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▃▁▇\nexter_cond_Fa\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nexter_cond_Gd\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▅\nexter_cond_Po\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▂▁▁▃\nexter_cond_TA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▇▅▁▁▁\nfoundation_CBlock\n0\n1\n0.01\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nfoundation_PConc\n0\n1\n0.01\n0.01\n0.00\n0.01\n0.02\n0.02\n0.02\n▂▁▁▂▇\nfoundation_Slab\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▇▁▁▃\nfoundation_Stone\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nfoundation_Wood\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nbsmt_qual_Fa\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nbsmt_qual_Gd\n0\n1\n-0.01\n0.01\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nbsmt_qual_TA\n0\n1\n-0.01\n0.01\n-0.02\n-0.02\n-0.02\n0.00\n0.00\n▇▁▁▁▃\nbsmt_cond_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nbsmt_cond_Po\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nbsmt_cond_TA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nbsmt_exposure_Gd\n0\n1\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n0.01\n▂▁▁▇▁\nbsmt_exposure_Mn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nbsmt_exposure_No\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▂\nbsmt_fin_type1_BLQ\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▇▁▁▅\nbsmt_fin_type1_GLQ\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▂▁▁▁▇\nbsmt_fin_type1_LwQ\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nbsmt_fin_type1_Rec\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nbsmt_fin_type1_Unf\n0\n1\n-0.01\n0.00\n-0.02\n-0.01\n-0.01\n-0.01\n0.00\n▁▁▁▇▂\nbsmt_fin_type2_BLQ\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nbsmt_fin_type2_GLQ\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▇▁▁▁\nbsmt_fin_type2_LwQ\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▅\nbsmt_fin_type2_Rec\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▅\nbsmt_fin_type2_Unf\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▆\nheating_GasA\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nheating_GasW\n0\n1\n0.01\n0.01\n0.00\n0.01\n0.01\n0.01\n0.01\n▃▁▂▁▇\nheating_Grav\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▂▁▇▁▃\nheating_OthW\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▂▃▁▁▇\nheating_Wall\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nheating_qc_Fa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nheating_qc_Gd\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nheating_qc_Po\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nheating_qc_TA\n0\n1\n-0.01\n0.01\n-0.02\n-0.02\n-0.02\n-0.01\n0.00\n▇▁▁▁▂\ncentral_air_Y\n0\n1\n0.01\n0.01\n0.00\n0.02\n0.02\n0.02\n0.02\n▁▁▁▁▇\nelectrical_FuseF\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▅▁▁▁\nelectrical_FuseP\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nelectrical_Mix\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▅\nelectrical_SBrkr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nkitchen_qual_Fa\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nkitchen_qual_Gd\n0\n1\n-0.02\n0.01\n-0.03\n-0.03\n-0.03\n0.00\n0.00\n▇▁▁▁▃\nkitchen_qual_TA\n0\n1\n-0.02\n0.01\n-0.03\n-0.03\n-0.03\n-0.01\n0.00\n▇▁▁▁▃\nfunctional_Maj2\n0\n1\n-0.01\n0.01\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▂\nfunctional_Min1\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nfunctional_Min2\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nfunctional_Mod\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nfunctional_Sev\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▇▁▁▁▂\nfunctional_Typ\n0\n1\n0.01\n0.01\n0.00\n0.01\n0.02\n0.02\n0.02\n▂▁▂▁▇\nfireplace_qu_Fa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▁▁▁▁▇\nfireplace_qu_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\nfireplace_qu_Po\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nfireplace_qu_TA\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\ngarage_type_Attchd\n0\n1\n0.02\n0.02\n0.00\n0.00\n0.03\n0.03\n0.03\n▅▁▁▁▇\ngarage_type_Basment\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\ngarage_type_BuiltIn\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\ngarage_type_CarPort\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▅▁▁▁▇\ngarage_type_Detchd\n0\n1\n0.02\n0.02\n0.00\n0.00\n0.03\n0.03\n0.03\n▅▁▁▁▇\ngarage_finish_RFn\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\ngarage_finish_Unf\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n-0.01\n0.00\n▁▁▇▁▁\ngarage_qual_Fa\n0\n1\n-0.02\n0.02\n-0.04\n-0.04\n-0.04\n0.00\n0.00\n▇▁▁▁▅\ngarage_qual_Gd\n0\n1\n-0.01\n0.01\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▃▂\ngarage_qual_Po\n0\n1\n-0.01\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▅\ngarage_qual_TA\n0\n1\n-0.02\n0.01\n-0.03\n-0.03\n-0.03\n0.00\n0.00\n▇▁▁▁▅\ngarage_cond_Fa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▂▁▃▁▇\ngarage_cond_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▆▁▁▁▇\ngarage_cond_Po\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\ngarage_cond_TA\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n▆▁▁▁▇\npaved_drive_P\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▆\npaved_drive_Y\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▂▁▁▁▇\npool_qc_Fa\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▆▁▁▁▇\npool_qc_Gd\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▁▃▁▁▇\nfence_GdWo\n0\n1\n0.00\n0.00\n-0.01\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▂\nfence_MnPrv\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nfence_MnWw\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▂▇▁▁▃\nmisc_feature_Othr\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▅\nmisc_feature_Shed\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▅▁\nmisc_feature_TenC\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nsale_type_Con\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nsale_type_ConLD\n0\n1\n0.01\n0.01\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nsale_type_ConLI\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▇▁▁▁▃\nsale_type_ConLw\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nsale_type_CWD\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nsale_type_New\n0\n1\n0.02\n0.01\n0.00\n0.02\n0.02\n0.02\n0.03\n▂▁▁▇▂\nsale_type_Oth\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▃▁▁▁▇\nsale_type_WD\n0\n1\n0.00\n0.00\n-0.01\n-0.01\n-0.01\n0.00\n0.00\n▇▁▁▁▃\nsale_condition_AdjLand\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.01\n0.01\n0.01\n▃▁▁▁▇\nsale_condition_Alloca\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▃▁▁▁▇\nsale_condition_Family\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n▅▁▁▁▇\nsale_condition_Normal\n0\n1\n0.02\n0.01\n0.00\n0.02\n0.03\n0.03\n0.03\n▂▁▁▁▇\nsale_condition_Partial\n0\n1\n0.00\n0.00\n0.00\n0.00\n0.00\n0.00\n0.01\n▃▁▁▁▇\nggplot(data=Ridge_coeffi) + \n  geom_line(aes(x=penalty,y=ms_sub_class), color=\"1\") + \n  geom_line(aes(x=penalty,y=lot_frontage), color=\"2\") +\n  geom_line(aes(x=penalty,y=lot_area), color=\"3\") +\n  geom_line(aes(x=penalty,y=overall_qual,), color=\"4\") + \n  geom_line(aes(x=penalty,y=overall_cond), color=\"5\") +\n  geom_line(aes(x=penalty,y=year_built), color=\"6\") +\n  geom_line(aes(x=penalty,y=year_remod_add), color=\"7\")+\n  geom_line(aes(x=penalty,y=mas_vnr_area), color=\"8\")+\n  geom_line(aes(x=penalty,y=bsmt_fin_sf1), color=\"9\")+\n  geom_line(aes(x=penalty,y=bsmt_fin_sf2), color=\"10\")+\n  geom_line(aes(x=penalty,y=bsmt_unf_sf), color=\"11\")\n\nggplot(data=Lasso_coeffi) + \n  geom_line(aes(x=penalty,y=ms_sub_class), color=\"1\") + \n  geom_line(aes(x=penalty,y=lot_frontage), color=\"2\") +\n  geom_line(aes(x=penalty,y=lot_area), color=\"3\") +\n  geom_line(aes(x=penalty,y=overall_qual,), color=\"4\") + \n  geom_line(aes(x=penalty,y=overall_cond), color=\"5\") +\n  geom_line(aes(x=penalty,y=year_built), color=\"6\") +\n  geom_line(aes(x=penalty,y=year_remod_add), color=\"7\")+\n  geom_line(aes(x=penalty,y=mas_vnr_area), color=\"8\")+\n  geom_line(aes(x=penalty,y=bsmt_fin_sf1), color=\"9\")+\n  geom_line(aes(x=penalty,y=bsmt_fin_sf2), color=\"10\")+\n  geom_line(aes(x=penalty,y=bsmt_unf_sf), color=\"11\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// add bootstrap table styles to pandoc tables\nfunction bootstrapStylePandocTables() {\n  $('tr.odd').parent('tbody').parent('table').addClass('table table-condensed');\n}\n$(document).ready(function () {\n  bootstrapStylePandocTables();\n});\n\n\n\n$(document).ready(function () {\n  window.buildTabsets(\"TOC\");\n});\n\n$(document).ready(function () {\n  $('.tabset-dropdown > .nav-tabs > li').click(function () {\n    $(this).parent().toggleClass('nav-tabs-open');\n  });\n});\n\n$(document).ready(function () {\n  window.initializeCodeFolding(\"show\" === \"show\");\n});\n\n  (function () {\n    var script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src  = \"https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\";\n    document.getElementsByTagName(\"head\")[0].appendChild(script);\n  })();\n",
      "last_modified": "2021-04-15T13:43:47+00:00"
    },
    {
      "path": "TS.html",
      "title": "Time Series",
      "author": [],
      "contents": "\n(None)\n\n\n\n",
      "last_modified": "2021-03-02T05:31:03+00:00"
    }
  ],
  "collections": ["posts/posts.json"]
}
